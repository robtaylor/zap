/*	shell.c
	© James Aylett	*/

#include "shell.h"

int main(int argc, char *argv[])
{
  int i;
  if(argc>1)
  {
    for(i=1; i<argc; i++)
    {
      if (!stricmp(argv[i], "-prerpc"))
      	RPCKeyboard=FALSE;
      if (!stricmp(argv[i], "-filerpatch"))
        FilerPatch_Support=TRUE;
      if (!stricmp(argv[i], "-nocos"))
        NoCOS=TRUE;
      if (!stricmp(argv[i], "-strict"))
        Strict=TRUE;
      if (!stricmp(argv[i], "-child"))
        ZapChild=TRUE;
      if (!stricmp(argv[i], "-noconfirm"))
        NoConfirm=TRUE;
      if (!stricmp(argv[i], "-nofiletypes"))
        ConfigureFiletypes=FALSE;
    }
  }

  init();
  atexit(zapconfig_closedown);
  while (exitflag!=TRUE) poll();
//  zapconfig_closedown();
}

int reporterror(int Num_Err, char *Text_Err, int Flags, char *Name)
{
  os_error error;
  error.errnum=Num_Err;
  strcpy(error.errmess,Text_Err);
  return(Wimp_ReportErrorR(&error, Flags, Name));
}

#if 0
/* taken from UnixLib headers */
#define _tolower(c)	(((c) & 31) + '\140')

/* taken from UnixLib sources */
int stricmp (register const char *s1, register const char *s2)
{
  register int i, j;

  do
  {
    i = *s1++, j = *s2++;
    i = isupper (i) ? _tolower (i) : i;
    j = isupper (j) ? _tolower (j) : j;
  }
  while (i && i == j);

  return (i - j);
}

int strnicmp (register const char *s1, register const char *s2, register size_t n)
{
  register int i, j;

  if (!n)
    return (0);

  do
  {
    i = *s1++, j = *s2++;
    i = isupper (i) ? _tolower (i) : i;
    j = isupper (j) ? _tolower (j) : j;
  }
  while (i && i == j && --n);

  return (i - j);
}

char *get_leafname(char *input)
{
  int s;
  s=strlen(input)-1;
  while(input[s]!='.')
  {
    s--;
  }
  return(input+s+1);
}
#endif
