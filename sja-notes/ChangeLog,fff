Change Log	(sja, post v1.40)
----------

99/01/14	&322 executed on startup
		opt_switches b31 => execute &322 even when we're loading files on init
			(E-Vars changed)
99/01/15	MISCOPS 19 to configure opt_switches b31 (Menus and HelpData changed)
		More little bugfixes to token/message use
99/01/19	Started replacing constants with symbols in the source:
		Exceptions, Fonts, Heap, Mode2, Mode3, ModuleBits, Update done.
99/01/20	More of the above.
99/01/21	Will now build properly under Unix (just missing a fully-functional AS).
		stop_operation called as necessary on mouse click in text window
		moved Menus around slightly; 0-9 internal, 10-19 internal mode, 20+ user
		Menu 05 is now "Selection"; shift+alt+ when there's a selection brings
		it up (otherwise alt+ action - Modes menu)
		(The last two mean that the Menus files will all have to change.)
99/01/25	Fixed search ToBuffer/GlobalReplace flags in h.ZapConsts (they were the
		wrong way round). (This didn't matter before, because it's only now
		that we're using symbolic constants whenever accessing opt_switches.)
99/01/27	Started TMF work. I've added a variable to the mode dispatch table;
		d_variabletable (at 2*e_title + 4). This points to the variable table
		for this mode. When (-1), this hasn't been initialised.
		In addition, I've added a block of pointers, initially all (0), which
		are for storing pointers to the MessageTrans blocks for each mode. This
		block is in ws. If (-1), this mode doesn't have a TMF.
		(Change in E-Zapcalls required.)
		TMF functionality: inheritance, variable storage. (Currently untested.)
		Remaining: interpolation, substitution, per-file overrides.
99/01/28	Got Zap building under objasm again (thanks to Dan Ellis). h.ZapVars
		now contains some very strange code :-)
		@GETVAR function, so I can start testing TMFs. (Change to HelpData.)
99/02/01	TMFs: finding, loading, freeing, querying, storing result in variable
		table, lookup in variable table, and inheritance all now work.
99/02/02	Nick Burrett has given me AS sources which work properly under linux.
		This means that I can now build Zap in virtually no time at all :-)
		Also means that daily binary snapshots are here ... probably ought
		to finish some of the code in AS to allow ZapBASIC et al to be built
		under linux as well at some point ...
99/02/04	TMFs: started work on interpolation. Once this is done I'll write some
		clients and document it.
99/02/07	Fixed bugs in h.Macros wrt macros calls preceded by labels. (Was
		trying to put the label on the same line as a conditional - AS appears
		to accept this, which is wrong.)
99/02/09	Fixed a WCBox bug (could delete its window, then attempt to
		run Wimp_CreateMenu -1 where the window *was* the last menu; the
		Wimp appears to have a problem coping with this).
99/02/17	TMFs now work. Various stupidities, including ickle buffer overruns,
		being over-conscientious about incrementing one of my internal data
		pointers, and similar things ... fixed now. Ahem.
		Added documentation (E-Zapcalls contains the spec of the call, and
		Docs.Technical.TMFs is temporarily the place for the definition; it
		will go in the manual at some point).
		E-Library also changed.
		Also actually added Zap_TestIfCloneBase to the dispatch table.
