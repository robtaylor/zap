# Make file for ZapBASIC
# using Acorn tools amu, objasm, link

# For the standard build name:
#	amu
# For alternative build names:
#	amu BUILD=foo
#	amu BUILD=foo-42
#    "-<n>" is automatically appended if you omit it.
# BTW, give 'make' lots of memory ;-)

# For *non*-internationalisation (ie. Zap 1.40-compatible)
#	amu INTL=no
# For internationalisation (ie. Zap 1.41-compatible)
#	amu

# Targets:
#	ZapBASIC	Assemble .s files and link. This is the default
#	ZapBASICHdrs	Remake the automatically-created header files
#	Clean		Wipe the .o and .t (header marker) files

OBJECTS	= o.BASIC o.bastxt o.taskwindow o.ZapBASIC o.Buttons o.Brackets o.Toggle
HEADERS	= t.basic t.bastxt t.taskwindow t.ZapBasic t.Buttons t.Brackets

TARGET		= ZapBASIC
as		= objasm
asflags		= -o $@ -depend !Depend -throwback -stamp -quit
link		= link
linkPartFlags	= -aof
linkFlags	= -bin -B &00000000
ZapS		= <ZapSource$Dir>
ZapB		= <MakeZapBASIC$Dir>

__INTL		= -PD "INTL SETS \"$(INTL)\""
NEWINTL		= "INTL=$(INTL)"

__BUILD		= -PD "BUILD SETS \"$(BUILD)\""
NEWBUILD	= "BUILD=$(BUILD)"

__HIST		= -PD "HIST SETS \"$(HIST)\""
NEWHIST		= "HIST=$(HIST)"

ZapBASIC:	$(OBJECTS) ZapBASICHdrs
		$(link) $(linkFlags) -o $(ZapB).ZapBASIC $(OBJECTS)
		Settype $(ZapB).ZapBASIC Module
		Run $(ZapS).data.MCopy $(ZapB).ZapBASIC <ZapBASIC$Dir>.ZapBASIC
		@Echo Finished ZapBASIC

ZapBASICHdrs:	$(HEADERS)
		@Echo Made headers

Clean:
		IfThere o.* Then Wipe o.* ~CF~R~V
		IfThere t.* Then Wipe t.* ~CF~R~V

Rebuild:
		Remove o.ZapBASIC
		chain:amu $(NEWBUILD)

Revision:
		Stamp h.Version
		chain:amu $(NEWBUILD)

# The .t file date gives the last time the header was created from the file.
# This is usually not the .h date as the .h file is not stamped if the file
# contents doesn't change.

.SUFFIXES: .t .s

.s.t:;		@Run $(ZapS).data.StoH s.$* h.$*
		Create t.$* 0

.s.o:;		$(as) $(asflags) $(__BUILD) $(__INTL) $(__HIST) s.$*


# Dependencies:

t.basic:	s.basic
t.bastxt:	s.bastxt
t.Brackets:	s.Brackets
t.Buttons:	s.Buttons
t.taskwindow:	s.taskwindow
t.Toggle:	s.Toggle
t.ZapBasic:	s.ZapBasic

o.BASIC:	s.BASIC
o.bastxt:	s.bastxt
o.Brackets:	s.Brackets
o.Buttons:	s.Buttons
o.taskwindow:	s.taskwindow
o.Toggle:	s.Toggle
o.ZapBASIC:	s.ZapBASIC

# Dynamic dependencies:
o.BASIC: s.BASIC
o.BASIC: h.ZapBasHdr
o.BASIC: <ZapSource$Dir>.h.System
o.BASIC: <ZapSource$Dir>.h.ZapLibrary
o.BASIC: <ZapSource$Dir>.h.Macros
o.BASIC: h.ZapBasVars
o.BASIC: h.ZapBasic
o.BASIC: h.bastxt
o.BASIC: h.SWIs
o.BASIC: h.Buttons
o.BASIC: h.Brackets
o.bastxt: s.bastxt
o.bastxt: h.ZapBasHdr
o.bastxt: <ZapSource$Dir>.h.System
o.bastxt: <ZapSource$Dir>.h.ZapLibrary
o.bastxt: <ZapSource$Dir>.h.Macros
o.bastxt: h.ZapBasVars
o.bastxt: h.ZapBasic
o.bastxt: h.basic
o.taskwindow: s.taskwindow
o.taskwindow: h.ZapBasHdr
o.taskwindow: <ZapSource$Dir>.h.System
o.taskwindow: <ZapSource$Dir>.h.ZapLibrary
o.taskwindow: <ZapSource$Dir>.h.Macros
o.taskwindow: h.ZapBasVars
o.taskwindow: h.ZapBasic
o.taskwindow: h.basic
o.taskwindow: h.buttons
o.ZapBASIC: s.ZapBASIC
o.ZapBASIC: h.ZapBasHdr
o.ZapBASIC: <ZapSource$Dir>.h.System
o.ZapBASIC: <ZapSource$Dir>.h.ZapLibrary
o.ZapBASIC: <ZapSource$Dir>.h.Macros
o.ZapBASIC: h.ZapBasVars
o.ZapBASIC: h.basic
o.ZapBASIC: h.bastxt
o.ZapBASIC: h.taskwindow
o.ZapBASIC: h.SWIs
o.ZapBASIC: h.Version
o.Buttons: s.Buttons
o.Buttons: h.ZapBasHdr
o.Buttons: <ZapSource$Dir>.h.System
o.Buttons: <ZapSource$Dir>.h.ZapLibrary
o.Buttons: <ZapSource$Dir>.h.Macros
o.Buttons: h.ZapBasVars
o.Buttons: h.ButtonsHdr
o.Brackets: s.Brackets
o.Brackets: h.ZapBasHdr
o.Brackets: <ZapSource$Dir>.h.System
o.Brackets: <ZapSource$Dir>.h.ZapLibrary
o.Brackets: <ZapSource$Dir>.h.Macros
o.Brackets: h.ZapBasVars
o.Brackets: h.ZapBasic
o.Brackets: h.bastxt
o.Brackets: h.SWIs
o.Brackets: h.Buttons
o.Toggle: s.Toggle
o.Toggle: h.ZapBasHdr
o.Toggle: <ZapSource$Dir>.h.System
o.Toggle: <ZapSource$Dir>.h.ZapLibrary
o.Toggle: <ZapSource$Dir>.h.Macros
o.Toggle: h.ZapBasVars
o.Toggle: h.ZapBasic
o.Toggle: h.bastxt
o.Toggle: h.SWIs
