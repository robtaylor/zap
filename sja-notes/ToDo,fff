Beyond v1.40
============

(Old ToDo list follows at end of file.)

Brief note to everyone
*--------------------*

Hi. This is a list of:

a)	notes about release schedules
b)	bugs in the release version of Zap that I know about. If you have found a bug
	that's not here, tell me about it.
c)	bugs in the development version of Zap. These will pop up and down faster than
	I can keep track of them, but I'll try to keep things vaguely up to date (if
	only for my own use). Some reports in here may be a little cryptic as a result.
d)	things I want to do to the core of Zap, in some form of order. This allows
	people to avoid suggesting things I already want to do, complain bitterly about
	the things I want to do, steal what I want to do and do it themselves if it
	looks like that will be faster, and generally know what I'm doing without my
	having to tell everyone about it explicitly.
e)	things I want to do to extensions, in no order at all.
f)	crazy things I'd like, but probably will migrate completely to linux before
	completing (or possibly even starting).
g)	other things.

James Aylett <dj@zap.uk.eu.org>


Release schedules:
------------------

	- v1.42 scheduled for sometime in February. I'm hoping to wait for
	  a bit more mode cloning support (creation and management via menus).
	  I was hoping for 19th Feb, but it looks like 26th Feb is more likely.
	  
	- v1.43 is the subsequent development work.
	
	- v1.44 is the candidate release phase.
	  
	- v1.45 scheduled for "shortly before Wakefield". Therefore, sometime in
	  March need to look at the documentation and update all of that.
	  
	- Ideally at the start of March take a long look at the outstanding bugs
	  from v1.40, with a view to fixing them for v1.45 (if they're easy,
	  back fix them in v1.40 patch 10 or later).

Bugs outstanding on v1.40:
--------------------------
	- with a long (> width) last line, selecting by dragging a selection downwards:
		a) after a triple-click, doesn't select any of the last logical line
		b) dragging down 'off' the LHS doesn't select any of the last physical line
	  (Tim)
	- BASIC colours 'lr' in lr% as a register in assembler (Reuben)
	- (more a misfeature) throwback moves oldest view on a file, not
	  most recent / one that search was started in (Theo)
	- crash on shift-end? (Chris Bell)
	- RAM transfer from Zap to Impression? "Directory [rubbish] not found" (Chris Bell)
	- BASIC mode: undo falls over sometimes
	- BASIC mode: cursor disappears sometimes?
	- DWExt: incorrectly still refers to !Zap.3rdParty somewhere?
	- double/triple/etc-click dragging - moving backwards selects from
	  start of word/line/etc., not end. Can this easily be altered?
	  Also: new word/line/etc. should be selected as soon as mouse hits start of
	  unit, not end.
	  (Joe Oldak)
	- Ursula crash for QUICKSAVE et al (save_text) with no path (data abort - is
	  r2 getting corrupted on return to Wimp_Poll area?) (Neil)
	  Also reported by Iain Truskett on RISC OS 3.8 ... it appears to be a stack
	  corruption on dropping back to the poll/pollidle loop (DA @ 0x25774 in patch 8,
	  which is (minus 8 for pipelining) the LDMIA r13!,{r2,pc} after the Wimp_PollIdle
	  call. (s.StartCode:call_wimp_poll)
	- close modified -> save -> "older than on disc"; save box remains,
	  window doesn't close (SOMETIMES)
	- multicommand blocks in the wrong place (&30E,&30F - and &322 in 1.41) cause
	  minibuffer to screw up, and don't execute.
	- ZapTeX - wordwrap off, a recognised command: last letter is last possible on
	  line causes ungraceful crash. (Pontus Lurcock)
	- ZapBASIC: sometimes a string array is wrongly coloured (eg: at the start of
	  a line with several spaces before it). Bug is intermittent. (Reuben)
	- NewFile: fix cursor positioning bug
	- FORMATTEXT stops if an unbreakable line exceeds the wrap width.
	- MZAPBOX or menu building has a bug: hanging it off my Program menu fails.
	  Double instantiation perhaps? Falls over (data abort, I think) @ 23E70.
	- MZAPBOX - end < start causes fatal error. (Via out of memory, which may be
	  implicated as well.)
	- TOTALSEL should respect Escape, and use hourglass.
	- WC bug may have reappeared (something I didn't fix properly?)
	- NotifyUser doesn't work properly any more? Looks strange, anyway.

Bugs with v1.41:
----------------
	- font loading code?
	- build under make (sig5?)
	- I've had the error cases for TMFs cause problems once since I thought I'd
	  fixed them. My bet is a very minor buffer overrun in one of the error
	  cases, and which often doesn't make any difference and requires the right
	  conditions to fall over.

Distribution:
-------------
	- finalise internationalisation changes
	- sort out Code.Filters, possibly rewriting DeDupe to be a proper uniq.
	  Alternatively, find the RISC OS ports of GNU text utils, and recompile
	  against the new stubs that handle redirection properly.
	- Code.Utils?
	- Autoload directory. Auto.Preload / Auto.Postload ?
	  ZapAutoload$Preload:, ZapAutoload$Postload: with a RepeatPath command?
	  ZapAutoload$Postquit? Or something ... to clear up HidePtr et al.
	- Then clear out Code.Extensions.
	- Code.EE - does this have to be here?
	- Update all !ReadMe files - ideally make these auto-generating in the
	  distribution release system. Modules.!ReadMe needs playing with a bit.
	- Remove !ZapConfig from Code.Config until it has been updated.
	- copyright dates, etc. etc.
	- ZapUser revamped (in particular, we want different ones for Darren
	  and my configs, broadly speaking; probably Tim's one updated also)
	- Is Docs.Commands still necessary?
	- Is Docs.KeyStrip up to date?
	- Check all extensions and make sure they work properly. Documentation,
	  TMFs, etc. etc. etc.
	- Installer?
	- under CVS (makes everything much easier)

Documentation:
--------------
	- FAQ updated for v1.42 public beta.
	- Change logs :-/
	- Public bug list and public to do list (basically, start doing this file
	  properly).
	- Simon has started work on buttress, the next-gen documentation system.
	  We'll go across to using this once it's in place. At the same time I'll try
	  to add StrongHelp output to it (shouldn't be *too* hard ...).
	- ... then tech docs could go under the same source system as the manual ...
	- ... and obviously bring it back into line with development work.
	- Update thank you list.

Core:
-----

(now in some sort of order)

  the irritating one that I'll do as soon as I have the patience:
	- bit fields use symbols not constants (merely source tidying)

  done (more or less):
  	- startup command
	- MessageTrans-ify (internationalisation)
	- per-mode keymaps
	- TMFs (first phase)

  things currently being done by others:
	- mode cloning - DS work in progress
	- tidying up named keymaps, per-mode keymaps - DS work in progress

  next:
  	- ZapText, ZapUtil things
  		- TMF clients
  		- Internationalise (a la ZapBits)

  in progress:
	- TMFs
		- 'boolean' variables, using t/f strings to indicate value?
		- variable substitution
		- per-file variable overrides (setvar) - export as Zap_ call too
		  (do we allow interpolation? ideally, yes ... would be nice to
		   have % as a special mode name meaning 'in this file'?)
		  This may be tricky to do ...
		- dumpvars command? Same for mode?

  things that look fun and/or incredibly useful:
	- keypresses on a hotkey window
	- throwback sets file title to something useful (internal, plus
	  Message_ThrowbackStart -> Message_TaskNameRq)
	  Probably do this by extending create_throwback to take b31
	  of r0 => r1 gives filename to use (for internal), and
	  b30 => use TaskNameRq to look it up. All code in s.Mode11
	  (also need to investigate s.Commands, s.Search, and think
	  about ZapSpell and ZapMJE).
	- commands in file header

  little things which I'll try to get done pre v1.45:  
	- a generic Autoload directory (or path? - ZapUser:Autoload)
	  (RepeatPath?)

  things I'm leaving to post v1.45:
	- 'tie' two windows together? (or more windows ...)
	- typing replaces selection? technically quite difficult :-/
	- indent/outdent performable on a single line
	- mode info block (replace e_interrogate #14) - leave until v1.45-v1.46 changes
	- some way of including menu help text in the menu definitions
	- configurable print headers and footers

  some other things which I'll do 'eventually' (probably post v1.50):
	- 'window list' a la StrongED (only more so - select windows, and have
	  an equivalent of ALLWINDOWS. Need to modify the search-to-buffer
	  stuff to make this extra useful.)
	- How about a file list, similarly?
	- Revert
	- longer search macros (how long? it appears to be build-time configurable
	  now)
	- shortcuts (ie: expanding abbreviations) - only don't put it in the core

  other things, either unlikely to get done, or fairly heavyweight:
  	- ZapRedraw to do all font caching, probably font menu creation too
  	- ZapRedraw usage locking? So can kill it if unused to save memory?
  	- Protect against loaded modes' modules dying (also command tables). Usage count?
  	  Auto kill when running out of memory?
	- narrowing
	- redefine keystrokes in dialogue boxes (idea from StrongED - probably don't bother)
	- folding

Extensions: (where not mentioned above)
-----------

These aren't unlikely to be touched before v1.45; I'm more concerned in
tracking down bugs.

ZapConfig
	- v1.41 config format
	- other v1.41 additions
	- internationalise alongside Zap?
ZapText	- SwapCase is nice to tokenised modes
ZapProg	- AssembleADRL/X
	- DataAdd et al
	- SWIToName, SWIToNumber
	- header/function/TLD finding (liaise with Tim, check out DWExt)
	- new MAKE/CC etc. commands using TMFs
ZapSEd	- parsing StrongED mode files (plus extensions?) - see core
ZapSGML	- colours based on supplied DTD
ForZap  - uses internal command table (also COMMAND tab completes?)

Other things:
-------------

RCS/CVS for Risc OS, and support within Zap
Perhaps port PuTTY's ssh (scp?) for this?

Probably drop:
--------------

Larch, ZapTerm (=> ssh for Risc OS), ZapW3
Other IDE functions / external tie-in IDE (source browser / makefile management)?

















Things to do
============

									Notes
Core:
-----
e_returnword
	- DELETE "WORD", DELWORDSTART|END	Day ?			Necessary?	?
	  (delete whitespace around also)			-- not binary modes
source
	- All bit field things should use symbols not constants
Newfile
	- Fix cursor positioning bug?
Revert
	- Tie down details?

ZapBASIC:
---------
	- basic_returnword						TMT
	- basic_help							TMT

Command extensions:
-------------------

ZapText
	- SwapCase is nice to BASIC					TMT
ZapProgram
	- New MAKE/CC/etc. commands
	- ??? header/function/TLD finding
	- AssembleADRL/X
	- DataAdd
	- SWIToName, SWIToNumber

v1.50 alterations:
------------------
TMFs
	- setname: param, or if "" search for in-core.
	  This should be configurable by a variable, using
	  InCoreName-Start and InCoreName-End or similar.
	  Also InCoreName-Translate (to-dir-format, maintain-extension,
	  nil).
Mode info block (e_interrogate #14 replacement)
Folding

Internet things:
----------------
ZapSGML
ZapMailer (Larch)
ZapTerm (=> ssh for Risc OS)
ZapW3

Other:
------
CVS for Risc OS
RCS support internal to Zap (or external using a service call?)
Other IDE functions? Source browsing, etc.?				Necessary?
