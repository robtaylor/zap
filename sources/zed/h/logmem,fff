/////////////////////////////////////////////
//
//  $RenderX$
//

#ifndef LOGMEM_H
#define LOGMEM_H

/*

 Provides wrappers around stdlib memory allocation to keep track of blocks
 and which part of the program they were allocated from.
 Any left-over blocks at exit are listed.
 System is self-initialising ("lazy").

*/

#include <stdio.h>
#include <stdlib.h>

extern void *logmem_realloc(void *block, size_t size, const char *file, int line);
extern void *logmem_calloc(size_t n, size_t size, const char *file, int line);
extern void logmem_free(void *block, const char *file, int line);
extern void logmem_verbose(int i);
extern char *logmem_strdup(const char *s, const char *file, int line);


#ifdef LOGMEM

 #define malloc(s)     logmem_realloc(0, (s), __FILE__, __LINE__)
 #define calloc(n, s)  logmem_calloc((n), (s), __FILE__, __LINE__)
 #define realloc(p, s) logmem_realloc((p), (s), __FILE__, __LINE__)
 #define free(p)       logmem_free((p), __FILE__, __LINE__)
 #define strdup(s)     logmem_strdup((s), __FILE__, __LINE__)
#else

 #define logmem_verbose(v)

#endif

#endif

