# Zap Text Command Extension
# Copyright (C) 1998-1999 Zap Developers
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
# Make file for Zap Text Extension

Linkflags	= -o $@ -B 0x0 -bin -s @.Labels

ExtHdrs		= <ZapExtSource$Dir>.h.Macros <ZapExtSource$Dir>.h.RegNames

TextHdrs	= t.module t.commands t.corecomms t.minfo \
		  t.dwcomms t.tmtcomms t.sjacomms t.dscomms \
		  t.jrfcomms t.dsutils t.coreutils \
		  t.pmcomms t.help
TextObjs	= o.module o.commands o.corecomms o.minfo \
		  o.dwcomms o.tmtcomms o.sjacomms o.dscomms \
		  o.jrfcomms o.dsutils o.coreutils \
		  o.pmcomms o.help

__BUILD		= -PD "BUILD SETS \"$(BUILD)\""
__INTL		= -PD "INTL SETS \"$(INTL)\""
__TMFS		= -PD "TMFS SETS \"$(TMFS)\""
__HIST		= -PD "HIST SETS \"$(HIST)\""

# had -depend !Depend
Objasmflags	= -I <ZapExtSource$Dir> -o $@ -stamp -Throwback
Zap		= <Zap$Dir>
ZapS		= <ZapSource$Dir>
ZapText		= <ZapText$Dir>
ZapTextExt	= <ZapExtSource$Dir>.Text

.SUFFIXES: .s .o .h .t
.s.t:;		@Run $(ZapS).data.StoH $(ZapTextExt).s.$* $(ZapTextExt).h.$*
		Create $(ZapTextExt).t.$* 0

.s.o:;		objasm $(Objasmflags) $(__BUILD) $(__TMFS) $(__INTL) $(__HIST) $<

# Final target:

ZapText:	$(ExtHdrs) $(TextObjs) $(TextHdrs)
		link $(Linkflags) $(TextObjs)
		Settype $(ZapTextExt).$@ Module
		Run $(ZapS).data.MCopy $(ZapTextExt).$@ $(ZapText).ZapText
		Run $(Zap).Code.Tools.MakeExtern.MakeExtern -ext ZapText
		@Echo Made ZapText

# Dependencies:

# Dynamic dependencies:
