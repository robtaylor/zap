/*	displayopt.h
	© James Aylett	*/

#include "displayopt.h"

void close_displayopts()
{
  char chr;
  DisplayOptsOpen=FALSE;
  close_child(DisplayOpts);

  chr=(char)update_number(DisplayOpts, 25);
  ZapGlobalOptions.eol_character[0]=chr;
  ZapGlobalOptions.eol_character[1]=chr;
  ZapGlobalOptions.eol_character[2]=chr;
  ZapGlobalOptions.eol_character[3]=chr;

  chr=(char)update_number(DisplayOpts, 27);
  ZapGlobalOptions.tab_character[0]=chr;
  ZapGlobalOptions.tab_character[1]=chr;
  ZapGlobalOptions.tab_character[2]=chr;
  ZapGlobalOptions.tab_character[3]=chr;

  ZapGlobalOptions.line_spacing=update_number(DisplayOpts,29);
  ZapGlobalOptions.start_line=update_number(DisplayOpts,34);
  ZapGlobalOptions.start_address=update_number(DisplayOpts,36);

  update_key(0x116, DisplayOpts, 15);
  update_key(0x117, DisplayOpts, 19);

  save_misc();
  free_keys();
}

void open_displayopts()
{
  load_misc();

  sprintf(output, "CursM%d", (int) ZapGlobalOptions.cursor_normal);
  lookup_message(MessageBlock, output, output, 256);
  set_indtext(windows[DisplayOpts].openblock.window, 3, output);
  sprintf(output, "CursM%d", (int) ZapGlobalOptions.cursor_mark_position);
  lookup_message(MessageBlock, output, output, 256);
  set_indtext(windows[DisplayOpts].openblock.window, 9, output);
  sprintf(output, "CursM%d", (int) ZapGlobalOptions.cursor_split1);
  lookup_message(MessageBlock, output, output, 256);
  set_indtext(windows[DisplayOpts].openblock.window, 6, output);
  sprintf(output, "CursM%d", (int) ZapGlobalOptions.cursor_split2);
  lookup_message(MessageBlock, output, output, 256);
  set_indtext(windows[DisplayOpts].openblock.window, 12, output);

  set_flag(DisplayOpts, 22, ZapGlobalOptions.switches.flags.flashing_cursor);

  key_string(0x116, DisplayOpts, 15, "");
  key_string(0x117, DisplayOpts, 19, "");

  icon_print(DisplayOpts, 25, "%d", (int)ZapGlobalOptions.eol_character[0]);
  icon_print(DisplayOpts, 27, "%d", (int)ZapGlobalOptions.tab_character[0]);
  icon_print(DisplayOpts, 29, "%d", ZapGlobalOptions.line_spacing);

//  set_flag(DisplayOpts, 31, ZapGlobalOptions.opt_format.flags.big_endian);

  icon_print(DisplayOpts, 34, "%d", ZapGlobalOptions.start_line);
  icon_print(DisplayOpts, 36, "%x", ZapGlobalOptions.start_address);

  open_child(DisplayOpts, 25);
  DisplayOptsOpen=TRUE;
}

void displayoptsclick()
{
  if(result->mouse.button.data.menu==1) return;
  switch(result->mouse.icon)
  {
    case 22 : ZapGlobalOptions.switches.flags.flashing_cursor ^= 1; break;
//    case 31 : ZapGlobalOptions.opt_format.flags.big_endian ^= 1; break;
    case 2:
      if (MenuActive!=NOMENU)
        Wimp_CreateMenu(CloseMenu, 0, 0);
      cursormenu(0);
      break;
    case 5:
      if (MenuActive!=NOMENU)
        Wimp_CreateMenu(CloseMenu, 0, 0);
      cursormenu(1);
      break;
    case 8:
      if (MenuActive!=NOMENU)
        Wimp_CreateMenu(CloseMenu, 0, 0);
      cursormenu(3);
      break;
    case 11:
      if (MenuActive!=NOMENU)
        Wimp_CreateMenu(CloseMenu, 0, 0);
      cursormenu(2);
      break;
    case 16:case 17: number_cycle(DisplayOpts, 15, result->mouse.icon - 16, 0, NO_MAX); break;
    case 20:case 21: number_cycle(DisplayOpts, 19, result->mouse.icon - 20, 0, NO_MAX); break;
  }
}
