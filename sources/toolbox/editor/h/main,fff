#ifndef MAIN_H
#define MAIN_H

#include "oslib/wimp.h"
#include "oslib/toolbox.h"
#include "oslib/resed.h"

extern int finished;
extern wimp_t wimp_task;

#define MAX(a,b) ((a) > (b) ? (a) : (b))
#define MIN(a,b) ((a) < (b) ? (a) : (b))

#define lenof(a) ((sizeof((a)) / sizeof((a)[0])))

#define load_SUCCESS -1

typedef struct Object Object;

// Resource file object structures
typedef struct RelocatableObjectHeader RelocatableObjectHeader;
typedef struct RelocatableObject       RelocatableObject;

struct RelocatableObjectHeader
{
    int strtab;
    int msgtab;
    int reloctab;
};

struct RelocatableObject
{
    RelocatableObjectHeader           relocheader;
    toolbox_resource_file_object_base objheader;

    byte data[];
};


/* Auto */

extern void oserror_handler(int a);
extern int quit_message(wimp_message *message, void *handle);
extern int closedown_message(wimp_message *message, void *handle);
extern Object *editing_object(resed_full_message_object_load *load, void *handle);
extern void delete_object(void *handle);
extern void send_loaded_reply(resed_full_message_object_load *load, resed_error err, const char *message, const char *param);
extern void send_object_data(resed_full_message_object_send *send, void *handle, RelocatableObject *data, int size, resed_error error, int final);
extern int resed_load(wimp_message *message, void *handle);
extern int resed_send(wimp_message *message, void *handle);
extern int resed_loaded(wimp_message *message, void *handle);
extern int resed_sending(wimp_message *message, void *handle);
extern int resed_deleted(wimp_message *message, void *handle);
extern int resed_renamed(wimp_message *message, void *handle);
extern int main(int argc, char *argv[]);

/* End auto */

#endif
