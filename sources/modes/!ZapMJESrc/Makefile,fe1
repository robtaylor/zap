# Project:	ZapMJE, by M.Ebourne


# Toolflags:

# CCflags		= -c -ffa -depend !Depend -J -throwback -apcs 3/32bit -zM -zps1 -DDEBUG
CCflags		= -c -ffa -depend !Depend -J -throwback -apcs 3/32bit -zM -zps1
Linkflags	= -o $@ -bin -s @.Stuff.Labels
#ObjAsmflags	= -depend !Depend -ThrowBack -apcs 3/32bit -PD "debug SETS \"0=0\""
ObjAsmflags	= -depend !Depend -ThrowBack -apcs 3/32bit -PD "debug SETS \"0=1\""
# -PD "debug SETS \"0=0\""
Squeezeflags	= -o $@
Copyflags	= A~C~DF~L~N~V


# Pseudo targets to suppress messages and set up template system

.SILENT:
.SUFFIXES:	.s .c .o .h .t


# Library object files which we are dependant on

Libraries	= 


# Object files of each of the modules in this program (excluding c.DateStamp)

Headers		= t.Assembler t.C t.Commands t.Common t.C_Redraw t.Header t.Help \
		  t.Support t.Tables

Files		= o.Assembler o.C o.Commands o.Common o.C_Redraw o.Header o.Help \
		  o.Routines o.Support o.Tables

# Default to update all targets

All:		ZapMJE t.Docs

# Main target

ZapMJE:		o.DateStamp $(Files) $(Headers) $(Libraries)
		Echo Linking project
		Link $(Linkflags) @.o.DateStamp $(Files) $(Libraries)
		SetType <Prefix$Dir>.$@ Module
		Run <ZapSource$Dir>.data.MCopy <Prefix$Dir>.$@ <ZapMJE$Dir>.ZapMJE
		Echo Project make completed ok

#		(was) Copy <Prefix$Dir>.$@ <ZapMJE$Dir>.ZapMJE $(Copyflags)

# Menu file target

t.Docs:		Docs.ZapMJEHelp Docs.MJEChanges Docs.External Docs.Menus
		Echo Updating Docs
		Copy <Prefix$Dir>.Docs.ZapMJEHelp <ZapMJE$Dir>.!Help $(Copyflags)
		Copy <Prefix$Dir>.Docs.MJEChanges <ZapMJE$Dir>.Changes $(Copyflags)
		Copy <Prefix$Dir>.Docs.External <ZapMJE$Dir>.External $(Copyflags)
		Copy <Prefix$Dir>.Docs.Menus <ZapMJE$Dir>.Menus $(Copyflags)
		Create <Prefix$Dir>.$@

# Force DateStamp to be dependant on everything so it will always be updated

@.o.DateStamp:	$(Files) $(Libraries)


# Templates

.s.t:;		Echo Updating h.$*
		<ZapSource$Dir>.Data.StoH $< h.$*
		Create <Prefix$Dir>.$@

.s.o:;		Echo Assembling $<
		objasm $(ObjAsmflags) $< $@

.c.o:;		Echo Compiling $<
		cc $(CCflags) $< -o $@

# Leave the rest to the automatic dynamic system

# Dynamic dependencies:
o.Support: s.Support
o.Support: h.Main
o.Support: Asm:h.RegNames
o.Support: Asm:h.SWIs
o.Support: h.Help
o.Tables: s.Tables
o.Tables: h.Main
o.Tables: Asm:h.RegNames
o.Tables: Asm:h.SWIs
o.Tables: h.Assembler
o.Tables: h.C
o.Tables: h.Commands
o.Tables: h.Common
o.Tables: h.C_Redraw
o.Tables: h.DateStamp
o.Assembler: s.Assembler
o.Assembler: h.Main
o.Assembler: Asm:h.RegNames
o.Assembler: Asm:h.SWIs
o.Assembler: h.Support
o.Assembler: h.Tables
o.C: s.C
o.C: h.Main
o.C: Asm:h.RegNames
o.C: Asm:h.SWIs
o.C: h.Commands
o.C: h.Common
o.C: h.C_Redraw
o.C: h.Support
o.C: h.Tables
o.Common: s.Common
o.Common: h.Main
o.Common: Asm:h.RegNames
o.Common: Asm:h.SWIs
o.Common: h.Help
o.Common: h.Routines
o.Common: h.Support
o.Common: h.Tables
o.Common: h.C_Redraw
o.C_Redraw: s.C_Redraw
o.C_Redraw: h.Main
o.C_Redraw: Asm:h.RegNames
o.C_Redraw: Asm:h.SWIs
o.C_Redraw: h.C
o.C_Redraw: h.Support
o.Header: s.Header
o.Header: h.Main
o.Header: Asm:h.RegNames
o.Header: Asm:h.SWIs
o.Header: h.Commands
o.Header: h.Common
o.Header: h.DateStamp
o.Header: h.Support
o.Header: h.Tables
o.Help: s.Help
o.Help: h.Main
o.Help: Asm:h.RegNames
o.Help: Asm:h.SWIs
o.Help: h.Support
o.Routines:	c.Routines
o.Routines:	h.Defns
o.Routines:	h.CSWIs
o.DateStamp:	c.DateStamp
o.Commands: s.Commands
o.Commands: h.Main
o.Commands: Asm:h.RegNames
o.Commands: Asm:h.SWIs
o.Commands: h.Assembler
o.Commands: h.C
o.Commands: h.Header
o.Commands: h.Help
o.Commands: h.Routines
o.Commands: h.Support
o.Commands: h.Tables
