; **************************************************************************
; *                                                                        *
; *  Project: ZapMJE                Purpose: Extensions for Zap            *
; *  Module: Help.s                 Purpose: A complete help system        *
; *  © 1995 Martin Ebourne          Last update: 27-05-95                  *
; *                                                                        *
; **************************************************************************

;  Things to do:
;    Write it! (Arghhh!)


		GET	h.Main
		GET	h.Support

		AREA	|Asm$$code|,CODE,READONLY


;  Give context sensitive help (ie. on keyword by cursor)

from$L		RN	r1
to$L		RN	r2
block$L		RN	r3
splito$L	RN	r4
splits$L	RN	r5
fileptr$L	RN	r6
filelen$L	RN	r7

		DCD	x_noparams			;  Flags for command

		EXPORT	helpcontext$H
helpcontext$H	STMFD	sp!,{lr}
		BL	setupblock$H
		MOV	to$L,r0
		LDR	from$L,c_off
		LDR	splito$L,f_splito
		LDR	splits$L,f_splits
		LDR	fileptr$L,f_ptr
		LDR	filelen$L,f_len
findloop$L	CMP	from$L,#0
		BLT	exit$L
		BL	getchar$L
		TEQ	r0,#'_'
		BEQ	findstart$L
		BL	isfiller
		BCS	exit$L
		SUBEQ	from$L,from$L,#1
		BEQ	findloop$L
findstart$L	TEQ	from$L,#0
		BEQ	copyloop$L
		SUB	from$L,from$L,#1
		BL	getchar$L
		TEQ	r0,#'_'
		BEQ	findstart$L
		BL	isfiller
		BCS	foundstart$L
		BNE	findstart$L
foundstart$L	ADD	from$L,from$L,#1
		BL	getchar$L
copyloop$L	STRB	r0,[to$L],#1
		SUB	r0,to$L,block$L
		CMP	r0,#255
		BHS	exit$L
		ADD	from$L,from$L,#1
		CMP	from$L,filelen$L
		BHS	foundend$L
		BL	getchar$L
		TEQ	r0,#'_'
		BEQ	copyloop$L
		BL	isfiller
		BCS	foundend$L
		BNE	copyloop$L
foundend$L	MOV	r0,to$L
		BL	finishblock$H
		LDMFD	sp!,{pc}
exit$L		BL	abandonblock$H
		LDMFD	sp!,{pc}

;  Gets character in from into r0 taking account of split

getchar$L	CMP	from$L,filelen$L
		MOVCS	r0,#32
		MOVCS	pc,lr
		CMP	from$L,splito$L
		MOVLO	r0,from$L
		ADDHS	r0,from$L,splits$L
		LDRB	r0,[fileptr$L,r0]
		MOV	pc,lr


		LOCAL


;  Re-display last page (going back through stack)

		DCD	x_noparams			; Flags for command

		EXPORT	helplast$H
helplast$H	MOV	pc,lr


		LOCAL


;  Help on given topic, or selected area if present

		DCD	x_stringparam + x_beforemb + x_maykill	; Flags for command

		EXPORT	helptopic$H
helptopic$H	STMFD	sp!,{windowblk,lr}
		BL	getws
		CMP	r2,#1
		BLS	givenstring$L
		TEQ	r2,#6
		LDMNEFD	sp!,{windowblk,pc}
		CALL	Zap_GetSel
		BCC	selected$L
badselection$L	ADR	r0,prompt$L
		CALL	Zap_MiniPrompt
		MOV	r0,#0
		LDMFD	sp!,{windowblk,pc}
selected$L	LDMFD	sp,{r0}
		TEQ	r0,windowblk
		BNE	badselection$L
		CMP	r2,#255-20-?stronghelptxt$H
		BHS	badselection$L
		CALL	Zap_ReadSel
		STR	r3,ws_selblock
		MOV	r0,r3
		LDMFD	sp!,{windowblk,pc}
givenstring$L	BL	strlen
		CMP	r0,#255-20-?stronghelptxt$H
		LDMHSFD	sp!,{windowblk,pc}
		BL	setupblock$H
		BL	strcpy
		BL	finishblock$H
		LDR	r0,ws_selblock
		TEQ	r0,#0
		CALL	Zap_Free,,NE
		MOV	r0,#0
		STR	r0,ws_selblock
		LDMFD	sp!,{windowblk,pc}

prompt$L	=	"Search for help on: ",0


		LOCAL


;  Initialise Wimp message block for StrongHelp
;  Exits with block in r3 and place for help keyword in r0. Other regs preserved

block$L		RN	r3

setupblock$H	STMFD	sp!,{r1,lr}
		BL	checkshloaded$H
		MOV	r0,#256
		CALL	Zap_Claim
		LDMVSFD	sp!,{r1,pc}
		MOV	block$L,r0
		MOV	r0,#0
		STR	r0,[block$L,#12]
		LDR	r0,=stronghelpmsg$H
		STR	r0,[block$L,#16]
		ADD	r0,block$L,#20
		ADR	r1,stronghelptxt$H
		BL	strcpy
		LDMFD	sp!,{r1,pc}


;  Complete Wimp message block for StrongHelp and broadcast to all tasks
;  Expects block still in r3 and end of help keyword in r0

finishblock$H	MOV	r1,#0
		STRB	r1,[r0],#1
		SUB	r0,r0,block$L
		ADD	r0,r0,#3
		BIC	r0,r0,#3
		STR	r0,[block$L]
		MOV	r0,#18
		MOV	r1,block$L
		MOV	r2,#0
		SWI	XWimp_SendMessage


;  Abandons Wimp message block
;  Expects block still in r3

abandonblock$H	MOV	r0,block$L
		JMP	Zap_Free,r6


;  Details for StrongHelp block

		EXPORT	stronghelpmsg$H
stronghelpmsg$H	EQU	&43B00				;  Message number
stronghelptxt$H	=	"Help_Word ",0			;  Message text
stronghelp$H	=	"StrongHelp",0			;  Task name
stronghelpcmd$H	=	"/<StrongHelp$Dir>",0		;  Command to load it
stronghelpdir$H	=	"StrongHelp$Dir",0		;  Var name

;  General text

nohelp$H	=	"Help not available on that topic",0


		LOCAL


;  Check StrongHelp is loaded, and load if not. Only works on RISC OS 3 or later

checkshloaded$H	MOV	r0,#0
loop$L		SUB	r1,sp,#16
		MOV	r2,#16
		SWI	XTaskManager_EnumerateTasks
		MOVVSS	pc,lr
		CMP	r0,#0
		BLT	notloaded$L
		LDR	r1,[sp,#-12]
		ADR	r2,stronghelp$H
compareloop$L	LDRB	r3,[r1],#1
		LDRB	r4,[r2],#1
		TEQ	r3,r4
		BNE	loop$L
		TEQ	r4,#0
		BNE	compareloop$L
		MOVS	pc,lr
notloaded$L	ADR	r0,stronghelpdir$H
		MOV	r2,#-1
		MOV	r3,#0
		SWI	XOS_ReadVarVal
		TEQ	r2,#0
		ADRNE	r0,stronghelpcmd$H
		SWINE	XWimp_StartTask
		MOVS	pc,lr


		LOCAL


;  StrongHelp request bounced

		EXPORT	helpbounced$H
helpbounced$H	STMFD	sp!,{r1,lr}
		ADR	r0,nohelp$H
		MOV	r1,#0
		CALL	Zap_Warning
		LDMFD	sp!,{r1,pc}


		END
