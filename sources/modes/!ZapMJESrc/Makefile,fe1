# Make file for ZapMJE
# using Acorn tools amu, objasm, link

# For the standard build name:
#	amu
# For alternative build names:
#	amu BUILD=foo
#	amu BUILD=foo-42
#    "-<n>" is automatically appended if you omit it.
# BTW, give 'make' lots of memory ;-)

# Targets:
#	ZapMJE		Assemble .s files and link. This is the default
#	ZapMJEHdrs	Remake the automatically-created header files
#	Clean		Wipe the .o and .t (header marker) files
#	Rebuild		Wipe o.Header. Useful for changing the build name
#	Revision	Stamps h.Version

Hs		= t.assembler t.cmode t.commands t.common t.c_redraw t.header \
		  t.support t.tables

OBJECTS		= o.assembler o.cmode o.commands o.common o.c_redraw o.header \
		  o.support o.tables o.routines

Headers		= $(subst t.,h.,$(Hs))

TARGET		= ZapMJE
ZapS		= <ZapSource$Dir>
as		= objasm
asflags		= -o $@ -depend !Depend -throwback -apcs 3/32bit -stamp -quit -I$(Zaps)
cc		= cc
ccflags		= -c -ffa -depend !Depend -J -throwback -apcs 3/32bit -zM -zps1 -I$(ZapS)
link		= link
linkFlags	= -bin -B &00000000

__BUILD		= -PD "BUILD SETS \"$(BUILD)\""
NEWBUILD	= "BUILD=$(BUILD)"

ZapMJE:		$(OBJECTS) ZapMJEHdrs
		$(link) $(linkFlags) -o $(TARGET) $(OBJECTS)
		Settype $(TARGET) Module
		Run $(ZapS).data.MCopy $(TARGET) <ZapMJE$Dir>.ZapMJE
		@Echo Finished

ZapMJEHdrs:	$(Hs)
		@Echo Made headers

Clean:
		IfThere o.* Then Wipe o.* ~CF~R~V
		IfThere t.* Then Wipe t.* ~CF~R~V
		X rm $(Headers)

Rebuild:
		Remove o.Header
		chain:amu $(NEWBUILD)

Revision:
		Stamp h.Version
		chain:amu $(NEWBUILD)

# The .t file date gives the last time the header was created from the file.
# This is usually not the .h date as the .h file is not stamped if the file
# contents doesn't change.

.SUFFIXES: .t .s .c

.s.t:;		@Run $(ZapS).data.StoH s.$* h.$*
		Create t.$* 0

.s.o:;		$(as) $(asflags) $(__BUILD) s.$*

.c.o:;		$(cc) $(ccflags) c.$*

# Dependencies:
# Dynamic dependencies:
o.assembler: s.assembler
o.assembler: h.Main
o.assembler: h.RegNames
o.assembler: h.SWIs
o.assembler: h.Support
o.assembler: h.Tables
o.routines:	c.routines
o.routines:	h.Defns
o.routines:	h.CSWIs
o.tables: s.tables
o.tables: h.Main
o.tables: <ZapSource$Dir>.h.Macros
o.tables: <ZapSource$Dir>.h.System
o.tables: h.Assembler
o.tables: h.CMode
o.tables: h.Commands
o.tables: h.Common
o.tables: h.C_Redraw
o.tables: h.Header
o.support: s.support
o.support: h.Main
o.support: <ZapSource$Dir>.h.Macros
o.support: <ZapSource$Dir>.h.System
o.c_redraw: s.c_redraw
o.c_redraw: h.Main
o.c_redraw: <ZapSource$Dir>.h.Macros
o.c_redraw: <ZapSource$Dir>.h.System
o.c_redraw: h.CMode
o.c_redraw: h.Support
o.cmode: s.cmode
o.cmode: h.Main
o.cmode: <ZapSource$Dir>.h.Macros
o.cmode: <ZapSource$Dir>.h.System
o.cmode: h.Commands
o.cmode: h.Common
o.cmode: h.C_Redraw
o.cmode: h.Support
o.cmode: h.Tables
o.commands: s.commands
o.commands: h.Main
o.commands: <ZapSource$Dir>.h.Macros
o.commands: <ZapSource$Dir>.h.System
o.commands: h.Assembler
o.commands: h.CMode
o.commands: h.Header
o.commands: h.Routines
o.commands: h.Support
o.commands: h.Tables
o.header: s.header
o.header: h.Main
o.header: <ZapSource$Dir>.h.Macros
o.header: <ZapSource$Dir>.h.System
o.header: h.Commands
o.header: h.Common
o.header: h.Support
o.header: h.Tables
o.header: h.Version
o.common: s.common
o.common: h.Main
o.common: <ZapSource$Dir>.h.Macros
o.common: <ZapSource$Dir>.h.System
o.common: h.Routines
o.common: h.Support
o.common: h.Tables
o.common: h.CMode
o.common: h.C_Redraw
