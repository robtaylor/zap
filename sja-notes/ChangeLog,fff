Change Log	(sja, post v1.40)
----------

99/01/14	&322 executed on startup
		opt_switches b31 => execute &322 even when we're loading files on init
			(E-Vars changed)
99/01/15	MISCOPS 19 to configure opt_switches b31 (Menus and HelpData changed)
		More little bugfixes to token/message use
99/01/19	Started replacing constants with symbols in the source:
		Exceptions, Fonts, Heap, Mode2, Mode3, ModuleBits, Update done.
99/01/20	More of the above.
99/01/21	Will now build properly under Unix (just missing a fully-functional AS).
		stop_operation called as necessary on mouse click in text window
		moved Menus around slightly; 0-9 internal, 10-19 internal mode, 20+ user
		Menu 05 is now "Selection"; shift+alt+ when there's a selection brings
		it up (otherwise alt+ action - Modes menu)
		(The last two mean that the Menus files will all have to change.)
99/01/25	Fixed search ToBuffer/GlobalReplace flags in h.ZapConsts (they were the
		wrong way round). (This didn't matter before, because it's only now
		that we're using symbolic constants whenever accessing opt_switches.)
99/01/27	Started TMF work. I've added a variable to the mode dispatch table;
		d_variabletable (at 2*e_title + 4). This points to the variable table
		for this mode. When (-1), this hasn't been initialised.
		In addition, I've added a block of pointers, initially all (0), which
		are for storing pointers to the MessageTrans blocks for each mode. This
		block is in ws. If (-1), this mode doesn't have a TMF.
		(Change in E-Zapcalls required.)
		TMF functionality: inheritance, variable storage. (Currently untested.)
		Remaining: interpolation, substitution, per-file overrides.
99/01/28	Got Zap building under objasm again (thanks to Dan Ellis). h.ZapVars
		now contains some very strange code :-)
		@GETVAR function, so I can start testing TMFs. (Change to HelpData.)
99/02/01	TMFs: finding, loading, freeing, querying, storing result in variable
		table, lookup in variable table, and inheritance all now work.
99/02/02	Nick Burrett has given me AS sources which work properly under linux.
		This means that I can now build Zap in virtually no time at all :-)
		Also means that daily binary snapshots are here ... probably ought
		to finish some of the code in AS to allow ZapBASIC et al to be built
		under linux as well at some point ...
99/02/04	TMFs: started work on interpolation. Once this is done I'll write some
		clients and document it.
99/02/07	Fixed bugs in h.Macros wrt macros calls preceded by labels. (Was
		trying to put the label on the same line as a conditional - AS appears
		to accept this, which is wrong.)
99/02/09	Fixed a WCBox bug (could delete its window, then attempt to
		run Wimp_CreateMenu -1 where the window *was* the last menu; the
		Wimp appears to have a problem coping with this).
99/02/17	TMFs now work. Various stupidities, including ickle buffer overruns,
		being over-conscientious about incrementing one of my internal data
		pointers, and similar things ... fixed now. Ahem.
		Added documentation (E-Zapcalls contains the spec of the call, and
		Docs.Technical.TMFs is temporarily the place for the definition; it
		will go in the manual at some point).
		E-Library also changed.
		Also actually added Zap_TestIfCloneBase to the dispatch table.
99/02/18	Buglist/wishlist finished off and made public.
99/02/19	Zap command extensions build; ZapText and ZapUtil internationalised.
		(Currently untested.)
99/02/22	DataSaved message removed, since we're using it wrongly. Justin doesn't
		think it's terribly useful anyway (and I'm inclined to agree).
99/03/01	Help system now uses 'HelpSearchPath' c-var.
		NotifyUser doesn't append ": " on recent Zaps (iff built
		with c-var support).
		ZapBits builds properly using Acorn tools.
		TMFs will be referred to as "c-vars" (configuration
		variables" from now on, to avoid confusion. Decision: mixed
		case variables are reserved; if you want to use a c-var for
		an extension, get in touch and we'll sort out a name. Ideally
		I'd like to extend the help system to provide information on
		c-vars. ALL UPPER CASE and all lower case variables will be
		for user use; in addition, 'official' variables will only ever
		use alphanumerics - so for testing purposes you can use
		"_RealVariableName" to avoid conflicts.
99/03/02	v1.42 public beta released.
99/03/04	ZapUtil's cursor commands now have minibuffer prompts (where this makes
		sense). Also, ZapUtil's Messages file was the wrong one.
		Word mode redraw bug fixed; multiple invocation of WC box bug fixed.
		FORMATTEXT no longer stops at an unbreakable line; simply drops it on
		its own on a line and keeps going until it finds the real end of para.
		TotalSel uses the hourglass, and respects Escape.
		Stupid bug in help system's c-var handling which would reliably stamp
		over its help search path by the second attempt.
		SETNAMEINCORE written, using c-vars to delimit the filename.
99/03/05	Released v1.43 sja-1, with all the above alterations (and a few
		distribution bugfixes).
99/03/08	App to app transfer into Zap via a scrap file now works with the new
		modified system.
		opt_switches b25 => minibuffer is always opened at the width of the
		current window. MISCOPS 20 controls this bit. For most people, this
		will probably already be turned on (b25 was used in earlier versions
		of Zap). We may want to auto-clear on old config files?
		(Changes to Menus, HelpData.)
		Window swap order on cF2 (CLOSEWINDOW), and related situations, reversed.
		Instead of using the (fairly useless, IMO) SWAPWINDOW command, it now
		goes one back in the window list. This is more useful when loading
		lots of files and working with them one by one. The old behaviour is
		available as a build-time option.
99/03/09	Softwrap detection sped up (two loops coagulated into one).
		Fix to yesterday's code wrt window swap order - cursor offset was being
		set to garbage because I wasn't thinking clearly.
		Altered find_offset so that a position beyond EOF always gets returned
		as EOF; previously the line was being clipped to the last line in the
		file, so clicks below but to the left of EOF weren't being treated as
		at EOF. This caused confusion with long line selection.
99/03/10	Softwrap detection now works on last line in file. Also uses w_cr rather
		than hard-coded to 0xa.
		Change cursor type updates immediately.
		DataSave messages emitted by Zap now correctly identify untyped files.
		An extension to Zap_SendDataSave allows clients to use this functionality.
		Fixed a typo in yesterday's find_offset fix which caused SDOWN to loop
		through the bottom of the file to (near) the top.
		Released as sja-3.
99/03/11	Fixed a bug in WRITEFILE which was putting the directory name as the prompt,
		rather than writing it to the minibuffer.
		save_to_file and its subroutines now use f_proposed_name to carry the
		future filename until the save has completed successfully.
		DataSave via RAM xfer to Zap now sets cursor/grabs focus.
		Created !ZapX support files so that test versions can be build as ZapX and
		run without taking down your main copy of Zap. The support has always been
		there (I assume Dominic, being sensible, used to do this), but I never got
		frustrated enough to do it until working on the font code ...
		Bitmap font menu code was broken (partly in the internationalisation system,
		and partly in Zap / ZapX-ness).
		Investigated outline fonts not being ticked sometimes; this is because
		Font_DecodeMenu is returning an id string which doesn't fit within the
		formats that the PRMs say are possible. If someone can tell me why, I can
		probably fix this quite easily ...
		Outline font leak traced to ZapRedraw, which now uses the new-style build
		system and versioning. v0.38 [TEST 1].
99/03/12	Fixed out of memory error causing crashes when using dynamic areas. I don't
		actually know *how* I did this; I merely compared the code to v1.35 and
		changed things back to the way they were, and it seemed to work. So if
		things fall over in the future I *still* don't understand them ...
		Released as sja-4.
99/03/15	With Darren's new 'sed' port, a REMOVELF-alike which also strips leading
		spaces within a paragraph is now in place. Run it via FILTER[BUF|SEL] as
		"sed -f zf:removelf". Expect requests in the future for new text
		re-formatting commands to be altered in favour of using external filters
		via sed and awk.
		Outline fonts should now be ticked in all cases (previously fell over on
		some slightly undocumented encoding/territory situations).
		(Subsequently obsoleted by Darren's alterations to use a hierarchical
		menu for outline fonts, entirely handled by the font manager.)
99/03/17	HELPVAR / HELP "v" added. Looks up help on c-vars, stored in HelpData as
		"#<c-var name>". (Changes to Messages, HelpData.)
		QUICKPRINT now reads start and end lines from dbox immediately prior to
		printing.
		Toggling 'DOS text file' or 'Spool file' wasn't setting modified
		correctly; this has been fixed (toggling one and then doing something
		like setting Readonly would set modified, which was confusing).
		Code mode search with 'comment free' now won't search into the comments
		(which was confusing, because they weren't being displayed - it just
		appeared to be going wrong).
99/03/19	WRITEBUFFER command saves current buffer to given file without changing
		the filename of the file. (Useful, for instance, to diff against saved
		version.) Changes to Messages, HelpData.
		Released as sja-5.
99/03/23	Did some work on bringing the manual up to date (actually looks easier
		than I thought it would be).
99/03/26	More or less completed the manual updates.
99/06/08	MODENMENU command.


File changes since sja-5:
-------------------------

!Zap.Resources.UK.!Help
!Zap.Resources.UK.HelpData
!Zap.Code.Zap
