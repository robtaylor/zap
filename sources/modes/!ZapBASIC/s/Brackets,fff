; Contains mode entry points for BASIC mode.
; $Id: Brackets,fff,v 1.6 2003-02-07 18:45:11 christian Exp $
; -*- armasm -*-

 GET h.ZapBasHdr
 GET h.ZapBASIC
 GET h.BAStxt
 GET h.SWIs

 EXPORT charchar
 EXPORT charfromoffset
 EXPORT basic_get_the_mode_word


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Bracket matching					;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

basic_get_the_mode_word
	FNJSR
	LDR	R1,modenumberstoredhere
	FNcall  Zap_GetModeWord
	FNRTS

modenumberstoredhere
	DCD	0

	LOCAL

charchar
	FNJSR	"R0-R12"
	STR	R1,modenumberstoredhere
	MOV	R1,#0
FromLimport4imp
	CMP	R1,R5
	BGE	FromLimport5imp
	LDRB	R0,[R7,R1]
	TEQ	R0,#')'
	TEQNE	R0,#'}'
	TEQNE	R0,#']'
	ADDNE	R1,R1,#1
	BNE	FromLimport4imp

	CMP	R5,#2
	ADDCS	R1,R1,#1
	BCS	FromLimport4imp

	SUB	R5,R5,R1
	ADD	R7,R7,R1
	TEQ	R0,#')'
	BLEQ	FromLimport9imp
	TEQ	R0,#'}'
	BLEQ	FromLimport10imp
	TEQ	R0,#']'
	BLEQ	FromLimport10bimp
FromLimport5imp
	FNRTS

FromLimport9imp
	FNJSR	"R1-R10"
	LDR	R0,[R10,#12]
	MOV	R1,#'('
	MOV	R2,#')'
	BL	FromLimport18impsc
	BLEQ	FromLimport11imp
	FNRTS

FromLimport10imp
	FNJSR	"R1-R10"
	LDR	R0,[R10,#12]
	MOV	R1,#'{'
	MOV	R2,#'}'
	BL	FromLimport18imp
	BLEQ	FromLimport11imp
	FNRTS

FromLimport10bimp
	FNJSR	"R1-R10"
	LDR	R0,[R10,#12]
	MOV	R1,#'['
	MOV	R2,#']'
	BL	FromLimport18imp
	BLEQ	FromLimport11imp
	FNRTS


FromLimport11imp
	FNJSR	"R0-R7"
	LDR	R4,[R10,#c_off]
	LDR	R5,[R10,#c_col]
	STR	R0,[R10,#c_off]
	FNcall  Zap_ReflectCaret
	SWI	XOS_ReadMonotonicTime
	MOV	R3,R0
	BL	FromLimport26imp
	ADD	R3,R3,R0
FromLimport12imp
	MOV	R0,#&98
	MOV	R1,#0
	SWI	XOS_Byte
	BCC	FromLimport13imp
	SWI	XOS_ReadMonotonicTime
	CMP	R0,R3
	BLT	FromLimport12imp
FromLimport13imp
	STR	R4,[R10,#c_off]
	FNcall  Zap_UpdateCaret
	STR	R5,[R10,#c_col]
	FNcall  Zap_PlotCaret
	FNRTS

FromLimport18imp
	FNJSR	"R3,R4"
	MOV	R3,R0
	MOV	R4,#1			;  depth.
loop2$l
	SUBS	R3,R3,#1
	BLT	FromLimport20imp
	MOV	R0,R3
	BL	charfromoffset

	TEQ	R0,#'"'
	EOREQ	R4,R4,#&10000

	CMP	R0,#32
	BCC	FromLimport20aimp

	TST	R4,#&10000
	BNE	loop2$l

	TEQ	R0,R2
	ADDEQ	R4,R4,#1
	BEQ	loop2$l

	TEQ	R0,R1
	BNE	loop2$l
	SUB	R4,R4,#1
	TST	R4,#&FF
	BNE	loop2$l
FromLimport20imp
	MOV	R0,R3
	FNRTS

FromLimport20aimp
	MOVS	R0,#1
	FNRTS


FromLimport18impsc
	FNJSR	"R3,R4"
	MOV	R3,R0
	MOV	R4,#1
loop2a$l
	SUBS	R3,R3,#1
	BLT	FromLimport20imp
	MOV	R0,R3
	BL	charfromoffset

	TEQ	R0,#'"'
	EOREQ	R4,R4,#&10000

	CMP	R0,#32
	BCC	FromLimport20aimp

	TST	R4,#&10000
	BNE	loop2a$l

	TEQ	R0,R2
	ADDEQ	R4,R4,#1
	BEQ	loop2a$l

	TEQ	R0,R1
	TEQNE	R0,#&8A			;  tab
	TEQNE	R0,#&A7			;  instr
	TEQNE	R0,#&B0			;  point
	TEQNE	R0,#&C0			;  left$
	TEQNE	R0,#&C1			;  mid$
	TEQNE	R0,#&C2			;  right$
	TEQNE	R0,#&C4			;  string$
	BNE	loop2a$l
	SUBS	R4,R4,#1
	TST	R4,#&FF
	BNE	loop2a$l
	B	FromLimport20imp

FromLimport26imp
	FNJSR	"R1,R2"
	PUSH	"R1-R11"
	LDR	R1,modenumberstoredhere
	FNcall  Zap_GetModeWord
	PULL	"R1-R11"
	MOV	R2,#20
	TST	R0,#1 << 31
	MOVEQ	R0,#0
	MOVNE	R0,R2
	FNRTS


charfromoffset				;  from elsewhere would be better...
	FNJSR
	LDR	R14,[R9,#f_splito]
	CMP	R0,R14
	LDRCS	R14,[R9,#f_splits]
	ADDCS	R0,R0,R14
	LDR	R14,[R9,#f_ptr]
	LDRB	R0,[R14,R0]
	FNRTS



 END
