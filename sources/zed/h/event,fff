/****************************************************************************
 * This source file was written by Acorn Computers Limited. It is part of   *
 * the toolbox library for writing desktop applications in C. It may be     *
 * used freely in the creation of programs for Archimedes or Risc PC. It    *
 * should be used with Acorn's C Compiler Release 5 or later.               *
 *                                                                          *
 *                                                                          *
 * Copyright © Acorn Computers Ltd, 1994                                    *
 *                                                                          *
 ***************************************************************************/



#ifndef __event_h
#define __event_h


typedef int (WimpEventHandler) (wimp_event_no   event_code,
                                wimp_block     *event,
                                toolbox_block  *id_block,
                                void           *handle);

typedef int (ToolboxEventHandler) (wimp_event_no   event_code,
                                   toolbox_action *event,
                                   toolbox_block  *id_block,
                                   void           *handle);

typedef int (WimpMessageHandler) (wimp_message *message,
                                  void         *handle);



#ifdef __cplusplus
  extern "C" {
#endif


extern os_error *event_poll      (wimp_event_no *event_code, wimp_block *poll_block, void *poll_word);
extern os_error *event_poll_idle (wimp_event_no *event_code, wimp_block *poll_block, os_t earliest, void *poll_word);
extern os_error *event_dispatch  (wimp_event_no  event_code, wimp_block *poll_block);


/* ------------------------------------- getting/setting poll mask -------------------------------- */

extern os_error *event_set_mask (wimp_poll_flags  mask);
extern os_error *event_get_mask (wimp_poll_flags *mask);


/* ------------------------------------ event handler registering ------------------------------- */

os_error *event_register_wimp_handler (toolbox_o object_id, wimp_event_no event_code,
                                       WimpEventHandler *handler, void *handle);

os_error *event_deregister_wimp_handler (toolbox_o object_id, wimp_event_no event_code,
                                         WimpEventHandler *handler, void *handle);

os_error *event_deregister_wimp_handlers_for_object (toolbox_o object_id);


os_error *event_register_toolbox_handler (toolbox_o object_id, wimp_event_no event_code,
                                                 ToolboxEventHandler *handler, void *handle);

os_error *event_deregister_toolbox_handler (toolbox_o object_id, wimp_event_no event_code,
                                                   ToolboxEventHandler *handler, void *handle);

os_error *event_deregister_toolbox_handlers_for_object (toolbox_o object_id);

os_error *event_register_message_handler (bits msg_no, WimpMessageHandler *handler, void *handle);

os_error *event_deregister_message_handler (bits msg_no, WimpMessageHandler *handler, void *handle);



/* ------------------------------------ initialisation/finalisation ----------------------------- */


extern os_error *event_initialise (toolbox_block *b);

extern os_error *event_finalise (void);


#ifdef __cplusplus
  }
#endif


#endif
