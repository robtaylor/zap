;;
;; Define highlighting for perl mode
;;
(defvar perl-font-lock-keywords
  (list
   (cons (concat "[ \n\t{]*\\("
		 (mapconcat 'identity
			    '("if" "until" "while" "elsif" "else" "unless" "for"
			      "foreach" "continue" "exit" "die" "last" "goto" "next"
			      "redo" "return" "local" "exec")
			    "\\|")
		 "\\)[ \n\t;(]") 1)
   (mapconcat 'identity
	      '("#endif" "#else" "#ifdef" "#ifndef" "#if" "#include"
		"#define" "#undef")
	      "\\|")
   '("^[ \n\t]*sub[ \t]+\\([^ \t{]+\\)[ \t]*[{]" 1 font-lock-function-name-face)
   '("[ \n\t{]*\\(eval\\)[ \n\t(;]" 1 font-lock-function-name-face)
   '("\\(--- .* ---\\|=== .* ===\\)" . font-lock-string-face)
   )
  "Additional expressions to highlight in Perl mode.")

;;
;; Define highlighting for shell mode
;;
(defvar shell-font-lock-keywords
  (list (cons shell-prompt-pattern 'font-lock-keyword-face)
	'("[ \t]\\([+-][^ \t\n]+\\)" 1 font-lock-comment-face)
	'("^[^ \t]+:.*$" . font-lock-string-face)
	'("^\\[[1-9][0-9]*\\]" . font-lock-string-face))
  "Additional expressions to highlight in Shell mode.")

;;
;; Define highlighting for fortran mode
;;
(defvar fortran-font-lock-keywords
  '(;;
    ;; highlight preprocessor directives
    ("^%[A-Z]+" . font-lock-comment-face)
    ;;
    ;; fontify names being defined.
    ("^%\\(DEFINE\\|UNDEF\\)[ \t]+\\(\\(\\sw\\|\\s_\\)+\\)" 2 font-lock-function-name-face)
    ;;
    ;; fontify other preprocessor lines.
    ("^%\\(IF\\)[ \t]+\\([^\n]+\\)" 2 font-lock-function-name-face keep)
    ("^%\\(ENDIF\\|ELSE\\)[ \t]+\\([^\n]+\\)" 2 font-lock-function-name-face keep)
    ("^%\\(IFN?DEF\\)[ \t]+\\([^ \t\n]+\\)" 2 font-lock-function-name-face t)
    ;;
    ;; fontify the filename in #include <...>
    ;; don't need to do this for #include "..." because those were
    ;; already fontified as strings by the syntactic pass.
    ("^%INCLUDE[ \t]+\\(<[^>\"\n]+>\\)" 1 font-lock-string-face)
    ;;
    ;; highlight comments
    ("\\(^C.*\\)" 1 font-lock-comment-face t)
    ("!.*" . font-lock-comment-face)
    ;;
    ;; highlight procedure/function names
    ("SUBROUTINE[ \t]*\\([^(]+\\)" 1 font-lock-function-name-face)
    ("FUNCTION[ \t]*\\([^(]+\\)" 1 font-lock-function-name-face)
    ("PROGRAM[ \t]*\\([^(]+\\)" 1 font-lock-function-name-face)
    ;;
    ;; highlight keywords
    ("\\(FUNCTION\\|SUBROUTINE\\|PROGRAM\\|IMPLICIT\\|CALL\\|IF\\)[ \t\n]" . 1)
    ("\\(THEN\\|ELSE\\|END IF\\|DO\\|WHILE\\|END DO\\|CONTINUE\\)[ \t\n]" . 1)
    ("\\(GOTO\\|RETURN\\|END\\|COMMON\\|BLOCK DATA\\)[ \t\n]" . 1)
    ;;
    ;; highlight type names
    ("\\(\\(INTEGER\\|LOGICAL\\)\\(\\*[24]\\)?\\)" 1 font-lock-type-face)
    ("\\(\\(REAL\\|DOUBLE PRECISION\\)\\(\\*[24]\\)?\\)" 1 font-lock-type-face)
))

;;
;; Define highlight for mail/news modes
;;
(defvar mail-font-lock-keywords
  '(;;
    ;; highlight headers
    ("^[A-Za-z-]+:" . font-lock-comment-face)
    ;;
    ;; highlight mail addresses
    ("<?[A-Za-z0-9.$_-]+@\\([A-Za-z0-9_-]+\\.\\)*[A-Za-z0-9_-]+>?" . font-lock-keyword-face)
    ;;
    ;; highlight URLs
    ("\\(\\(<\\(URL:\\)?\\)?ftp://[A-Za-z0-9./~_-]*>?\\)" 1 font-lock-type-face t)
    ("\\(\\(<\\(URL:\\)?\\)?http://[A-Za-z0-9./~_-]*>?\\)" 1 font-lock-type-face t)
    ("\\(\\(<\\(URL:\\)?\\)?gopher://[A-Za-z0-9./~_-]*>?\\)" 1 font-lock-type-face t)
    ("\\(\\(<\\(URL:\\)?\\)?wais://[A-Za-z0-9./~_-]*>?\\)" 1 font-lock-type-face t)
))

;;
;; Define hightlight for rmail mode
;;
(defvar rmail-font-lock-keywords
  '(;; Put From field in bold.
    ("^From: \\(.*\\)$" 1 font-lock-keyword-face)
    ;; Put subject in bold italics
    ("^Subject: \\(.*\\)$" 1 font-lock-function-name-face))
  "Additional expressions to highlight in Rmail mode.")

;;
;; Define highlight for rmail summary mode
;;
(defvar rmail-summary-font-lock-keywords
  '(("^\\s *[0-9]+D.*$" . font-lock-string-face)
    ("^\\s *[0-9]+-.*$" . font-lock-keyword-face))
  "Additional expressions to highlight in Rmail Summary mode.")

;;
;; Define hightlight for compilation mode
;;
(defvar compilation-mode-font-lock-keywords
  '(("^\\([^\n:]*:\\([0-9]+:\\)+\\)\\(.*\\)$" 1 font-lock-function-name-face))
;;;  ("^\\([^\n:]*:\\([0-9]+:\\)+\\)\\(.*\\)$" 0 font-lock-keyword-face keep)
  "Additional expressions to highlight in Compilation mode.")

(provide 'thh-font-lock)
