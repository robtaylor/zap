LineEditor configuration options:

From 2.67, CMOS RAM is no longer used.  It's not really a good use of it, and
limits the number of options that I can include.  There's now a config SWI,
or you can supply parameters on start-up:

If you start LineEditor using:

RMRun LineEditor <buffer size> <flags> <min len> <max len> <cursors>

where the parameters are:

<buffer size>: Size of history buffer(s) in KBytes
               (what was *Configure EdSize)

<flags word>: Bits set mean:
bit  0: Local history buffers?
bit  1: Add trailing dot when completion is a directory?
        [Now works with 4DOS style too]
bit  2: Default to overtype mode?
bit  3: Keep duplicate lines in history?
bit  4: Don't do ~ expansion
bit  5: Don't do events (!! !4 !-2 etc)
bit  6: Don't do ^two^three replacement
bit  7: Don't store lines with a leading space or spaces

<min len>: Minimum length line to put in history buffer

<max len>: Maximum length line to put in history buffer (0 means no maximum)

<cursors>: This sets the appearance of the cursor:
byte 0 is the normal cursor
byte 1 is the overtype cursor
Within each byte:
bit 0: 0=> underline 1=> block
bit 1: 0=> flash 1=> steady
The RISC OS default cursor is a flashing underscore (both bits clear).
The default value for <cursors> is &300

So for example:

RMRun LineEditor 20 2_0010010 2 0 &100

Alternatively:

SWI LineEditor_SetOptions
with:
R0=<buffer size>
R1=<flags>
R2=<min len>
R3=<max len>
R4=<cursors>

SWI LineEditor_ReadInfo:

*Provisonal* details (may change):
 
 In: R0 = taskhandle of taskwindow to find info for

 Out: R0 = length of line currently being edited in that taskwindow
      R1 = cursor position

   or R0 = -2 if taskhandle not a taskwindow LineEditor knows about
           -1 if taskhandle is a taskwindow, but no edit in progress
      R1 may be corrupted

Olly
