/*	keymaps.c
	© James Aylett	*/

#include "keymaps.h"

void close_keymaps()
{
  int code;
  KeymapsOpen=FALSE;
  close_child(Keymaps);

  if(Keymap!=0)
  {
    /* store current */
    get_indtext(windows[Keymaps].openblock.window, 7, output);
    if (KeysFile[Keymap]!=NULL) memfree(KeysFile[Keymap]);
    if(strlen(output)==0)
      sprintf(output,"(Alternate keymap %i)", Keymap);
    code=10; /* "&xxx &xxx " */
    KeysFile[Keymap]=memalloc(1+strlen(output)+code);
    sprintf(KeysFile[Keymap],"&%3.3x\t&%3.3x %s",KeyLowest,KeyHighest,output);
  }

  save_keyn();
  free_keys();
}

void open_keymaps()
{
  load_keyn();

  if(KeysFile[0]!=NULL)
  {
    int l;
    l=(int)strtol(KeysFile[0],NULL,10);
    if(l==0 || KeysFile[l]==NULL)
    {
      if(KeysFile[l]==NULL)
      {
        KeysFile[0] = memalloc(2);
        strcpy(KeysFile[0],"0");
      }
      set_indtext(windows[Keymaps].openblock.window,2,"Standard");
    }
    else
    {
      /* Sanity checking to stop crashes if the format is wrong. All happens later. */
      char *temp2;
      temp2=KeysFile[l];
      while(temp2[0]!='\t' && temp2[0]!=' ' && temp2[0]!=0) temp2++; /* 1st var */
      while((temp2[0]=='\t' || temp2[0]==' ') && temp2[0]!=0) temp2++; /* space */
      while(temp2[0]!='\t' && temp2[0]!=' ') temp2++; /* 2nd var */
      while((temp2[0]=='\t' || temp2[0]==' ') && temp2[0]!=0) temp2++; /* space */
      /* temp2 is now keymap comment */
      if (temp2[0]==0)
      {
        sprintf(output, "Keymap %i", l);
        set_indtext(windows[Keymaps].openblock.window,2,output);
      }
      else
        set_indtext(windows[Keymaps].openblock.window,2,temp2);
    }
  }
  else
  {
    KeysFile[0]=memalloc(2);
    strcpy(KeysFile[0],"0");
    set_indtext(windows[Keymaps].openblock.window,2,"Standard");
  }

  Keymap=1;
  while(Keymap<0x100 && KeysFile[Keymap]==NULL) Keymap++;
  if(Keymap>=0x100)
  {
    Keymap=0;
    set_indtext(windows[Keymaps].openblock.window,7,"");
  }
  else
  {
    /* Sanity checking to stop crashes if the format is wrong. Also happens later. */
    char *temp2;
    temp2=KeysFile[Keymap];
    KeyLowest=(int)strtol(temp2+1,NULL,16); /* +1 since '&' */
    while(temp2[0]!='\t' && temp2[0]!=' ' && temp2[0]!=0) temp2++; /* 1st var */
    while((temp2[0]=='\t' || temp2[0]==' ') && temp2[0]!=0) temp2++; /* space */
    KeyHighest=(int)strtol(temp2+1,NULL,16); /* +1 since '&' */
    while(temp2[0]!='\t' && temp2[0]!=' ' && temp2[0]!=0) temp2++; /* 2nd var */
    while((temp2[0]=='\t' || temp2[0]==' ') && temp2[0]!=0) temp2++; /* space */
    /* temp2 is now keymap comment */
    if (temp2[0]==0)
    {
      sprintf(output, "Keymap %i", Keymap);
      set_indtext(windows[Keymaps].openblock.window,7,output);
    }
    else
      set_indtext(windows[Keymaps].openblock.window,7,temp2);
  }

  open_child(Keymaps, -1);
  KeymapsOpen=TRUE;
}

void keymapsclick()
{
  int l,l2;
  if(result->mouse.button.data.menu==1) return;
  switch(result->mouse.icon)
  {
    case 3:
      if(KeysFile[0]==NULL)
        l=0;
      else
        l=(int)strtol(KeysFile[0],NULL,10);
      if(l>0) l--;
      while(l>0 && KeysFile[l]==NULL) l--;
      if(KeysFile[0]!=NULL) memfree(KeysFile[0]);
      sprintf(output,"%i",l);
      KeysFile[0]=memalloc(strlen(output)+1);
      strcpy(KeysFile[0],output);
      if(l==0)
        set_indtext(windows[Keymaps].openblock.window,2,"Standard");
      else
      {
        char *temp2;
        temp2=KeysFile[l];
        while(temp2[0]!='\t' && temp2[0]!=' ' && temp2[0]!=0) temp2++; /* 1st var */
        while((temp2[0]=='\t' || temp2[0]==' ') && temp2[0]!=0) temp2++; /* space */
        while(temp2[0]!='\t' && temp2[0]!=' ' && temp2[0]!=0) temp2++; /* 2nd var */
        while((temp2[0]=='\t' || temp2[0]==' ') && temp2[0]!=0) temp2++; /* space */
        /* temp2 is now keymap comment */
        if (temp2[0]==0)
        {
          sprintf(output, "Keymap %i", l);
          set_indtext(windows[Keymaps].openblock.window,2,output);
        }
        else
          set_indtext(windows[Keymaps].openblock.window,2,temp2);
      }
      break;
    case 4:
      if(KeysFile[0]==NULL)
        l=0;
      else
        l=(int)strtol(KeysFile[0],NULL,10);
      l2=l;
      if(l<0x100) l++;
      while(l<0x100 && KeysFile[l]==NULL) l++;
      if(l>=0x100) l=l2; /* no wraparound */
      if(KeysFile[0]!=NULL) memfree(KeysFile[0]);
      sprintf(output,"%i",l);
      KeysFile[0]=memalloc(strlen(output)+1);
      strcpy(KeysFile[0],output);
      if(l==0)
        set_indtext(windows[Keymaps].openblock.window,2,"Standard");
      else
      {
        char *temp2;
        temp2=KeysFile[l];
        while(temp2[0]!='\t' && temp2[0]!=' ' && temp2[0]!=0) temp2++; /* 1st var */
        while((temp2[0]=='\t' || temp2[0]==' ') && temp2[0]!=0) temp2++; /* space */
        while(temp2[0]!='\t' && temp2[0]!=' ' && temp2[0]!=0) temp2++; /* 2nd var */
        while((temp2[0]=='\t' || temp2[0]==' ') && temp2[0]!=0) temp2++; /* space */
        /* temp2 is now keymap comment */
        if (temp2[0]==0)
        {
          sprintf(output, "Keymap %i", l);
          set_indtext(windows[Keymaps].openblock.window,2,output);
        }
        else
          set_indtext(windows[Keymaps].openblock.window,2,temp2);
      }
      break;
    case 8 :
      l=Keymap;
      if(Keymap>0) Keymap--;
      while(Keymap>0 && KeysFile[Keymap]==NULL) Keymap--;
      if(Keymap==0)
        Keymap=l;
      else
      {
        char *temp2;
        /* store */
        if(l!=0)
        {
          /* store current */
          get_indtext(windows[Keymaps].openblock.window, 7, output);
          if (KeysFile[l]!=NULL) memfree(KeysFile[l]);
          if(strlen(output)==0)
            sprintf(output,"(Alternate keymap %i)", l);
          l2=10; /* "&xxx &xxx " */
          KeysFile[l]=memalloc(1+strlen(output)+l2);
          sprintf(KeysFile[l],"&%3.3x\t&%3.3x %s",KeyLowest,KeyHighest,output);
        }

        temp2=KeysFile[Keymap];
        KeyLowest=(int)strtol(temp2+1,NULL,16); /* +1 since '&' */
        while(temp2[0]!='\t' && temp2[0]!=' ' && temp2[0]!=0) temp2++; /* 1st var */
        while((temp2[0]=='\t' || temp2[0]==' ') && temp2[0]!=0) temp2++; /* space */
        KeyHighest=(int)strtol(temp2+1,NULL,16); /* +1 since '&' */
        while(temp2[0]!='\t' && temp2[0]!=' ' && temp2[0]!=0) temp2++; /* 2nd var */
        while((temp2[0]=='\t' || temp2[0]==' ') && temp2[0]!=0) temp2++; /* space */
        /* temp2 is now keymap comment */
        if (temp2[0]==0)
        {
          sprintf(output, "Keymap %i", Keymap);
          set_indtext(windows[Keymaps].openblock.window,7,output);
        }
        else
          set_indtext(windows[Keymaps].openblock.window,7,temp2);
      }
      break;
    case 9 :
      l=Keymap;
      if(Keymap<0x100) Keymap++;
      while(Keymap<0x100 && KeysFile[Keymap]==NULL) Keymap++;
      if(Keymap==0x100)
        Keymap=l;
      else
      {
        char *temp2;
        /* store */
        if(l!=0)
        {
          /* store current */
          get_indtext(windows[Keymaps].openblock.window, 7, output);
          if (KeysFile[l]!=NULL) memfree(KeysFile[l]);
          if(strlen(output)==0)
            sprintf(output,"(Alternate keymap %i)", l);
          l2=10; /* "&xxx &xxx " */
          KeysFile[l]=memalloc(1+strlen(output)+l2);
          sprintf(KeysFile[l],"&%3.3x\t&%3.3x %s",KeyLowest,KeyHighest,output);
        }

        temp2=KeysFile[Keymap];
        KeyLowest=(int)strtol(temp2+1,NULL,16); /* +1 since '&' */
        while(temp2[0]!='\t' && temp2[0]!=' ' && temp2[0]!=0) temp2++; /* 1st var */
        while((temp2[0]=='\t' || temp2[0]==' ') && temp2[0]!=0) temp2++; /* space */
        KeyHighest=(int)strtol(temp2+1,NULL,16); /* +1 since '&' */
        while(temp2[0]!='\t' && temp2[0]!=' ' && temp2[0]!=0) temp2++; /* 2nd var */
        while((temp2[0]=='\t' || temp2[0]==' ') && temp2[0]!=0) temp2++; /* space */
        /* temp2 is now keymap comment */
        if (temp2[0]==0)
        {
          sprintf(output, "Keymap %i", Keymap);
          set_indtext(windows[Keymaps].openblock.window,7,output);
        }
        else
          set_indtext(windows[Keymaps].openblock.window,7,temp2);
      }
      break;
    case 10: /* edit keymap */
      /* okay, first store current, then _save_keyn(FALSE)
       * then call open_keys(Keymap)
       * Keymap and window contents are conserved across the keys editing,
       * and KeyHighest and KeyLowest are updated if the keymap is saved.
       * close_keys() checks to see if KeyHighest<KeyLowest, in which case it
       * sets both to zero, since that means we have an empty keymap.
       */
      if(Keymap!=0)
      {
        /* store current */
        get_indtext(windows[Keymaps].openblock.window, 7, output);
        if (KeysFile[Keymap]!=NULL) memfree(KeysFile[Keymap]);
        if(strlen(output)==0)
          sprintf(output,"(Alternate keymap %i)", l);
        l2=10; /* "&xxx &xxx " */
        KeysFile[Keymap]=memalloc(1+strlen(output)+l2);
        sprintf(KeysFile[Keymap],"&%3.3x\t&%3.3x %s",KeyLowest,KeyHighest,output);
      }
      _save_keyn(FALSE);
/*      reconstruct_keys();*/
      /* do this so that we don't lose these changes if there's something wrong
       * and _load_keys() has to open the optionset again
       * ### THIS HAS BEEN REMOVED
       * ### THIS MAY CAUSE PROBLEMS (but shouldn't)
       */
      KeyMap=Keymap;
      open_keys(Keymap);
      break;
    case 11: /* new keymap */
      l=1;
      while(l<0x100 && KeysFile[l]!=NULL) l++;
      if(l<0x100 && KeysFile[l]==NULL /* ensuring ... */)
      {
        /* got a free slot */
        sprintf(output,"&00\t&1FF (Alternate keymap %i)",l);
        KeysFile[l]=memalloc(strlen(output)+1);
        strcpy(KeysFile[l],output);
        KeyLowest=0;
        KeyHighest=0x1ff;
        sprintf(output,"(Alternate keymap %i)",l);
        set_indtext(windows[Keymaps].openblock.window,7,output);
        Keymap=l;
      }
      else
      {
        makeerror(FALSE,"ETooManyKeymaps");
//        lookup_message(MessageBlock,"ETooManyKeymaps",output,256);
//        reporterror(0,output,6,"Zap Config");
      }
      break;
  }
}
