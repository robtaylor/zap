$Id: Buglist,fff,v 1.3 1999-02-22 12:44:56 james Exp $

Zap - combined bug and wishlist
===============================

You probably want to turn on auto-width for this file, because otherwise it
looks messy. This list is two things:

1.	A list of *all* suggestions that I know about, possibly with notes.
Some suggestions may be altered - for instance, a suggestion on how to get
ZapRedraw to auto-unload itself was modified to use a more sensible way of
doing it.

2.	A list of all bugs I know about. This is different to 'all bug
reports I know about', because if a bug report both contains insufficient
information to get an idea what went wrong AND is unrepeatable, there's
nothing we can do with it anyway.

James Aylett
<dj@zap.uk.eu.org>

Format:
-------

t ([e ]m)	(r)	(s)		<report>

t = type (| = bug, . = fixed bug, + = suggestion, - = implemented suggestion)
e = * (extension) or + (internal mode)
m = module (eg: Boxes, Menus, Minibuffer ... generally either Zap core source file (although the code may not be there), or extension/mode name). Nothing here indicates something general or unassigned. (!) is 'distribution', (%) is 'documentation'
r = responsible maintainer (once decided)
s = reporting source, if known

+ (!)		()	()		Installer?
+ (!)		()	()		There should be a writable in the IB new file menu... use 'Arbitrary type'
+ (!)		()	(james)		Docs.Commands still necessary? Docs.KeyStrip up to date?
+ (!)		()	(james)		Finalise internationalisation changes
+ (!)		()	(james)		Nice to have more ZapUsers floating around. Perhaps just ship all maintainers' copies.
+ (!)		()	(james)		Update all !ReadMe files. Ideally, make these auto-generating in some way. Modules.!ReadMe needs playing with.
+ (!)		(james)	(james)		Autoload directory. ZapAuto:Preload, ZapAuto:Postload, ZapAuto:Prequit or something. Need RepeatPath command to do this. Then clear out Code.Extensions a bit. Do we need Code.EE? Code.MakeExtern?
+ (!)		(james)	(james)		Sort out Code.Filters - ideally, recompile the GNU text utils against new stubs so they work as filters.
+ (%)		(james)	(james)		Move to buttress; provide StrongHelp output; tech docs under buttress
+ ()		()	()		Add a scripting language that mirrors Zap's 'Menus' system, but that can be applied to dialogue boxes instead. Use this to create a proper preferences dialogue box system, and thus to replace largish chunks of Zap's options menu structure.
+ ()		()	()		Add ability to move main cursor when cursors are unlinked maybe a command which toggles between which one responds to the cursor keys...? Sounds unnecessary to james
+ ()		()	()		An alternative to RISC-OS's appalling single-tasking error boxes, where these are used
+ ()		()	()		Better support for FileTypeExtend... Why? - james
+ ()		()	()		Central bracket matching... see discontinuous area selection...
+ ()		()	()		Check for NC compatability problems involving Wimp$Scrap and the method of checking to see whether Zap is already loaded...
+ ()		()	()		commands in file header
+ ()		()	()		Discontinuous area selection for use with: bracket matching, throwback highlighting, spell checkers, fuzzy input systems i.e. speech and handwriting, Zap's search routines - can't this be done by rectangles, a la emacs/jed/etc. ?
+ ()		()	()		Line spacing isn't stored mode-dependantly ... and a mode specific margin?
+ ()		()	()		load dual edits in Read Only mode ... why?
+ ()		()	()		Make HidePtr die with Zap by default. No ... make HidePtr et al an ZapAuto:PreLoad / ZapAuto:PostLoad thing, and have ZapAuto:PostQuit as well
+ ()		()	()		More use of Hourglass when loading - inc files.
+ ()		()	()		Option for new view to be a split view of a file - one RISC-OS window! Or the idea of linked windows?
+ ()		()	()		Possibly provide mechanism for de-installing modes for low memory use. This is tricky - I've thought about this before - james
+ ()		()	()		Sensible default options, styles in all modes, etc. etc.
+ ()		()	()		Timed save to back # file in Zap dir or ~ file etc. Erm ... I'd prefer #, if it weren't a wildcard. Have to think about this - perhaps ~~ ?
+ ()		()	()		Variable width tabs stops, or maybe tab rulers.
+ ()		()	()		When a file is loaded via EE an empty buffer is first created and then the text is added. Would it be possible to treat the first block of text being added as a new buffer so that file type detection on the contents can be provided, such as for DOS files?
+ ()		()	(joe oldak)	double/triple/etc click-dragging - moving backwards selects from start of word/line/etc., not end. Can this easily be altered? Also, new word/line/etc should be selected as soon as mouse hits start, not end, of unit
+ ()		()	(justin)	Have a command which stops auto-clear selections from kicking in when executed in startop/stopop sequences...
+ ()		()	(james)		'tie' two - or more? - windows together
+ ()		()	(james)		An 'ignore file permissions' flag, so they don't get written back incorrectly (eg: on scR)
+ ()		()	(james)		keypresses on a hotkey window - ie: bind a keymap to a hotkey window
+ ()		()	(james)		Window focus order when closing windows - goes to next window in order, when it should descend the stack, or possibly take previous window in window list - makes multiple op+close window on lots of files neater
+ ()		(james)	(james)		Finish symbolising source
+ (* BASIC)	()	()		'ESCAPE' selection in BASIC mode would be better if it treated tokenised keywords as single characters...
+ (* BASIC)	()	()		*Proper* colouring in BASTXT mode. A cheap method would be good...
+ (* Buttons)	()	()		Buttons in 'core' modes. Ideally needs Buttons to work without cooperation of modes
+ (* Buttons)	()	()		WIMPy search forwards and search backwards buttons... in Buttons default ...
+ (* Debugger+)	(darren)(james)		Optionally display MVN r0,#n as MOV r0,#NOT (n - 1)
+ (* ForZap)	()	()		Zap's internal command table used ...
+ (* HoTMeal)	()	()		HTMLDELETETAG
+ (* StrongZap)	()	()		It'd be nice if bold/underlined/italic text were displayed as such - i.e. it'd be nice if they were coloured specially, both short forms *like* *this* and long forms {/}like this{/}
+ (* TaskW)	()	()		Buttons for suspend/Link/kill... button support for all modes without intervention ...
+ (* TaskW)	()	()		Checking that the Obey/TaskObey file being used as the taskwindow's input is LF-terminated ...if it isn't, Zap should optionally be pretending it is.
+ (* TaskW)	()	()		Implement c@ when this is not on sc2
+ (* TaskW)	()	()		Indication in title when taskwindow unlinked/suspended/dead...?
+ (* TaskW)	()	()		Make TaskWindow arrow keys be passed on via vectors instead of trapping.
+ (* TaskW)	()	()		Set default e_compile/save and run etc to save and then Filer_Run in a TW? Isn't that done?
+ (* TaskW)	()	()		TaskWindow history on sMENU...
+ (* ZapConfig)	()	()		internationalise - more than just a Messages file; use Zap$Country
+ (* ZapConfig)	()	()		v1.41 additions
+ (* ZapConfig)	()	()		v1.41 config format
+ (* ZapProg)	()	()		assemble ADRL/X
+ (* ZapProg)	()	()		DataAdd et al
+ (* ZapProg)	()	()		header/function/TLD finding ... TMF for paths? ... ctags?
+ (* ZapProg)	()	()		new MAKE/BUILD etc. commands using TMFs
+ (* ZapProg)	()	()		SWIToName, SWIToNumber
+ (* ZapRedraw)	()	()		usage locking - so can kill it if unused, to save memory?
+ (* ZapSpell)	()	()		Add option to sort ZapSpell throwback windows alphabetically...
+ (* ZapSpell)	()	()		Generally sort ZapSpell out...
+ (* ZapText)	()	()		swapcase is nice to tokenised modes
+ (* ZapText)	()	(james)		Want to use GNU text utils with filter commands => need to fix UnixLib's redirection handling; code is in !UnixLib37.src.unix.c.unix (then rebuild Alun Jones' txtutils port). James knows how the redirection should work.
+ (* ZapText)	(james)	(james)		Internationalise, a la ZapBits
+ (* ZapText)	(james)	(james)		TMF clients - help stuff
+ (* ZapUtil)	(james)	(james)		Internationalise, a la ZapBits
+ (* ZapUtil)	(james)	(james)		SETNAME uses TMFs.
+ (*)		()	()		Add a hypertext-like Zap help mode based on HTML... i.e. add a web browser mode... isn't this ott?
+ (*)		()	()		Generic syntax-colouring mode using regular expressions... or using something, at any rate ... we've discussed regexps using cached DFAs, which seems a good move; alternatively, the more primitive method used by StrongED? Something between the two? a la jed?
+ (*)		()	()		HTTP fetcher for Zap - quite important... surely should use whatever Acorn's *Fetcher system is? - james. More a library issue than writing one ourselves ...
+ (*)		()	(james)		expanding abbreviations, probably configurable per-mode or something. Possibly with a hook into the core in some way.
+ (+ Code)	()	()		Add native assembly of LDRL-type instructions...?
+ (+ Code)	()	()		Add the ability to browse through main memory...! Including the application memory of different applications...
+ (+ Code)	()	()		Append the module title to the module title header field.
+ (+ Code)	()	()		Independent mini-buffer history for Code mode instructions
+ (+ Code)	()	()		Proper in-line editing of Assembler...
+ (+ Code)	()	()		Query assembling instructions which reduce reducible constants...?
+ (+ Code)	()	()		Search backwards in Code mode for ADRL...
+ (+ Code)	()	()		System Co-processor / new non-ARM2 instructions signalling...
+ (+ Code)	()	()		Use the DS disassembler lower case option properly...
+ (+ Code)	()	()		Use Undefined Instruction Text in Debugger.Messages...
+ (+ Code)	()	(gary lee)	Option to disable clever disassembly.
+ (+ Code)	()	(james)		Differentiate between CLib calls and internal image calls (not too difficult - differentiate for -> code: as well?)
+ (+ Text)	()	()		Soft wrap auto-detection could do with being sped up.
+ (+ Throwback)	()	()		Add a 'just list filenames' throuback mode - using the new spare bits?.
+ (+ Throwback)	()	()		Adjust on title of file removes whole throwback of that file.
+ (+ Throwback)	()	()		Highlighting match in throwback mode.  To do this properly would ideally require an extension to the throwback protocol so that the highlighting can be used by clients apart from Zap.
+ (+ Throwback)	()	()		Throwback should canonicalise name BEFORE inserting the file - immediately. Done?
+ (+ ZapRedraw)	()	()		Add fast bitmapped *anti-aliased* fonts - fairly easy
+ (+ ZapRedraw)	()	()		Add proportionally spaced font redraw mode by adapting VDU redraw. This will be very hard to support properly from within Zap, what with Window wrap, Soft wrap and all
+ (+ ZapRedraw)	()	()		Add WIMP-friendly mode with font kerning et al - very hard
+ (+ ZapRedraw)	()	()		Ideally include loading of fonts in ZapRedraw so if multiple ZapRedraw clients use the same font, it is available in an area of shared memory and does not need to be loaded repeatedly.
+ (+ ZapRedraw)	()	()		Speed up VDU redraw to use OS_WriteN + large rectangle cursors...????
+ (+ ZapRedraw)	()	()		Write some redraw widgets: e.g. Zelp - fast interactive help and Zhars...
+ (+ ZapRedraw)	()	(tim)		Textured backgrounds ... in VDU redraw mode initially
+ (Boxes)	()	()		Add 'List of files' throwback command/window. May need alterations to Search to be really cool ... list of windows?
+ (Boxes)	()	()		Add a proper word count/document statistics command
+ (Boxes)	()	()		dboxes work as messydos - old choice in icons, remove if user types over
+ (Boxes)	()	()		Dragging files *into* the Save/SDC box inserts their pathnames into the relevant writable icons
+ (Boxes)	()	()		Make *all* relevant buttons be highlighted by their keyboard shortcuts...
+ (Boxes)	()	()		Option to have Goto box clear and implement 'Tab' in it, or similar. Is this the MessyDOS thing again?
+ (Boxes)	()	()		Option to make save boxes etc transient.
+ (Boxes)	()	()		redefine keystrokes in dialogue boxes - idea from StrongED; probably don't bother
+ (Boxes)	()	()		Should disc buttons auto-repeat?
+ (Commands)	()	()		/Perhaps/ SETWIDTH, in window wrap mode, should actually set the window width...?
+ (Commands)	()	()		Add SMOOTHSCLEFT, SMOOTHSCRIGHT, SMOOTHSCUP and  SMOOTHSCDOWN /possibly/ with acceleration on auto-repeat.
+ (Commands)	()	()		CENTREONSCREEN command...?
+ (Commands)	()	()		Command to load !Help file of a given mode and...
+ (Commands)	()	()		COPYCHARABOVE/DUPELINE command... for greater performance
+ (Commands)	()	()		CR<->LF...? We have SWAPCRLF, but it neither sets modified nor is undoable - deliberately, in the second case; the former could cause problems.
+ (Commands)	()	()		Expand tabs. I thought was available as Untabify - except that leaves quoted tabs in program source modes, but that's right anyway.
+ (Commands)	()	()		FINDFILE's tab in a TW takes account of Prefix$Dir... has this been done now?
+ (Commands)	()	()		Get TOGGLEWIND to pay attention to the SHIFT/cmos bit.
+ (Commands)	()	()		indent/outdent performable on a single line
+ (Commands)	()	()		MENUCOMMAND "CMD" command... very hard...
+ (Commands)	()	()		SETINSERTTIME and SETINSERTDATE should modify the relevant format strings. These would be new commands then ... I quite like the idea, alternatively, of moving time/date format strings into TMFs.
+ (Commands)	()	()		WINDOWXPOS, WINDOWYPOS, WINDOWXSIZE, WINDOWYSIZE commands... and functions ... 
+ (Commands)	()	(james)		REVERT
+ (Fonts)	()	()		IB font selection...Per-mode font
+ (Keys)	()	()		No keys file entries for Alt-key combinations or PgUp/PgDown Major issues with keyboard handling here ...
+ (Menus)	()	()		Add small filetype sprites to the 'Types' menu. No - looks horrible!
+ (Menus)	()	()		Make 'Edit config' use OLE so that reload options is automatic...
+ (Menus)	()	()		some way of including menu help text in the menu definitions
+ (Menus)	()	()		update menu shortcuts when basemap changes
+ (Minibuffer)	()	()		click on window with minibuffer open puts cursor in minibuffer
+ (Minibuffer)	()	()		command completion in minibuffer
+ (Minibuffer)	()	()		Minibuffer 'Warning's get the caret? + history menu? Really? Isn't that just irritating?
+ (Minibuffer)	()	()		Minibuffer warning scheduler...
+ (ModeBits)	()	()		protect against loaded modes' modules dying - also command tables. Usage count? Time since last used? Auto purge when running low on memory?
+ (ModeBits)	()	(james)		replace e_interrogate #4 with a mode info block; leave until v1.45-v1.46 changes
+ (Modes)	()	()		Add support for full-blown modes which don't have names... eg Buttons
+ (Printing)	()	()		Print selected region.
+ (Printing)	()	(james)		configurable print headers and footers
+ (Redraw)	()	()		Different background colour for line numbers and colons...
+ (Redraw)	()	()		folding
+ (Redraw)	()	()		narrowing
+ (Redraw)	()	()		Tab display could be improved with four dedicated tab characters...? How? Also, doesn't this affect all redraw modes?
+ (Search)	()	()		'Always maintain cursor vertical position in search' option. Pardon?
+ (Search)	()	()		Multi-task option in SEARCHBUF...? Hmm ... nice idea, probably a PITA to do
+ (Search)	()	()		Optimise search if no control codes.
+ (Search)	()	()		Same -> Other, same -> other and SAME -> OTHER search and replace
+ (Search)	()	()		Search confined to selection...?
+ (Search)	()	()		Search macros are limited to 7 characters... - I believe this is now a build-time thing ...
+ (Search)	()	()		want to export search_string, interface to search_text, as Zap_SearchString. This can wait; it's needed for an INSTR function.
+ (Throwback)	()	()		Add Throwback to the relevant !Help file in the 'Authors' file...
+ (Throwback)	()	()		throwback sets file title to something useful; probably want to extend create_throwback
+ (TMFs)	(james)	(james)		boolean variables, using t/f strings?
+ (TMFs)	(james)	(james)		dumpvars command. dumpmodevars command?
+ (TMFs)	(james)	(james)		per-file variable overrides; export code via Zap_ call. Should allow interpolation ... % as a special mode name meaning 'in this file'?
+ (TMFs)	(james)	(james)		variable substitution
+ (Undo)	()	()		Global clipboard, PASTE depend on undo buffer
+ (Wimp)	()	()		Interactive help on a per-icon basis...
+ (Wimp)	()	(gary lee)	Make shift-drag files into Zap more configurable. Gary wants the space removed; probably use TMFs as a format string. One for files, one for directories? One for selections?
| (!)		()	()		Advising people that binding cC to COPYSEL:CLEARSEL causes problems in TW mode.
| (!)		()	(james)		Remove !ZapConfig from Code.Config, since it doesn't work with v1.41.
| ()		()	()		'Altersel at end' fudge doesn't yet work with mouse-drag selection, nor SELREGION selection for that matter...?
| ()		()	()		'New View', when issued from the icon bar, with taskwindows and throwback buffers behaves differently from when issued from a main window.
| ()		()	()		Auto-clear of selection with two views doesn't work properly
| ()		()	()		Bug when combining src1 & src2 and then saving - probably there for ages!
| ()		()	()		build under RISC OS make gives sig5 in v1.41 these days ... ?
| ()		()	()		Ctrl-select clicking removes cursor mark ?
| ()		()	()		Disc-reading code may still have self-mod SWI? Darren?
| ()		()	()		DOS trying to remove 0x0D's?
| ()		()	()		Escape in main window closes that window's D-Boxes feature...?
| ()		()	()		If a tab is the last thing on a line then it is possible to get the cursor to disappear completely off the right-hand side of the window
| ()		()	()		Kill DAs on QUIT
| ()		()	()		Kill off /all/ LineEditor buffers on quitting.
| ()		()	()		Out of memory a. needs changing, b. loops. Particularly taskwindow output
| ()		()	()		Random cursor jumping with 'Confine V' option on + more than one window.
| ()		()	()		Remove debug beeps in cln_readc ... Zap, ZapBASIC, ZapSpell - done?
| ()		()	()		Selection always vanishes on a mode change; even to the same mode - there is a solution to this, involving the SELECTION fn/command. This isn't idea, though.
| ()		()	()		Strip spaces and the file modified flag... How do we tie this in with the new modified system? Is it correct to set modified on set strip spaces? DOS/Spool file also?
| ()		()	()		Tabs which are selected make the cursor very hard to see there
| ()		()	()		When editing two views of the same file then the cursor in the file not being edited can be affected by ins/del txt - iff it is soft-wrapped...
| ()		()	()		When loading files commands at end of paths are not checked properly...
| ()		()	(chris bell)	crash on shift-end?
| ()		()	(chris bell)	RAM xfer from Zap to Impression: "Directory [rubbish] not found"
| ()		()	(gary lee)	BASTXT doesn't tokenise before a RAM transfer. This is fairly tricky to solve, because of the way (a) RAM transfer, and (b) BASTXT work :-(
| ()		()	(gary lee)	In mode 13, Zap sometimes complains about lack of memory even when there's enough.
| ()		()	(gary lee)	Out Of Memory while loading a file doesn't free up WimpSlot (RO 3.11)
| ()		()	(james)		Out Of Memory causes a BTZ somewhere in the Utility Module (RO 3.71, RO 3.6; seems not on pre-3.5)
| ()		()	(tim)		long, > width, last line, selecting by dragging a selection downwards 'off' the LHS doesn't select any of the last physical line
| ()		()	(tim)		long, > width, last line, selecting by dragging a selection downwards after a triple-cick, doesn't select any of the last logical line
| (* BASIC)	()	()		/Type/ in BASIC mode 'LDRS000000000000000000000000000000=0'
| (* BASIC)	()	()		? Multiple ? "Ctrl K"s in BASIC mode - hmmm only minor problems when the cursor is in the middle of a keyword seem to be present...?
| (* BASIC)	()	()		? Select a BASIC line by triple clicking then swapcase etc. minor
| (* BASIC)	()	()		ASSERT 0 = P% AND 31 in BASIC mode... :<
| (* BASIC)	()	()		ASSERT P% AND 31 = 0 in BASIC mode...
| (* BASIC)	()	()		BASIC bracket match to right spot...
| (* BASIC)	()	()		BASIC changes the return character to 13.  It stays that way
| (* BASIC)	()	()		BASIC DCBabc coloured wrong...?
| (* BASIC)	()	()		BASIC: ; CMP R0,ASC":" no longer is being coloured properly
| (* BASIC)	()	()		Chr$200's - i.e. half tokens - at the end of BASIC lines...
| (* BASIC)	()	()		cursor disappears sometimes?
| (* BASIC)	()	()		Cursor->Confine H in BASIC mode doesn't work. Should it work by tokens ?
| (* BASIC)	()	()		Deleted to SOL. Last word deleted was REPEAT. When I deleted that it also deleted the line. I pressed Return to start a new line, and got an endless series of cln_backwards errors. I have "force line numbering" on; by default everything is numbered in 1s.
| (* BASIC)	()	()		Enter, somehow, in the BASIC mode P. P - then press 'fullstop':Two PRINTs!
| (* BASIC)	()	()		Inserting regions not ending on line-ends in BASIC mode...i.e. copying multiple incomplete lines of BASIC should not insert CRs.
| (* BASIC)	()	()		Just now copying a block of lines using COPYSEL between two BASIC windows the last line of the block was duplicated in the display; UPDATEWINDOW cured it.
| (* BASIC)	()	()		MOVESEL past EOL...??? with NSE on.
| (* BASIC)	()	()		Rather than strip after ':'s in ASSEMBLE reject totally if any OPTs...?
| (* BASIC)	()	()		Saving a file in BASTXT mode can tokenise it and put it into BASIC. OK. Pardon?
| (* BASIC)	()	()		Search and replace selects whole keywords - and replaces them, too
| (* BASIC)	()	()		Serious colouring problem: .mode_prevline; REM redraw the screen
| (* BASIC)	()	()		The directive 'align' in lower case letters isn't coloured correctly, although the upper case version is.
| (* BASIC)	()	()		Top-bit set characters in * commands - would be nice if these were fixed.
| (* BASIC)	()	()		Top-bit set characters in assembler comments ... backwards compatability
| (* BASIC)	()	()		undo falls over sometimes?
| (* BASIC)	()	()		Variables starting _ in assembler...?
| (* BASIC)	()	()		Yes, LHS margin redraw problem observed, when last chr not aligned in Code mode, also BASIC mode...
| (* BASIC)	()	()		ZapBASIC last line = logical line 1 in GotoBox.
| (* BASIC)	()	()		ZapBASIC REM at new file or end - may be fixed. What does this mean?
| (* BASIC)	()	(james)		Remove 'Window wrap' code and option
| (* BASIC)	()	(reuben)	'lr' in 'lr%' coloured as register not variable
| (* BASIC)	()	(reuben)	sometimes a string array is wrongly coloured, eg at the start of a line with several spaces before it. Bug is intermittent.
| (* BASIC)	()	(reuben)	undo replaced 'REM with '@' and didn't undelete a deletion
| (* DWExt)	()	()		incorrectly still refers to !Zap.3rdParty somewhere?
| (* HoTMeaL)	()	()		Fix HTMLINSERTIF in non HoTMeaL modes. Also "... has been replaced by TMT_IF" - can we replace this too?
| (* HoTMeaL)	()	()		various HTML buttons need STOPOPs? / ESCAPE-CHECKING. Various HTML buttons probably need their heads rescrewing to work with the new command language.
| (* StrongZap)	()	()		appears to colour "#Fcode:some stuff" wrongly - the ":some stuff" gets the # colour rather than "some stuff" getting body colour.
| (* StrongZap)	()	()		For that matter, why is there a separate body colour - wouldn't foreground be a better colour to use?
| (* TaskW)	()	()		armwvt in taskwindow giving a silly line break!
| (* TaskW)	()	()		Changing width in a TaskWindow - deletes all existing text - eeek!? this also happens if window-wrap and infinite width are both on...
| (* TaskW)	()	()		Copy text from TaskWindow leaves trail of cursors
| (* TaskW)	()	()		Moving of large bits in the task window causes selection to be deleted messing up data transfer...?
| (* TaskW)	()	()		TaskWindow output and no flashing cursor...
| (* TaskW)	()	()		TaskWindow WIMP message title... Huh?
| (* TaskW)	()	()		VDU 21,65,6 in an appropriate TASKWINDOW doesn't work. Ctrl-U clash
| (! ZapBits)	()	(james)		Doesn't contain an External file
| (* ZapEmail)	()	()		In ZapEmail, "-I" tabs extend into borders where they are not redrawn properly sometimes.
| (* ZapMJE)	()	()		C mode's preprocessor indenting. Also its comment indenting; both wrong in various ways.
| (* ZapMJE)	()	()		copying '}'s in 'c' mode... used to cause exceptions - it currently doesn't indent because of this problem
| (* ZapMJE)	()	()		ZapMJE needs 'fixing' so that throwback buffers can be guarded from 'external' writes... done? - /partly/...
| (* ZapMJE)	()	(reuben)	Problem with INSERT "xxx{}" in ZapMJE...
| (* ZapMJE)	()	(reuben)	reports that in C mode cut to EOF not working properly - with big files?
| (* ZapMJE)	()	(reuben)	Various indent related problems and asks for 'no auto unindent'.
| (* ZapObey)	()	()		Obey file |s line end in IF with comment next
| (* ZapSpell)	()	()		F12
| (* ZapSpell)	()	()		REPLACE when loading...
| (* ZapSpell)	()	()		Return...
| (* ZapSpell)	()	()		Spell problems with adding words...
| (* ZapSpell)	()	()		SPELL_BUF - aborts if ISP not loaded!
| (* ZapSpell)	()	()		SPELL_REPLACE with no SPELL window open at all...
| (* ZapTeX)	()	()		wordwrap off, a recognised command: last letter is last possible on line causes ungraceful crash
| (* ZapText)	()	()		For FILTERSEL, the EOL character is not passed out in this file if the selection went up to, and not beyond, the end of the line. This causes problems when a line is pasted back into Zap from the filter, as the next line will be appended.
| (* ZapText)	()	()		REMOVELF seems to do very badly if tabs are involved
| (* ZapText)	()	()		ZB swapcase on then AT EOF -> THEN moves cursor to SOL...
| (* ZapText)	()	(james)		NotifyUser appears to look strange - the Zap_ call it uses may have changed slightly.
| (* ZapUtil)	()	(james)		Check HelpData (some entries seem to be missing)
| (* ZapUtil)	()	(james)		Cursors commands don't have minibuffer prompts
| (+ Code)	()	()		Changing early module offsets causes the redraw to go wrong
| (+ Code)	()	()		Double-click should select in Code mode...
| (+ Code)	()	()		Fix bugs when EOF is not word alined. Word mode too...
| (+ Code)	()	()		In Code mode, drag a selection to full size... then toggle to max size.
| (+ Code)	()	()		Last 1 2 or 3 characters in Code / Word modes.
| (+ Code)	()	()		Still sometimes two?-too-many cursor redraws in Code mode...
| (+ Code)	()	()		Tidy up stray colons on the last line of Code + other mode...
| (+ Code)	()	()		Yes, LHS margin redraw problem observed, when last chr not aligned in Code mode, also BASIC mode...
| (+ Code)	()	(james)		APCS colouring causes [] in LDRB a3,[a2],#1 and [ in LDR a1,[a4,#0] to be colour 'register' not '[ and ]'
| (+ Text)	()	()		Auto soft-wrap detection may be *too* good - it kicks in even if there is a /single/ long line...
| (+ Throwback)	()	()		Linenumbers above &A000000 are coloured wrong...?
| (+ Throwback)	()	()		Throwback from NCC with multiple files giving problems with it not identifying the correct file... NCC's fault - can we hack it?
| (+ Word)	()	()		Selection in word mode and the last byte...
| (AlterTxt)	()	()		Deleting lines at bottom of screen causes things to judder up and down
| (Boxes)	()	()		D-Box loses input focus when menu pressed over it when it is accessed from a menu. Really? - james
| (Boxes)	()	(james)		close modified -> save -> "older than on disc" -> overwrite; save box remains, window doesn't close
| (Boxes)	()	(james)		MZAPBOX - end < start causes fatal error, via out of memory - which may also be implicated
| (Boxes)	()	(james)		WC bug: run while the box is still open, eg: use learned sequence. Get 'Invalid Window Handle'. I've fixed this before; I think it's the Wimp not noticing that its current menu has been deleted; possibly do that first?
| (Commands)	()	()		INDENTBY command seems to be broken, especially with -ve arguments...? Certainly has had many problems ...
| (Commands)	()	()		Problem with SENDSEL and CRs - problem currently fudged
| (Commands)	()	(justin)	FORMATTEXT failure with SW? FORMATTEXT needs an overhaul anyway; should optionally preserve indenting ... although admittedly some work has been done with Darren's FORMATINDENTED here ... possibly can do CLEFT:SRIGHT:FORMATINDENTED "\<" or something?
| (Commands)	()	(james)		FORMATTEXT stops if an unbreakable line exceeds the wrap width
| (Commands)	()	(james)		MZAPBOX - or menu building - has a bug; hanging it off my 'Program' menu fails. Troubles with double instantiation?
| (Commands)	()	(james)		NEWFILE: cursor positioning bug
| (Commands)	()	(james)		TOTALSEL should respect Escape, and use hourglass.
| (Commands)	()	(tim)		F2 when no current directory inserts rubbish. is no CSD possible...?
| (CreateFile)	()	()		s.CreateFile:calc_ftype doesn't handle exec=-1, load=-1 => untyped but effectively of type "Command". Probably export calc_ftype so clients reap the same benefits.
| (CreateFile)	()	(iain truskett)	Ursula crash from QUICKSAVE et al has been reported for RISC OS 3.8
| (CreateFile)	()	(neil)		Ursula crash from QUICKSAVE et al - save_text - with no path. Data abort - is r2 getting corrupted on return to Wimp_poll?
| (Cursors)	()	(tim)		Change cursor type doesn't update immediately? seems OK to
| (Execute)	()	()		COMMAND WIMPTASK "Run ZapCode:Config.CreateConf -script ZapCode:Config.RunScript":RELOADKEYS gives "Bad command call" from a menu - but fine from the minibuffer. How about bound in Keys? Learned?
| (Execute)	()	()		Commands which change the window with the input focus don't work well in MULTICOMMANDS. This should be fixed, or at least better.
| (Execute)	()	()		If a command is not found in the module in which the external file claims that it resides then there can be exceptions.
| (Execute)	()	()		The first is about learned sequences. These seem to work under most circumstances, except when using them in conjunction with a search. The mini-buffer search string seems to get corrupted when performing the learned sequence, so it won't work correctly.
| (Execute)	()	(james)		multicommand blocks in variables &30E, &30F, &322 cause minibuffer to screw up, and don't execute
| (Fonts)	()	()		Error when font file is completely missing - should at least be able to revert to using /something/...
| (Fonts)	()	()		font loading code appears broken for substyles in v1.41
| (Fonts)	()	(gary lee)	anti-aliased fonts aren't always freed - Gary reports for VDU, James has seen only for DSA
| (Fonts)	()	(gary lee)	Selecting a ROM font in the font list won't have its name ticked (although on bootup the font list is built correctly with ticks in place)
| (Keys)	()	()		Argument type errors in keys file stop Zap from starting
| (Keys)	()	()		cSPACE keymap entry is corrupted by any '&'s in the keys file *at all*. Pardon?
| (Menus)	()	()		ck/ shortcut reads k/
| (Menus)	()	()		Keyboard shortcuts in menus are not always aligned correctly... sounds like a pre-RO 3.5 problem only; this could be tricky for me to test - james
| (Menus)	()	()		When a writable menu entry is adjust-clicked in it often loses the caret this is caused by commands that call new_window_status...? Use the new version of this command where possible...
| (Minibuffer)	()	()		Clicking in the minibuffer doesn't position the cursor
| (Minibuffer)	()	(gary lee)	Permanent minibuffer behaves strangely ... sometimes frobs window cursor position wrongly?
| (Minibuffer)	()	(james)		Escape from permanent minibuffer doesn't return cursor to window (may not be a bug?)
| (Printing)	()	()		Fancy Print - Escape - Close window - machine locks
| (Printing)	()	()		Fancy print still doesn't work on turbo drivers.
| (Printing)	()	()		The Computer Concepts Turbo driver bug still hasn't been fixed - beware! Dom now knows how to fix it. The bug is actually in the Turbo drivers' printing of background objects. It was believed that Computer Concepts would be offering a fix 'soon'.
| (Printing)	()	(a. thouky)	Fancy print boundary box problems...?
| (Printing)	()	(reuben)	Quick print of lines 1-60 of a 1148 line file, but the "60" was ignored; it seemed that it was going to print the whole document.
| (Redraw)	()	()		Redraw of line numbers happens far too much - but there's no easy fix
| (Redraw)	()	()		When an error appears e.g. in 'Code' mode when editing an instruction, the cursor doesn't get redrawn properly underneath it...
| (Search)	()	()		"\n\>" is needed in searches. Should be "\>". Note that Darren is against fixing this
| (Search)	()	()		In Code mode - and word mode? - a Raw search can get 'stuck'. When SS? not word-aligned :<.
| (Search)	()	()		search for '"xxx'...? Pardon?
| (Search)	()	()		Search forwards and the click an another window.  The 'previous' search string is used to find the next match - this has been reported as being an irritation. <= abort i-search not updating search window search string
| (Search)	()	()		Two cursors are sometimes visible in Search AYT
| (Softwrap)	()	()		Problem with SW and another window's cursor moving
| (Softwrap)	()	(justin)	SW and auto-indent don't mix - there may be problems here
| (Throwback)	()	(theo)		throwback affects older view on a file, not most recent / one search started in
| (TMFs)	()	(james)		might be a remaining buffer overflow bug ... I've seen it once
| (Undo)	()	()		Bugs in YANK between buffers - esp. when copied-to buffer has no undo
| (Undo)	()	()		FastUndo loses info...? hard to reproduce ... with full undo/S+R?...
| (Undo)	()	()		UNDOing to the start of a file does not alter the "modified" file flag.
| (Undo)	()	(gary lee)	Running out of memory during an insert operation causes memory leakage; probably the UNDO op stuff isn't being released
| (Wimp)	()	()		Datasave to Zap doesn't seem to set focus either.
| (Wimp)	()	(reuben)	Zap can make a mess of its file transfer and leave its transfer file open.
| (Wimp)	()	(tim)		Ctrl-SELECT on window's close icon really kills...? Doesn't it?
| (Wimp)	()	(gary lee)	DataSave sends filetype = &FFD for untyped, not -1 as it should. (just before s.StartCode:send_data_save.type$l - probably need a flag in R10.)
| (Wimp)	()	(gary lee)	DataSave to Zap (ie: app to app transfer) seems to claim twice as much memory as with Filer? (This may be an artifact of a 32k page size, but is worth investigating anyway.)
| (Wimp)	()	(gary lee)	DataSave to Zap doesn't set up modified system properly; '*' is in window, but can close without prompt, and <insert><undo> removes '*'.
| (Wimp)	()	(gary lee)	Invert the palette - LH margin isn't redrawn (RO 3.11)
