; Contains mode entry points for BASIC mode.
; $Id: Brackets,fff,v 1.2 1999-08-27 11:09:48 james Exp $
; -*- armasm -*-

 GET h.ZapBasHdr
 GET h.ZapBASIC
 GET h.BAStxt
 GET h.SWIs
 GET h.Buttons

 EXPORT charchar
 EXPORT charfromoffset
 EXPORT basic_get_the_mode_word

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Bracket matching					;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

basic_get_the_mode_word
 FNJSR
 LDR	R1,modenumberstoredhere
 FNcall	Zap_GetModeWord
 FNRTS

modenumberstoredhere
 DCD 0

 LOCAL

charchar
 STMFD	R13!,{R0-R12,R14}
 STR	R1,modenumberstoredhere
 MOV	R1,#0
FromLimport4imp
 CMP	R1,R5
 BGE	FromLimport5imp
 LDRB	R0,[R7,R1]
 TEQ	R0,#')'
 TEQNE	R0,#'}'
 TEQNE	R0,#']'
 ADDNE	R1,R1,#1
 BNE	FromLimport4imp

 CMP	R5,#2
 ADDCS	R1,R1,#1
 BCS	FromLimport4imp

 SUB	R5,R5,R1
 ADD	R7,R7,R1
 TEQ	R0,#')'
 BLEQ	FromLimport9imp
 TEQ	R0,#'}'
 BLEQ	FromLimport10imp
 TEQ	R0,#']'
 BLEQ	FromLimport10bimp
 ;SUB	 R5,R5,#1
 ;ADD	 R7,R7,#1
 ;MOV	 R1,#0
 ;B	 FromLimport4imp
FromLimport5imp
 LDMFD	R13!,{R0-R12,PC}

FromLimport9imp
 STMFD	R13!,{R1-R10,R14}
 LDR	R0,[R10,#12]
 MOV	R1,#'('
 MOV	R2,#')'
 BL	FromLimport18impsc
 BLEQ	FromLimport11imp
 LDMFD	R13!,{R1-R10,PC}

FromLimport10imp
 STMFD	R13!,{R1-R10,R14}
 LDR	R0,[R10,#12]
 MOV	R1,#'{'
 MOV	R2,#'}'
 BL	FromLimport18imp
 BLEQ	FromLimport11imp
 LDMFD	R13!,{R1-R10,PC}

FromLimport10bimp
 STMFD	R13!,{R1-R10,R14}
 LDR	R0,[R10,#12]
 MOV	R1,#'['
 MOV	R2,#']'
 BL	FromLimport18imp
 BLEQ	FromLimport11imp
 LDMFD	R13!,{R1-R10,PC}

FromLimport11imp
 STMFD	R13!,{R0-R7,R14}
 LDR	R4,[R10,#c_off]
 LDR	R5,[R10,#c_col]
 STR	R0,[R10,#c_off]
 FNcall	Zap_ReflectCaret
 SWI	XOS_ReadMonotonicTime
 MOV	R3,R0
 BL	FromLimport26imp
 ADD	R3,R3,R0
FromLimport12imp
 MOV	R0,#&98
 MOV	R1,#0
 SWI	XOS_Byte
 BCC	FromLimport13imp
 SWI	XOS_ReadMonotonicTime
 CMP	R0,R3
 BLT	FromLimport12imp
FromLimport13imp
 STR	R4,[R10,#c_off]
 FNcall Zap_UpdateCaret
 STR	R5,[R10,#c_col]
 FNcall Zap_PlotCaret
 LDMFD	R13!,{R0-R7,PC}

FromLimport18imp
 STMFD	R13!,{R3,R4,R14}
 MOV	R3,R0
 MOV	R4,#1		; depth.
loop2$l
 SUBS	R3,R3,#1
 BLT	FromLimport20imp
 MOV	R0,R3
 BL	charfromoffset

 TEQ	R0,#'"'
 EOREQ	R4,R4,#&10000

 CMP	R0,#32
 BCC	FromLimport20aimp

 TST	R4,#&10000
 BNE	loop2$l

 TEQ	R0,R2
 ADDEQ	R4,R4,#1
 BEQ	loop2$l

 TEQ	R0,R1
 BNE	loop2$l
 SUB	R4,R4,#1
 TST	R4,#&FF
 BNE	loop2$l
FromLimport20imp
 MOV	R0,R3
 LDMFD	R13!,{R3,R4,PC}

FromLimport20aimp
 MOVS	R0,#1
 LDMFD	R13!,{R3,R4,PC}

FromLimport20bimp
 MOVS	R0,#0
 LDMFD	R13!,{R3,R4,PC}

FromLimport18impsc
 STMFD	R13!,{R3,R4,R14}
 MOV	R3,R0
 MOV	R4,#1
loop2a$l
 SUBS	R3,R3,#1
 BLT	FromLimport20imp
 MOV	R0,R3
 BL	charfromoffset

 TEQ	R0,#'"'
 EOREQ	R4,R4,#&10000

 CMP	R0,#32
 BCC	FromLimport20aimp

 TST	R4,#&10000
 BNE	loop2a$l

 TEQ	R0,R2
 ADDEQ	R4,R4,#1
 BEQ	loop2a$l

 TEQ	R0,R1
 TEQNE	R0,#&8A ; tab
 TEQNE	R0,#&A7 ; instr
 TEQNE	R0,#&B0 ; point
 TEQNE	R0,#&C0 ; left$
 TEQNE	R0,#&C1 ; mid$
 TEQNE	R0,#&C2 ; right$
 TEQNE	R0,#&C4 ; string$
 BNE	loop2a$l
 SUBS	R4,R4,#1
 TST	R4,#&FF
 BNE	loop2a$l
 B	FromLimport20imp

FromLimport26imp
 STMFD	R13!,{R1,R2,R14}
 STMFD	R13 !,{R1-R11}
 ;FNLDR R1,mode_basic
 ;ADRL	 R1,localcopyof_mode_basic
 LDR	R1,modenumberstoredhere
 FNcall Zap_GetModeWord
 LDMFD	R13 !,{R1-R11}
 MOV	R2,#20
 TST	R0,#1 << 31
 MOVEQ	R0,#0
 MOVNE	R0,R2
 LDMFD	R13!,{R1,R2,PC}

FromLimport27imp
 STMFD	R13!,{R9,R11,R14}
 LDR	R9,[R11,#4]		; REM mode word...
 LDMFD	R13!,{R11}
 LDR	R14,[R12,#0]
 ADD	R14,R14,#Zap_BaseMode
 STMFD	R13!,{R14}
 MOV	R14,PC
 LDMFD	R13!,{PC}
 LDMFD	R13!,{R11,PC}

FromLimport28imp
 LDR	R0,[R10,#12]
 SUBS	R0,R0,#1
 MOVLT	R0,#0
 MOVLT	PC,R14

charfromoffset			; from elsewhere would be better...
 FNJSR
 LDR R14,[R9,#f_splito]
 CMP R0,R14
 LDRCS R14,[R9,#f_splits]
 ADDCS R0,R0,R14
 LDR R14,[R9,#f_ptr]
 LDRB R0,[R14,R0]
 FNRTS

FromLimport30imp
 LDRB	R2,[R1],#1
 CMP	R2,#&20
 MOVCC	R2,#0
 STRB	R2,[R0],#1
 BCS	FromLimport30imp
 SUB	R0,R0,#1
 MOVS	PC,R14
 MOV	R1,R0
 MOV	R0,#0
FromLimport31imp
 LDRB	R2,[R1,R0]
 ADD	R0,R0,#1
 CMP	R2,#&20
 BCS	FromLimport31imp
 MOVS	PC,R14

FromLimport32imp
 TEQ	R8,#0
 LDRNE	R0,[R8,#40]
 MOVNE	PC,R14
 STMFD	R13!,{R1,R14}
 MOV	R1,#3
 LDR	R14,[R12,#0]
 ADD	R14,R14,#&48
 STMFD	R13!,{R14}
 MOV	R14,PC
 LDMFD	R13!,{PC}
 LDMFD	R13!,{R1,PC}

FromLimport33imp
 TEQ	R8,#0
 LDRNE	R0,[R8,#92]
 MOVNE	PC,R14
 STMFD	R13!,{R1,R14}
 MOV	R1,#2
 LDR	R14,[R12,#0]
 ADD	R14,R14,#Zap_ReadVar
 STMFD	R13!,{R14}
 MOV	R14,PC
 LDMFD	R13!,{PC}
 LDMFD	R13!,{R1,PC}

 END
