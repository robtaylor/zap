/*	modeopts2.c
	© James Aylett	*/

#include "modeopts2.h"

void close_modeopts2()
{
  ModeOpts2Open=FALSE;
  Wimp_CloseWindow(windows[ModeOpts2].openblock.window);
  Wimp_CloseWindow(windows[ModePane].openblock.window);
  windows[Main].openblock.behind=WimpWindow_Top;
  Wimp_OpenWindow(&windows[Main].openblock);

  save_modeopts2();
}

void open_modeopts2(int num)
{
  /* first, set mode_name to point to "Text" somewhere
   * then load_modeopts2() will pick out the relevant
   * options block.
   */
  if(ModesMenu==NULL)
    open_optionset();

  mode_number=num;
  mode_name=ModesMenu->items[mode_number].icondata.text;
  load_modeopts2();

  set_indtext(windows[ModeOpts2].openblock.window,2,mode_name);
  windows[ModePane].openblock.behind=WimpWindow_Top;
  Wimp_OpenWindow(&windows[ModePane].openblock);
  windows[ModeOpts2].openblock.behind=windows[ModePane].openblock.window;
  Wimp_OpenWindow(&windows[ModeOpts2].openblock);
  ModeOpts2Open=TRUE;
}

void redraw_modepane(window_redrawblock *block)
{
  /*	This is called from within a Wimp_GetRectangle loop	*/

  /*
  //	To take a screen coord and convert to work area coords use:
  //		work x = screen x - (screen x0 - scroll x)
  //		work y = screen y - (screen y1 - scroll y)
  //
  //	Where:
  //		screen x0 = block->rect.min.x
  //		screen y1 = block->rect.max.y
  //		scroll x  = block->scroll.x
  //		scroll y  = block->scroll.y
  */

  int movex, movey;

  movex=block->rect.min.x - block->scroll.x;
  movey=block->rect.max.y - block->scroll.y;

  /*
  //	So now we use work x = screen x - movex etc.
  */

  /*
  //	Go through all entries seeing if we need to draw them
  //	Can't do this yet because I'm not loading the definitions :-)
  */
}

void modeopts2click()
{
  if(result->mouse.button.data.menu==1) return;
  switch(result->mouse.icon)
  {
    case 3 : modesmenu(3); break;
    case 5 : /* go over to "tweak" mode */
      closechildren();
      open_modeopts(mode_number);
      break;
  }
}

void save_modeopts2()
{
  /* construct relevant mode opts from the option groups */
}

void load_modeopts2()
{
  /* mode_name points to the name we want
  // look it up in <ZapConfig$Dir>.Modes and
  // plonk the resulting list in a global block
  */
}
