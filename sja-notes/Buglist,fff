Id: Buglist,fff,v 1.7 1999/03/04 19:20:55 james Exp $

Zap - combined bug and wishlist
===============================

You probably want to turn on auto-width for this file, because otherwise it
looks messy. This list is two things:

1.	A list of *all* suggestions that I know about, possibly with notes.
Some suggestions may be altered - for instance, a suggestion on how to get
ZapRedraw to auto-unload itself was modified to use a more sensible way of
doing it. Discussions to <features@zap.uk.eu.org>.

2.	A list of all bugs I know about. This is different to 'all bug
reports I know about', because if a bug report both contains insufficient
information to get an idea what went wrong AND is unrepeatable, there's
nothing we can do with it anyway. Discussions to <buglist@zap.uk.eu.org>.

James Aylett
<dj@zap.uk.eu.org>


Format:
-------

t ([e ]m)	(r)	(s)		<report>

t = type (* = bug, . = fixed bug, + = suggestion, - = implemented suggestion, / = not really a bug, \ = currently unfeasible suggestion, or considered inappropriate)
e = * (extension) or + (internal mode)
m = module (eg: Boxes, Menus, Minibuffer ... generally either Zap core source file (although the code may not be there), or extension/mode name). Nothing here indicates something general or unassigned. (!) is 'distribution', (%) is 'documentation'
r = responsible maintainer (once decided) - for fixed bugs / implemented suggestions, this will be whoever actually did it; for 'not really a bug', it will be whoever made that decision
s = reporting source, if known

* (%)		()	()		Advising people that binding cC to COPYSEL:CLEARSEL causes problems in TW mode. Not quite sure where to put this ...
* (%)		()	(darren)	Add !Help, !Sprites*, Templates, Messages, ExternCmd, Keys, TMF to files in an extension section; also only one module per extension
* (%)		()	(james)		Zap_ModeData doesn't document word #2 fully (default and printing colour set; number of non-system colours in config file - are these configurable / useful at runtime?)
* (%)		()	(reuben)	Spell check all help data
* (!)		()	(james)		ZapUser:Config.Country shouldn't set Zap$Country in the default setup.
* (!)		()	(reuben)	Macros box should refer to the search dbox, not the manual, for escape sequences
* (!)		()	(james)		MakeFile ExternCmd file called it "Makefile"; recent MakeExterns won't recognise this. External file then needs to be rebuilt.
* ()		()	()		'Altersel at end' fudge doesn't yet work with mouse-drag selection, nor SELREGION selection for that matter...?
* ()		()	()		'New View', when issued from the icon bar, with taskwindows and throwback buffers behaves differently from when issued from a main window. (Cursor doesn't get set - is that the only problem? This also happens with regular files ...)
* ()		()	()		Auto-clear of selection with two views doesn't work properly
* ()		()	()		Bug when combining src1 & src2 and then saving - probably there for ages!
* ()		()	()		Ctrl-select clicking removes cursor mark ?
* ()		()	()		DOS trying to remove 0x0D's?
* ()		()	()		Disc-reading code may still have self-mod SWI? Darren?
* ()		()	()		If a tab is the last thing on a line then it is possible to get the cursor to disappear completely off the right-hand side of the window
* ()		()	()		Random cursor jumping with 'Confine V' option on + more than one window.
* ()		()	()		Remove debug beeps in cln_readc ... Zap, ZapBASIC, ZapSpell - done?
* ()		()	()		Selection always vanishes on a mode change - there is a solution to this, involving the SELECTION fn/command. This isn't ideal, though.
. ()		()	()		Strip spaces and the file modified flag ... should set modified a la DOS/spool?
* ()		()	()		When editing two views of the same file then the cursor in the file not being edited can be affected by ins/del txt - iff it is soft-wrapped...
* ()		()	()		When loading files commands at end of paths are not checked properly...
* ()		()	()		build under RISC OS make gives sig5 in v1.41 these days ... ?
* ()		()	(chris bell)	RAM xfer from Zap to Impression: "Directory [rubbish] not found"
* ()		()	(chris bell)	crash on shift-end?
* ()		()	(gary lee)	BASTXT doesn't tokenise before a RAM transfer. This is fairly tricky to solve, because of the way (a) RAM transfer, and (b) BASTXT work :-(
* ()		()	(gary lee)	BASIC ram transmits using its internal format (see similar BASTXT problem). This appears to crash !Edit when it tries to figure it out ... :-(
* ()		()	(gary lee)	In mode 13, Zap sometimes complains about lack of memory even when there's enough.
* ()		()	(gary lee)	Out Of Memory while loading a file doesn't free up WimpSlot (RO 3.11)
* ()		()	(james)		Out Of Memory a. needs changing, b. loops. Particularly taskwindow output.
* (* BASIC)	()	()		/Type/ in BASIC mode 'LDRS000000000000000000000000000000=0'
* (* BASIC)	()	()		? Multiple ? "Ctrl K"s in BASIC mode - hmmm only minor problems when the cursor is in the middle of a keyword seem to be present...?
* (* BASIC)	()	()		? Select a BASIC line by triple clicking then swapcase etc. minor
* (* BASIC)	()	()		ASSERT 0 = P% AND 31 in BASIC mode... :<
* (* BASIC)	()	()		ASSERT P% AND 31 = 0 in BASIC mode...
* (* BASIC)	()	()		BASIC DCBabc coloured wrong...?
* (* BASIC)	()	()		BASIC bracket match to right spot...
* (* BASIC)	()	()		BASIC changes the return character to 13.  It stays that way
* (* BASIC)	()	()		BASIC: ; CMP R0,ASC":" no longer is being coloured properly
* (* BASIC)	()	()		Chr$200's - i.e. half tokens - at the end of BASIC lines...
* (* BASIC)	()	()		Cursor->Confine H in BASIC mode doesn't work. Should it work by tokens ?
* (* BASIC)	()	()		Deleted to SOL. Last word deleted was REPEAT. When I deleted that it also deleted the line. I pressed Return to start a new line, and got an endless series of cln_backwards errors. I have "force line numbering" on; by default everything is numbered in 1s.
* (* BASIC)	()	()		Enter, somehow, in the BASIC mode P. P - then press 'fullstop':Two PRINTs!
* (* BASIC)	()	()		Inserting regions not ending on line-ends in BASIC mode...i.e. copying multiple incomplete lines of BASIC should not insert CRs.
* (* BASIC)	()	()		Just now copying a block of lines using COPYSEL between two BASIC windows the last line of the block was duplicated in the display; UPDATEWINDOW cured it.
* (* BASIC)	()	()		MOVESEL past EOL...??? with NSE on.
* (* BASIC)	()	()		Rather than strip after ':'s in ASSEMBLE reject totally if any OPTs...?
* (* BASIC)	()	()		Saving a file in BASTXT mode can tokenise it and put it into BASIC. OK. Pardon?
* (* BASIC)	()	()		Search and replace selects whole keywords - and replaces them, too
* (* BASIC)	()	()		Serious colouring problem: .mode_prevline; REM redraw the screen
* (* BASIC)	()	()		The directive 'align' in lower case letters isn't coloured correctly, although the upper case version is.
* (* BASIC)	()	()		Top-bit set characters in * commands - would be nice if these were fixed.
* (* BASIC)	()	()		Top-bit set characters in assembler comments ... backwards compatability
* (* BASIC)	()	()		Variables starting _ in assembler...?
* (* BASIC)	()	()		Yes, LHS margin redraw problem observed, when last chr not aligned in Code mode, also BASIC mode...
* (* BASIC)	()	()		ZapBASIC REM at new file or end - may be fixed. What does this mean?
* (* BASIC)	()	()		ZapBASIC last line = logical line 1 in GotoBox.
* (* BASIC)	()	()		cursor disappears sometimes?
* (* BASIC)	()	()		undo falls over sometimes?
* (* BASIC)	()	(chris bell)	Triple-click (line select) in BASIC mode doesn't select line number.
* (* BASIC)	()	(chris bell)	BASIC doesn't recognise the TRUE in FNget_set_int(w%,i%,a*n%,TRUE) as tokenised, due to * preceding?
* (* BASIC)	()	(james)		Remove 'Window wrap' code and option
* (* BASIC)	()	(ray dawson)	'->' tab display character is displayed as a space if softwrap is on
* (* BASIC)	()	(reuben)	'lr' in 'lr%' coloured as register not variable
* (* BASIC)	()	(reuben)	sometimes a string array is wrongly coloured, eg at the start of a line with several spaces before it. Bug is intermittent.
* (* BASIC)	()	(reuben)	undo replaced 'REM with '@' and didn't undelete a deletion (maybe only with v1.34?)
* (* DWExt)	()	()		incorrectly still refers to !Zap.3rdParty somewhere?
* (* HoTMeaL)	()	()		Fix HTMLINSERTIF in non HoTMeaL modes. Also "... has been replaced by TMT_IF" - can we replace this too?
* (* HoTMeaL)	()	()		various HTML buttons need STOPOPs? / ESCAPE-CHECKING. Various HTML buttons probably need their heads rescrewing to work with the new command language.
* (* StrongZap)	()	()		For that matter, why is there a separate body colour - wouldn't foreground be a better colour to use?
* (* StrongZap)	()	()		appears to colour "#Fcode:some stuff" wrongly - the ":some stuff" gets the # colour rather than "some stuff" getting body colour.
* (* StrongZap)	()	(reuben)	Save options with changed colours doesn't work properly?
* (* TaskW)	()	()		Changing width in a TaskWindow - deletes all existing text - eeek!? this also happens if window-wrap and infinite width are both on...
* (* TaskW)	()	()		Copy text from TaskWindow leaves trail of cursors
* (* TaskW)	()	()		Moving of large bits in the task window causes selection to be deleted messing up data transfer...?
* (* TaskW)	()	()		TaskWindow WIMP message title... Huh?
* (* TaskW)	()	()		TaskWindow output and no flashing cursor...
* (* TaskW)	()	()		VDU 21,65,6 in an appropriate TASKWINDOW doesn't work. Ctrl-U clash
* (* TaskW)	()	()		armwvt in taskwindow giving a silly line break!
* (* TaskW)	()	(james)		adjust-close on task window opens root directory (or CSD?)
* (* ZapEmail)	()	()		In ZapEmail, "-I" tabs extend into borders where they are not redrawn properly sometimes.
* (* ZapMJE)	()	()		C mode's preprocessor indenting. Also its comment indenting; both wrong in various ways.
* (* ZapMJE)	()	()		ZapMJE needs 'fixing' so that throwback buffers can be guarded from 'external' writes... done? - /partly/...
* (* ZapMJE)	()	()		copying '}'s in 'c' mode... used to cause exceptions - it currently doesn't indent because of this problem
* (* ZapMJE)	()	(reuben)	Problem with INSERT "xxx{}" in ZapMJE...
* (* ZapMJE)	()	(reuben)	Various indent related problems and asks for 'no auto unindent'.
* (* ZapMJE)	()	(reuben)	reports that in C mode cut to EOF not working properly - with big files?
* (* ZapObey)	()	()		Obey file |s line end in IF with comment next
* (* ZapSpell)	()	()		F12
* (* ZapSpell)	()	()		REPLACE when loading...
* (* ZapSpell)	()	()		Return...
* (* ZapSpell)	()	()		SPELL_BUF - aborts if ISP not loaded!
* (* ZapSpell)	()	()		SPELL_REPLACE with no SPELL window open at all...
* (* ZapSpell)	()	()		Spell problems with adding words...
* (* ZapTeX)	()	()		wordwrap off, a recognised command: last letter is last possible on line causes ungraceful crash
* (* ZapText)	()	()		ZB swapcase on then AT EOF -> THEN moves cursor to SOL... (and generally nice to tokenising modes)
* (*)		()	(james)		It would be nicer, in general, if errors on command execution always went to the minibuffer. Do this in the commands themselves (use BL warn from Text/Util/Bits).
* (+ Code)	()	()		Changing early module offsets causes the redraw to go wrong
* (+ Code)	()	()		Fix bugs when EOF is not word alined. Word mode too...
* (+ Code)	()	()		Still sometimes two?-too-many cursor redraws in Code mode...
* (+ Code)	()	()		Tidy up stray colons on the last line of Code + other mode...
* (+ Code)	()	()		Yes, LHS margin redraw problem observed, when last chr not aligned in Code mode, also BASIC mode...
* (+ Code)	()	(james)		APCS causes ] in STRB to be coloured register
* (+ Code)	()	(james)		APCS colouring causes [] in LDRB a3,[a2],#1 and [ in LDR a1,[a4,#0] to be colour 'register' not '[ and ]'
* (+ Code)	()	(james)		Copro instructions are coloured wrongly; without APCS, a number may be coloured as copro instr., and copro # is coloured as copro instr. With APCS on, first letter of copro # is coloured as copro instr. (copro # probably colour as copro register ...)
* (+ Code)	()	(james)		LDM ...{...}^ gets ^ coloured 'register' with APCS turned on
* (+ Code)	()	(james)		Searching on lines which are completely replaced by comments (eg: module header) searches the original disassembly, not the replacement
* (+ Code)	()	(james)		With 'minimal colouring', SWI names are still coloured separately to SWIs
* (+ Code)	()	(james)		pc usually gets 'c' coloured black on black (appears to be using colour #1) with APCS turned on
* (+ Text)	()	()		Auto soft-wrap detection may be *too* good - it kicks in even if there is a /single/ long line...
* (+ Throwback)	()	()		Throwback from NCC with multiple files giving problems with it not identifying the correct file... NCC's fault - can we hack it?
* (+ Word)	()	()		Selection in word mode and the last byte...
* (AlterTxt)	()	()		Deleting lines at bottom of screen causes things to judder up and down
* (Boxes)	()	(james)		GotoBox, ReplaceBox don't look up zap_m_hist into "History" when building their menu titles. Minibuffer also.
* (Boxes)	()	(james)		WC_Output (WC, TOTAL, count) uses string literals for 'match(es)' etc. Needs rewriting fairly heavily to work with internationalisation ...
* (Boxes)	()	(james)		close modified if SaveOBox/SaveCBox -> save box remains, window doesn't close - ? need to pass r7=0 => no leaf caller, else xfer kill state flag (b3) to created window for: save_to_file, save_text, save_file_date. save_text is exported => API change.
* (Commands)	()	()		INDENTBY command seems to be broken, especially with -ve arguments...? Seems okay to james ...
* (Commands)	()	()		Problem with SENDSEL and CRs - problem currently fudged
* (Commands)	()	(james)		MAKEDEFAULT doesn't copy styles for logical colours.
* (Commands)	()	(james)		MZAPBOX - or menu building - has a bug; hanging it off my 'Program' menu fails. Troubles with double instantiation? Apparently this will happen for any internal dbox ... although WCSel / TotalSel seem happy; may need to be the same command
* (Commands)	()	(james)		NEWFILE: cursor positioning bug
* (Commands)	()	(justin)	FORMATTEXT failure with SW? FORMATTEXT needs an overhaul anyway; should optionally preserve indenting ... although admittedly some work has been done with Darren's FORMATINDENTED here ... possibly can do CLEFT:SRIGHT:FORMATINDENTED "\<" or something?
* (CreateFile)	()	()		s.CreateFile:calc_ftype doesn't handle exec=-1, load=-1 => untyped but effectively of type "Command". Probably export calc_ftype so clients reap the same benefits.
* (CreateFile)	()	(iain truskett)	Ursula crash from QUICKSAVE et al has been reported for RISC OS 3.8
* (CreateFile)	()	(neil)		Ursula crash from QUICKSAVE et al - save_text - with no path. Data abort - is r2 getting corrupted on return to Wimp_poll?
* (CreateFile)	()	(darren)	Save system wants changing to allow preservation of datestamp when that's sensible ...
* (Execute)	()	()		COMMAND WIMPTASK "Run ZapCode:Config.CreateConf -script ZapCode:Config.RunScript":RELOADKEYS gives "Bad command call" from a menu - but fine from the minibuffer. How about bound in Keys? Learned?
* (Execute)	()	()		If a command is not found in the module in which the external file claims that it resides then there can be exceptions.
* (Execute)	()	()		Learned sequences in conjunction with a search. Report was: mini-buffer search string corrupts, but this works okay for james. However if you do a dbox search in the learned sequence, executing it corrupts the saved search string. This might be difficult to fix.
* (Execute)	()	(james)		multicommand blocks in variables &30E, &30F, &322 cause minibuffer to screw up, and don't execute
* (Fonts)	()	()		Error when font file is completely missing - should at least be able to revert to using /something/...
* (Fonts)	()	(james)		Font error code is very broken currently; changing to a font that won't load causes it to fall over completely (stack corruption?). I *think* this may have been here since Tim expanded the code for substyles ...
* (Fonts)	()	(james)		Currently tests for recent font manager using WimpVer >= 300; should find font manager version and store that in ws for a more accurate check. Need font manager version number of the changes?
* (Keys)	()	()		Argument type errors in keys file stop Zap from starting
* (Menus)	()	()		Keyboard shortcuts in menus are not always aligned correctly... sounds like a pre-RO 3.5 problem only; this could be tricky for me to test - james
* (Menus)	()	()		When a writable menu entry is adjust-clicked in it often loses the caret this is caused by commands that call new_window_status...? Use the new version of this command where possible...
* (Menus)	()	(alex m.smith)	Menu width calculation code isn't working under RISC OS 3.1
* (Menus)	()	(alex m.smith)	Loading a mode closes the Modes submenu (menu relocation on rebuild ...)
* (Minibuffer)	(darren)(darren)	^W causes abort (R9=0) if no selection has been made yet.
* (Minibuffer)	()	(gary lee)	Permanent minibuffer behaves strangely ... sometimes frobs window cursor position wrongly?
* (Minibuffer)	()	(james)		Escape from permanent minibuffer doesn't return cursor to window (may not be a bug?)
* (Printing)	()	()		The Computer Concepts Turbo driver bug still hasn't been fixed - beware! Dom now knows how to fix it. The bug is actually in the Turbo drivers' printing of background objects. It was believed that Computer Concepts would be offering a fix 'soon'.
* (Printing)	()	(a. thouky)	Fancy print boundary box problems...?
* (Printing)	()	(darren)	Quick and print dboxes keystrokes don't work terribly sensibly ... up/down arrows reset the values to default. Fancy print may not honour the values unless you press <Return> in the relevant fields (I haven't checked).
* (Redraw)	()	()		Redraw of line numbers happens far too much - but there's no easy fix
* (Redraw)	()	()		When an error appears e.g. in 'Code' mode when editing an instruction, the cursor doesn't get redrawn properly underneath it...
* (Search)	()	()		"\n\>" is needed in searches. Should be "\>". Note that Darren is against fixing this
* (Search)	()	()		In Code mode - and word mode? - a Raw search can get 'stuck'. When SS? not word-aligned :<.
* (Search)	()	()		Two cursors are sometimes visible in Search AYT
* (Softwrap)	()	()		Problem with SW and another window's cursor moving
* (Softwrap)	()	(justin)	SW and auto-indent don't mix - there may be problems here
* (TMFs)	()	(james)		might be a remaining buffer overflow bug ... I've seen it once
* (Throwback)	()	(theo)		throwback affects older view on a file, not most recent / one search started in
* (Undo)	()	()		Bugs in YANK between buffers - esp. when copied-to buffer has no undo
* (Undo)	()	()		FastUndo loses info...? hard to reproduce ... with full undo/S+R?...
* (Undo)	()	(gary lee)	Running out of memory during an insert operation causes memory leakage; probably the UNDO op stuff isn't being released
* (Wimp)	()	(andy wingate)	Filetype menu in save dbox causes data abort @ offset fe04?
* (Wimp)	()	(gary lee)	DataSave to Zap (ie: app to app transfer) seems to claim twice as much memory as with Filer? (This may be an artifact of a 32k page size, but is worth investigating anyway.)
* (Wimp)	()	(gary lee)	Invert the palette - LH margin isn't redrawn (RO 3.11)
* (Wimp)	()	(gary lee)	Alt-double-click when first character on the line isn't a space character causes an address exception. More info is available ...
* (Wimp)	()	(reuben)	Zap can make a mess of its file transfer and leave its transfer file open.

+ (!)		()	()		Installer?
+ (!)		()	()		There should be a writable in the IB new file menu... use 'Arbitrary type'
+ (!)		()	()		Get !Messages.Types right
+ (!)		()	(darren)	Minor optimisation to removelf sed(1) script
+ (!)		()	(james)		Docs.Commands still necessary? Docs.KeyStrip up to date?
+ (!)		()	(james)		Move ZapJRF into zmods2.zip? It isn't very important anymore ... stuff in ZapUser that it depends on?
+ (!)		()	(james)		Nice to have more ZapUsers floating around. Perhaps just ship all maintainers' copies.
+ (!)		()	(james)		Update all !ReadMe files. Ideally, make these auto-generating in some way. Modules.!ReadMe needs playing with.
+ (!)		(james)	(james)		Autoload directory. ZapAuto:Preload, ZapAuto:Postload, ZapAuto:Prequit or something. Need RepeatPath command to do this. Then clear out Code.Extensions a bit. Do we need Code.EE? Code.MakeExtern?
+ (%)		(james)	(james)		Move to buttress; provide StrongHelp output; tech docs under buttress
+ (%)		()	(james)		Mention Darren's ports of the GNU textutils wrt the filtering commands
+ (%)		()	(richard)	German resources and docs.
+ ()		()	()		Add a scripting language that mirrors Zap's 'Menus' system, but that can be applied to dialogue boxes instead. Use this to create a proper preferences dialogue box system, and thus to replace largish chunks of Zap's options menu structure.
+ ()		()	()		Add ability to move main cursor when cursors are unlinked maybe a command which toggles between which one responds to the cursor keys...? Sounds unnecessary to james
+ ()		()	()		An alternative to RISC-OS's appalling single-tasking error boxes, where these are used
+ ()		()	()		Better support for FileTypeExtend... Why? - james
+ ()		()	()		Central bracket matching... see discontinuous area selection...
+ ()		()	()		Check for NC compatability problems involving Wimp$Scrap and the method of checking to see whether Zap is already loaded...
+ ()		()	()		Discontinuous area selection for use with: bracket matching, throwback highlighting, spell checkers, fuzzy input systems i.e. speech and handwriting, Zap's search routines - can't this be done by rectangles, a la emacs/jed/etc. ?
+ ()		()	()		Escape in main window closes that window's D-Boxes feature...? I think this is a suggestion - james
+ ()		()	()		Line spacing isn't stored mode-dependantly ... and a mode specific margin? Start line, start address ... ?
+ ()		()	()		Make HidePtr die with Zap by default. No ... make HidePtr et al an ZapAuto:PreLoad / ZapAuto:PostLoad thing, and have ZapAuto:PostQuit as well
+ ()		()	()		More use of Hourglass when loading - inc files.
+ ()		()	()		Option for new view to be a split view of a file - one RISC-OS window! Or the idea of linked windows?
+ ()		()	()		Possibly provide mechanism for de-installing modes for low memory use. This is tricky - I've thought about this before - james
+ ()		()	()		Sensible default options, styles in all modes, etc. etc.
+ ()		()	()		Timed save to back # file in Zap dir or ~ file etc. Erm ... I'd prefer #, if it weren't a wildcard. Have to think about this - perhaps ~~ ?
+ ()		()	()		Variable width tabs stops, or maybe tab rulers.
+ ()		()	()		When a file is loaded via EE an empty buffer is first created and then the text is added. Would it be possible to treat the first block of text being added as a new buffer so that file type detection on the contents can be provided, such as for DOS files?
+ ()		()	()		commands in file header
+ ()		()	()		load dual edits in Read Only mode ... why?
+ ()		()	(dom plunkett)	Remember state (files, memory grabs, etc.). Could be done as an extension with some registered service calls?
+ ()		()	(james)		'tie' two - or more? - windows together
+ ()		()	(james)		An 'ignore file permissions' flag, so they don't get written back incorrectly (eg: on scR)
+ ()		()	(james)		keypresses on a hotkey window - ie: bind a keymap to a hotkey window
+ ()		()	(joe oldak)	double/triple/etc click-dragging - moving backwards selects from start of word/line/etc., not end. Can this easily be altered? Also, new word/line/etc should be selected as soon as mouse hits start, not end, of unit
+ ()		()	(justin)	Have a command which stops auto-clear selections from kicking in when executed in startop/stopop sequences...
+ ()		()	(justin et al)	Transient per-mode data for a file (typically for use as a redraw cache). Could we consider having metadata with references that will move around the file, a la links?
+ ()		(james)	(james)		Finish symbolising source
+ (* BASIC)	()	()		'ESCAPE' selection in BASIC mode would be better if it treated tokenised keywords as single characters...
+ (* BASIC)	()	()		*Proper* colouring in BASTXT mode. A cheap method would be good...
+ (* Buttons)	()	()		Buttons in 'core' modes. Ideally needs Buttons to work without cooperation of modes
+ (* Buttons)	()	()		WIMPy search forwards and search backwards buttons... in Buttons default ...
+ (* Debugger+)	(darren)(james)		Optionally display MVN r0,#n as MOV r0,#NOT (n - 1)
+ (* ForZap)	()	()		Zap's internal command table used ...
+ (* HoTMeal)	()	()		HTMLDELETETAG
+ (* HoTMeaL)	()	(james)		The Beautify command stuff is going to have to change to use all lower case for tags, because of XHTML. However features to allow upper-case display of this might be useful to some people. presave should probably have an option to ensure lower caseness.
+ (* StrongZap)	()	()		It'd be nice if bold/underlined/italic text were displayed as such - i.e. it'd be nice if they were coloured specially, both short forms *like* *this* and long forms {/}like this{/}
+ (* TaskW)	()	()		Buttons for suspend/Link/kill... button support for all modes without intervention ...
+ (* TaskW)	()	()		Checking that the Obey/TaskObey file being used as the taskwindow's input is LF-terminated ...if it isn't, Zap should optionally be pretending it is.
+ (* TaskW)	()	()		Implement c@ when this is not on sc2
+ (* TaskW)	()	()		Indication in title when taskwindow unlinked/suspended/dead...?
+ (* TaskW)	()	()		Make TaskWindow arrow keys be passed on via vectors instead of trapping.
+ (* TaskW)	()	()		TaskWindow history on sMENU...
+ (* ZapConfig)	()	()		internationalise - more than just a Messages file; use Zap$Country
+ (* ZapConfig)	()	()		v1.41 additions
+ (* ZapConfig)	()	()		v1.41 config format
+ (* ZapEmail)	()	(iain truskett)	Unload taglines to save memory
+ (* ZapProg)	()	()		DataAdd et al
+ (* ZapProg)	()	()		SWIToName, SWIToNumber
+ (* ZapProg)	()	()		assemble ADRL/X
+ (* ZapProg)	()	()		header/function/TLD finding ... TMF for paths? ... ctags?
+ (* ZapProg)	()	()		new MAKE/BUILD etc. commands using TMFs
+ (* ZapRedraw)	()	()		Add WIMP-friendly mode with font kerning et al - very hard
+ (* ZapRedraw)	()	()		Add fast bitmapped *anti-aliased* fonts - fairly easy
+ (* ZapRedraw)	()	()		Add proportionally spaced font redraw mode by adapting VDU redraw. This will be very hard to support properly from within Zap, what with Window wrap, Soft wrap and all
+ (* ZapRedraw)	()	()		Ideally include loading of fonts in ZapRedraw so if multiple ZapRedraw clients use the same font, it is available in an area of shared memory and does not need to be loaded repeatedly.
+ (* ZapRedraw)	()	()		Speed up VDU redraw to use OS_WriteN + large rectangle cursors...????
+ (* ZapRedraw)	()	()		Usage locking - so can kill it if unused, to save memory?
+ (* ZapRedraw)	()	()		Write some redraw widgets: e.g. Zelp - fast interactive help and Zhars...
+ (* ZapRedraw)	()	(tim)		Textured backgrounds ... in VDU redraw mode initially
+ (* ZapSpell)	()	()		Add option to sort ZapSpell throwback windows alphabetically...
+ (* ZapSpell)	()	()		Generally sort ZapSpell out...
+ (* ZapText)	()	()		swapcase is nice to tokenised modes
+ (*)		()	()		Add a hypertext-like Zap help mode based on HTML... i.e. add a web browser mode... isn't this ott?
+ (*)		()	()		Generic syntax-colouring mode using regular expressions... or using something, at any rate ... we've discussed regexps using cached DFAs, which seems a good move; alternatively, the more primitive method used by StrongED? Something between the two? a la jed?
+ (*)		()	()		HTTP fetcher for Zap - quite important... surely should use whatever Acorn's *Fetcher system is? - james. More a library issue than writing one ourselves ...
+ (*)		()	(james)		FILEMENU command which can build a menu from a file spec, with appropriate actions when the entries are clicked. Recursive abilities for directories and/or different actions dependent on different file types/names would be useful too.
+ (*)		()	(james)		Standard way of building project file lists into menus, while enabling them to be used easily within a Makefile. Makefile parsing is probably the wrong route :-)
+ (*)		()	(james)		expanding abbreviations, probably configurable per-mode or something. Possibly with a hook into the core in some way.
+ (+ Code)	()	()		Add native assembly of LDRL-type instructions...?
+ (+ Code)	()	()		Add the ability to browse through main memory...! Including the application memory of different applications...
+ (+ Code)	()	()		Independent mini-buffer history for Code mode instructions
+ (+ Code)	()	()		Proper in-line editing of Assembler...
+ (+ Code)	()	()		Query assembling instructions which reduce reducible constants...?
+ (+ Code)	()	()		Search backwards in Code mode for ADRL...
+ (+ Code)	()	()		System Co-processor / new non-ARM2 instructions signalling...
+ (+ Code)	()	()		Use Undefined Instruction Text in Debugger.Messages...
+ (+ Code)	()	()		Use the DS disassembler lower case option properly...
+ (+ Code)	()	(gary lee)	Option to disable clever disassembly.
+ (+ Code)	()	(james)		Differentiate between CLib calls and internal image calls (not too difficult - differentiate for -> code: as well?)
+ (+ Code)	()	(james)		Option to turn off SWI name lookup (so just get numbers always)? Would this be useful to anyone at all? :-)
+ (+ Throwback)	()	()		Highlighting match in throwback mode.  To do this properly would ideally require an extension to the throwback protocol so that the highlighting can be used by clients apart from Zap.
+ (+ Throwback)	()	()		Throwback should canonicalise name BEFORE inserting the file - immediately.
+ (+ Throwback) ()	(stefan bellon)	Undo in throwback?
+ (Boxes)	()	()		Add 'List of files' throwback command/window. May need alterations to Search to be really cool ... list of windows?
+ (Boxes)	()	()		Add a proper word count/document statistics command
+ (Boxes)	()	()		Dragging files *into* the Save/SDC box inserts their pathnames into the relevant writable icons
+ (Boxes)	()	()		Make *all* relevant buttons be highlighted by their keyboard shortcuts...
+ (Boxes)	()	()		Option to have Goto box clear, ie as for search window (was 'and implement Tab', but it implements Page up/Page down as all normal Zap dboxes already)
+ (Boxes)	()	()		Option to make save boxes etc transient.
+ (Boxes)	()	()		Should disc buttons auto-repeat?
+ (Boxes)	()	()		dboxes work as messydos - old choice in icons, remove if user types over
+ (Boxes)	()	()		redefine keystrokes in dialogue boxes - idea from StrongED; probably don't bother
+ (Commands)	()	()		/Perhaps/ SETWIDTH, in window wrap mode, should actually set the window width...?
+ (Commands)	()	()		Add SMOOTHSCLEFT, SMOOTHSCRIGHT, SMOOTHSCUP and  SMOOTHSCDOWN /possibly/ with acceleration on auto-repeat.
+ (Commands)	()	()		CENTREONSCREEN command...?
+ (Commands)	()	()		COPYCHARABOVE/DUPELINE command... for greater performance
+ (Commands)	()	()		CR<->LF...? We have SWAPCRLF, but it neither sets modified nor is undoable - deliberately, in the second case; the former could cause problems.
+ (Commands)	()	()		Command to load !Help file of a given mode and...
+ (Commands)	()	()		Get TOGGLEWIND to pay attention to the SHIFT/cmos bit.
+ (Commands)	()	()		MENUCOMMAND "CMD" command... very hard...
+ (Commands)	()	(darren)	Move FORMATINDENTED into the core, and get FORMATTEXT to call that with a "" argument.
+ (Commands)	()	()		SETINSERTTIME and SETINSERTDATE should modify the relevant format strings. These would be new commands then ... I quite like the idea, alternatively, of moving time/date format strings into TMFs.
+ (Commands)	()	()		WINDOWXPOS, WINDOWYPOS, WINDOWXSIZE, WINDOWYSIZE commands... and functions ... 
+ (Commands)	()	(james)		REVERT
+ (Cursors)	()	(james)		It'd be nice if s.Cursors:process_window_click used configured double click delay instead of hard-coded to 100cs
+ (Fonts)	()	()		IB font selection...Per-mode font
+ (Menus)	()	()		Add small filetype sprites to the 'Types' menu. No - looks horrible!
+ (Menus)	()	()		Make 'Edit config' use OLE so that reload options is automatic...
+ (Menus)	()	()		update menu shortcuts when basemap changes
+ (Minibuffer)	()	()		Minibuffer 'Warning's get the caret? + history menu? Really? Isn't that just irritating?
+ (Minibuffer)	()	()		Minibuffer warning scheduler...
+ (Minibuffer)	()	()		click on window with minibuffer open puts cursor in minibuffer
+ (Minibuffer)	()	()		command completion in minibuffer
+ (ModeBits)	()	()		protect against loaded modes' modules dying - also command tables. Usage count? Time since last used? Auto purge when running low on memory?
+ (ModeBits)	()	(james)		replace e_interrogate #4 with a mode info block; leave until v1.45-v1.46 changes
+ (Modes)	()	()		Add support for full-blown modes which don't have names... eg Buttons
+ (Printing)	()	()		Print selected region.
+ (Printing)	()	(darren)	Configurably page size in quick print
+ (Printing)	()	(james)		configurable print headers and footers
+ (Redraw)	()	()		Different background colour for line numbers and colons...
+ (Redraw)	()	()		Tab display could be improved with four dedicated tab characters...? How? Also, doesn't this affect all redraw modes?
+ (Redraw)	()	()		folding
+ (Redraw)	()	()		narrowing
+ (Search)	()	()		'Always maintain cursor vertical position in search' option. Pardon?
+ (Search)	()	()		Multi-task option in SEARCHBUF...? Hmm ... nice idea, probably a PITA to do
+ (Search)	()	()		Optimise search if no control codes.
+ (Search)	()	()		Same -> Other, same -> other and SAME -> OTHER search and replace
+ (Search)	()	()		Search confined to selection...?
+ (Search)	()	()		Search macros are limited to 7 characters... - I believe this is now a build-time thing ...
+ (Search)	()	()		want to export search_string, interface to search_text, as Zap_SearchString. This can wait; it's needed for an INSTR function.
+ (Search)	()	()		bring target window to immediately below replace dbox on match?
+ (TMFs)	(james)	(james)		boolean variables, using t/f strings?
+ (TMFs)	(james)	(james)		dumpvars command. dumpmodevars command?
+ (TMFs)	(james)	(james)		per-file variable overrides; export code via Zap_ call. Should allow interpolation ... % as a special mode name meaning 'in this file'?
+ (TMFs)	(james)	(james)		use internally for softwrap chars, e_returnword delimiters, etc.
+ (TMFs)	(james)	(james)		variable substitution
+ (Throwback)	()	()		Add Throwback to the relevant !Help file in the 'Authors' file...
+ (Throwback)	()	()		throwback sets file title to something useful; probably want to extend create_throwback
+ (Undo)	()	()		Global clipboard, PASTE depend on undo buffer
+ (Wimp)	()	()		Interactive help on a per-icon basis...
+ (Wimp)	()	(gary lee)	Make shift-drag files into Zap more configurable. Gary wants the space removed; probably use TMFs as a format string. One for files, one for directories? One for selections? Darren thinks that modes should cooperate - drag into DATA statement in BASIC mode?

- (!)		()	(james)		Finalise internationalisation changes (seems to be done now ...)
- (!)		(darren)(james)		Cope with TMF config files in ConfigScan, RunScript.
- (!)		(james)	(james)		TMFs config and files in ZapUser:Config.
- (* ZapText)	(darren)(james)		Want to use GNU text utils with filter commands. Darren has re-ported these to use the SCL.
- (* ZapText)	(james)	()		REMOVELF-style command to skip lwsp at the start/end of lines. This has been done as a 'sed' script.
- (* ZapText)	(james)	(james)		Internationalise, a la ZapBits
- (* ZapText)	(james)	(james)		TMF clients - help stuff
- (* ZapUtil)	(james)	(james)		Internationalise, a la ZapBits
- (* ZapUtil)	(james)	(james)		SETNAME uses TMFs. (Actually done as SETNAMEINCORE.)
- (+ Code)	(darren)()		Append the module title to the module title header field.
- (+ Code)	(darren)()		Double-click should select in Code mode...
- (+ Text)	(james)	()		Soft wrap auto-detection could do with being sped up. Should be up to 2x as fast; slightly slower when softwrapping isn't appropriate.
- (Commands)	(darren)()		indent/outdent performable on a single line
- (Commands)	(james)	()		Expand tabs. I thought was available as Untabify - except that leaves quoted tabs in program source modes, but that's right anyway.
- (Commands)	(james)	(james)		Window focus order when closing windows - goes to next window in order, when it should take previous window in window list - makes multiple op+close window on lots of files neater
- (Menus)	(darren)()		some way of including menu help text in the menu definitions
- (TMFs)	(james)	(james)		Documentation of c-vars ([^H][V]?). Stored as #<var name> in HelpData.

. (! Code)	(james)	(james)		Colour name "#, !, ^ & -" should be "#, !, ^, - & ,"
. (! ZapBASIC)	(james)	(various)	!ZapBoot of ZapBASIC uses ZapCode:IfVarSet not IfVarSet (1.40 only)
. (! ZapBits)	(james)	(james)		Doesn't contain an External file (v1.42 required MakeExtern run over everything anyway ...)
. (! ZapUtil)	(james)	(james)		Messages file is wrong; it's ZapText's. Fixed in v1.42 ...
. (!)		(james)	(james)		Remove !ZapConfig from Code.Config, since it doesn't work with v1.41.
. (%)		(james)	(reuben)	@GREYED helpdata is wrong (talked about ticked ...) - fixed in v1.42
. ()		(darren)()		Kill DAs on QUIT
. ()		(darren)()		Kill off /all/ LineEditor buffers on quitting.
. ()		(darren)(james)		Multiple type (-1) blocks are being saved in the config file.
. ()		(james)	(gary lee)	Spool files / DOS text files - making them READONLY sets modified? Reason: spool/DOS was trying to set modified, but not quite getting it right ...
. ()		(james)	(james)		Extensions build under Unix as well (basically just needs new Makefiles ...) - although AS can't yet build Text/s/help ...
. ()		(james)	(james)		Out Of Memory crashes badly when using dynamic areas. A few MOV instructions had been changed to MOVS, and some overly-conscientious optimisations of VS handling ...
. (* ZapBits)	(james)	(james)		Acorn-style makefile for ZapBits is wrong; it always relinks (use more like Text, Util which work properly)
. (* ZapJRF)	(james)	(darren)	!ZapJRF.Keys needs to be renamed !ZapJRF.JRFKeys (and is out of date anyway; either delete or update)
. (* ZapRedraw)	(james)	(gary lee)	anti-aliased fonts aren't always freed. ZapRedraw wasn't freeing the bold italic variant of its outline font in VDU mode ...
. (* ZapText)	(james)	(james)		NotifyUser appears to look strange - the Zap_ call it uses may have changed slightly.
. (* ZapUtil)	(james)	(james)		Cursors commands don't have minibuffer prompts
. (* ZapUtil)	(james)	(james)		Check HelpData (some entries seem to be missing) - fixed in v1.42
. (+ Byte)	(darren)(james)		Cursor positioning is out by one character. Sometimes more :-(
. (+ Code)	(james)	(gary lee)	Searching never strips comments before passing the line back - should if 'Comment free' is on
. (+ Word)	(james)	(james)		Redraw bug - colon and ASCII dump are one character too far left (this is a fairly new bug?)
. (+ Throwback)	(darren)()		Adjust on title of file removes whole throwback of that file.
. (Boxes)	(darren)(james)		MZAPBOX - end < start causes fatal error, via out of memory - which may also be implicated
. (Boxes)	(james)	(james)		WC bug: run while the box is still open, eg: use learned sequence. Get 'Invalid Window Handle'. I've fixed this before; I think it's the Wimp not noticing that its current menu has been deleted; possibly do that first?
. (Boxes)	(james)	(stefan bellon)	Save updates filename even if it is aborted (to CSD, older, etc.). s.CreateFile:save_to_file calls new_file_name; probably need an f_proposed_name used in preference to f_name until the save is completed, then copy in?
. (Commands)	(james)	(james)		FORMATTEXT stops if an unbreakable line exceeds the wrap width
. (Commands)	(james)	(james)		TOTALSEL should respect Escape, and use hourglass.
. (Commands)	(james)	(james)		WRITEFILE: writes directory into prompt, not into minibuffer
. (Cursors)	(james)	(tim)		long, > width, last line, selecting by dragging a selection downwards 'off' the LHS doesn't select any of the last physical line. This was actually caused by y-line clipping in find_offset. This now returns EOF for all clicks beyond EOF position.
. (Cursors)	(james)	(tim)		long, > width, last line, selecting by dragging a selection downwards after a triple-cick, doesn't select any of the last logical line. See similar bug.
. (Cursors)	(james)	(tim)		Change cursor type doesn't update immediately
. (Fonts)	(james)	(gary lee)	Encoded fonts aren't ticked. Matching code now rewritten to cope with encodings etc. - uses Font_FindField on RO >= 300.
. (Fonts)	(james)	(james)		font loading code appears broken for substyles in v1.41
. (Menus)	(darren)()		ck/ shortcut reads k/
. (Menus)	(darren)(stefan bellon)	Load menu is broken in v1.41; loading a mode from it removes most of the entries in the menu
. (Menus)	(darren)(stefan bellon)	Undo enabled, Read only, DOS text file, Spool file no longer get ticked when enabled ... (v1.43)
. (Modes)	(darren)(james)		The new clone dbox lists (loaded?) clones twice as possible base modes.
. (Modes)	(darren)(james)		Hide greys out only when the clone is selected, not when the dbox is opened. Delete is never greyed out.
. (Modes)	(james)	(darren)	Ought to check through one last time for hard-coded mode numbers in the core modes.
. (Minibuffer)	(darren)()		Clicking in the minibuffer doesn't position the cursor
. (Minibuffer)	(james)	(james)		Minibuffer never gets its length in a window right. Actually ... new feature to force the width to that of the parent window; otherwise uses min(template width, window width).
. (Printing)	(james)	(reuben)	Quick print of lines 1-60 of a 1148 line file, but the "60" was ignored; it seemed that it was going to print the whole document.
. (Softwrap)	(james)	(james)		Now works on the last line in the file, even when that isn't terminated. Also uses w_cr rather than having 0xa hard-coded.
. (TMFs)	(james)	(james)		Seems to fall over sometimes, usually on multiple reads of the same variable ... this is always HelpSearchPath ... d'oh, stupid bug in ZapText's help system.
. (Wimp)	(james)	(gary lee)	DataSave to Zap doesn't set up modified system properly; '*' is in window, but can close without prompt, and <insert><undo> removes '*'.
. (Wimp)	(james)	(gary lee)	DataSave sends filetype = &FFD for untyped, not -1 as it should. An extra flag to Zap_SendDataSave deals with this (done automatically if filetype not specified).
. (Wimp)	(james)	()		Datasave to Zap doesn't seem to set focus either (iff RAM xfer). It possibly shouldn't do, but since all other injects do we'll stick by it.

/ ()		(james)	()		Tabs which are selected make the cursor very hard to see there (so change the cursor colours - not considered a bug)
/ ()		(james)	(james)		Flakiness between Messages and External ... wasn't a bug; I didn't understand how MakeExtern worked fully - sja
/ (+ Code)	(james)	()		In Code mode, drag a selection to full size... then toggle to max size. I can't get anything unusual to happen ...
/ (* ZapText)	(james)	()		For FILTERSEL, the EOL character is not passed out in this file if the selection went up to, and not beyond, the end of the line. Apparently this causes problems when fed back in - but it shouldn't, and I can't get it to cause problems for me.
/ (* ZapText)	(james)	(p. killworth)	SWAPCASE falls over under StrongARM. Conflict because of severely out of date version of ZapText.
/ (Boxes)	(james)	()		D-Box loses input focus when menu pressed over it when it is accessed from a menu. Really? - james
/ (Commands)	(darren)(tim)		F2 when no current directory inserts rubbish. Not true. However no FS can insert "#:@.".
/ (Execute)	(darren)()		Commands which change the window with the input focus don't work well in MULTICOMMANDS. Believed to be fixed now.
/ (Keys)	(james)	()		cSPACE keymap entry is corrupted by any '&'s in the keys file *at all*. Pardon? ... we think this is an old bug that wasn't noted as fixed
/ (Printing)	(james)	()		Fancy Print - Escape - Close window - machine locks. Can't duplicate; assume it's been fixed.
/ (Search)	(james)	(reuben)	Replace (and, in fact, the other dialogue-based searches) don't work forward from the cursor, but from the next character. This is confusing at the start of the file, but there's no easy solution - and we have a "from start" option ...
/ (Search)	(james)	()		search for '"xxx'...? Pardon? Until someone explains what this means to me, it'll have to stay here ...
/ (Wimp)	(james)	(tim)		Ctrl-SELECT on window's close icon really kills...? Doesn't it?
/ (Undo)	(james)	()		UNDOing to the start of a file does not alter the "modified" file flag. Seems okay ...

\ (* TaskW)	(james)	()		Set default e_compile/save and run etc to save and then Filer_Run in a TW? This is done: e_saveandrun saves and Wimp_Task's, e_compile saves and Wimp_Task's in a TW. Filer_Run isn't entirely appropriate in this case anyway ...
\ (+ Throwback)	(james)	()		Linenumbers above &A000000 are coloured wrong...? Seems to be a bit higher ... but anyway this is fairly irrelevant.
\ (Keys)	(darren)()		No keys file entries for Alt-key combinations or PgUp/PgDown Major issues with keyboard handling here ...
\ (Commands)	(darren)()		FINDFILE's tab in a TW takes account of Prefix$Dir... inserts it, but there are issues with MULTICOMMANDS if we set Prefix$Dir for Zap itself ...
\ (Search)	(james)	()		Search forwards and the click an another window.  The 'previous' search string is used to find the next match - this has been reported as being an irritation. <= abort i-search not updating search window search string ... tricky, 'cos this is correct behaviour
