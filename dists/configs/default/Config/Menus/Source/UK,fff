| Proposed menu structure for Zap 1.45

#zap-main-menus

| Preprocessor labels used in this file. The MenuConf program uses these to generate
| a menu of options. Don't change the delimiter lines ...
| Start options
|   AllowDefaultDisplayOpts	'Display' in ib Options menu
|   AllowDefaultEditOpts	'Edit' in ib Options menu
|   AllowDefaultModeMenus	'Mode' in ib Options menu
|   *AllowDefaults		'Edit' 'Display' 'Mode' in ib Options menu
|   BitmapOnly			Bitmap fonts only (except Ctrl-Menu click)
|   Devel			'Program' menu (tech docs etc.)
|   *Email			'Email' menu (edit sigs & taglines)
|   *NewFonts			Different Fonts menu structure
|   *WindowSaveDefaults		'Save defaults' (options) in Zap window menu
|   AllowArbitraryMode          'Arbitrary mode' in ib Create menu
|   TerseWindowMenu             Make window menu shorter
|   *ConfigureSourceMenus	Include options to configure menus from source
|   HelpLauncherMenu		Include iconbar submenu for HTML/text manuals
| End options
|
| James uses:  AllowDefaults, Devel, NewFonts, WindowSaveDefaults
|              AllowArbitraryMode, TerseWindowMenu, ConfigureSourceMenus and Roland keyboards
|
| ZapCode:Tools.MakeMenus.MakeMenus -D AllowDefaults -D Devel -D NewFonts -D WindowSaveDefaults -D AllowArbitraryMode -D TerseWindowMenu -D ConfigureSourceMenus --output ZapUser:Config.Menus.UK ZapUser:Config.Menus.Source.UK
|
| Darren uses: AllowDefaults, Devel, Email, NewFonts, WindowSaveDefaults
|              and no Roland keyboards
|
| ZapCode:Tools.MakeMenus.MakeMenus -D AllowDefaults -D Devel -D Email -D NewFonts -D WindowSaveDefaults --output ZapUser:Config.Menus.UK ZapUser:Config.Menus.Source.UK
|
| Default should probably be:
|              AllowDefaults, Email, NewFonts, WindowSaveDefaults
|
| ZapCode:Tools.MakeMenus.MakeMenus -D AllowDefaults -D Email -D NewFonts -D WindowSaveDefaults --output ZapUser:Config.Menus.UK ZapUser:Config.Menus.Source.UK
|
| (or use MenuConf)

| Zap iconbar menu

.Zap.Iconbar "Zap"
	"Info"				HELP "Z" > INFOBOX
	*	"\Sread Zap's manual. \Rsee information about Zap."
#ifdef HelpLauncherMenu
	"Help"				HELP "Z" > .HelpLauncher
	*	"\Sread Zap's manual as text. \Rread the manual in different formats."
#endif
	"Options"			> .Options
	*	"\Rconfigure Zap."
	"Files"				> .Files
	*	"\Rperform various operations on the currently-loaded files."
	"Create"			> .Create
	*	"\Rcreate a new file."
#ifdef Devel
	-
	"Program"			> .Program
#endif
	"Quit"				QUIT

| Zap window menu

.Zap.Window "Zap"
	"File..."			SAVE > .File
	*	"\Ssave with the current filename. \Rperform various operations on this file."
	"Selection"			> .Zap.Selection
	*	"\Rdisplay operations that can be performed on the selected text."
	"Mode"				> MODELIST
	*	"\Rchange mode, or set options for the current mode."
	"Edit"				> .Edit
	*	"\Rchange various editing options."
	"Display"			> .Display
	*	"\Rchange various display options."
	"Misc"				> .Misc
	*	"\Raccess various miscellaneous operations."
#ifndef TerseWindowMenu
	-
	"Learn"				> .Learn
	*	"\Rset and execute learned sequences of commands."
	"Search"			> .Search
	*	"\Rperform various search operations."
	"Programming"			> .Programming
	*	"\Raccess various program development functions."
#endif
#ifdef Devel
	-
	"Program"			> .Program
	*	"\Raccess various Zap development functions."
#endif

| File type list menu (also used by menu click on save box)

.Zap.FileTypes "File type"
	"&FFF Text"			NEWTYPE &FFF
	"&FFD Data"			NEWTYPE &FFD
	"&FFB BASIC"			NEWTYPE &FFB
	"&FFA Module"			NEWTYPE &FFA
	"&FEB Obey"			NEWTYPE &FEB
	"&FAF HTML"			NEWTYPE &FAF
	"Other"				> TYPELIST
	*	"\Ruse a filetype not specified here."

| Mode menu (obsolete)

| Main font menu
.Zap.Fonts "Font"
#ifndef NewFonts
	"Bitmap (scaled)"		FONTTYPE 1 > BITMAPLIST
	*	"\Sselect scaled bitmap font display.|M\Rshow the available bitmap fonts."
	"Bitmap (at 1dpp)"		FONTTYPE 0 > BITMAPLIST
	*	"\Sselect 1dpp bitmap font display.|M\Rshow the available bitmap fonts."
	"Bitmap (at 2dpp)"		FONTTYPE 5 > BITMAPLIST
	*	"\Sselect 2dpp bitmap font display.|M\Rshow the available bitmap fonts."
	-
	"Anti-aliased VDU"		FONTTYPE 4 > FONTLIST
	*	"\Sselect anti-aliased font display, rendered by the FontManager.|M\Rshow the available anti-aliased fonts."
	"Anti-aliased DSA"		FONTTYPE 3 > FONTLIST
	*	"\Sselect anti-aliased font display, rendered by ZapRedraw.|M\Rshow the available anti-aliased fonts."
	"Anti-aliased size"		> FONTSIZE
	*	"\Rshow and alter the anti-aliased font size."
	"Aspect ratio x100"		> FONTASPECT
	*	"\Rshow and alter the anti-aliased font aspect ratio. Note that this is height/width, not the more usual width/height."
	-
	"System font"			FONTTYPE 2
	*	"\Sselect system font display."
#else
	"Bitmap font"			> BITMAPLIST
	*	"\Rshow the available bitmap fonts."
	"Anti-aliased font"		> FONTLIST
	*	"\Rshow the available anti-aliased fonts."
	-
	"Font display settings"		> .Fonts.Display
	*	"\Rchange the font display style."

.Fonts.Display "Display"
	"Bitmap (scaled)"		FONTTYPE 1
	*	"\Sselect scaled bitmap font display."
	"Bitmap (at 1dpp)"		FONTTYPE 0
	*	"\Sselect 1dpp bitmap font display."
	"Bitmap (at 2dpp)"		FONTTYPE 5
	*	"\Sselect 2dpp bitmap font display."
	-
	"Anti-aliased VDU"		FONTTYPE 4
	*	"\Sselect anti-aliased font display, rendered by the FontManager."
	"Anti-aliased DSA"		FONTTYPE 3
	*	"\Sselect anti-aliased font display, rendered by ZapRedraw."
	"Anti-aliased size"		> FONTSIZE
	*	"\Rshow and alter the anti-aliased font size."
	"Aspect ratio x100"		> FONTASPECT
	*	"\Rshow and alter the anti-aliased font aspect ratio. Note that this is height/width, not the more usual width/height."
	-
	"System font"			FONTTYPE 2
	*	"\Sselect system font display."

#endif

| Selection menu
.Zap.Selection "Selection"
	"Save..."			SAVESEL > SAVESEL
	"Send"				SENDSEL "X"
	"Process"			SELANYWHERE > .Selection.Process
	*	"\Rperform various operations on the current selection."
	"Word count"			WCSEL > WCSEL
	"Total"				TOTALSEL > TOTALSEL
	"Alter selection"		> .Selection.Alter
	*	"\Rmake a selection or access the clipboard."

| For the mode menus, titles are irrelevant

| Throwback mode menu 

.Mode.Throwback ""
	"Close when empty"		THROWBACK_FLAGSTOGGLE 0

| Byte mode menu
.Mode.Byte ""
	"Group bytes"			BYTE_FLAGSTOGGLE 9
	*	"\Stoggle whether bytes are grouped in the display."
	"Group ASCII"			BYTE_FLAGSTOGGLE 10
	*	"\Stoggle whether bytes are grouped in the ASCII display."
	"Group size"			CLONEBASE "Byte" > BYTE_GROUPSIZE
	*	"\Rset the number of bytes to a group."
	"Suppress ctrls"		BYTE_FLAGSTOGGLE 8 > BYTE_CONTROLREPLACE
	*	"\Stoggle whether control characters are displayed as another character.|M\Rset the character used."
	"Binary bytes"			BYTE_FLAGSTOGGLE 11
	*	"\Stoggle whether bytes are displayed in binary or hex."

| Word mode menu
.Mode.Word ""
	"Group words"			WORD_FLAGSTOGGLE 9
	*	"\Stoggle whether words are grouped in the display."
	"Group ASCII"			WORD_FLAGSTOGGLE 10
	*	"\Stoggle whether words are grouped in the ASCII display."
	"Group size"			CLONEBASE "Word" > WORD_GROUPSIZE
	*	"\Rset the number of words per group."
	"Suppress ctrls"		WORD_FLAGSTOGGLE 8 > WORD_CONTROLREPLACE
	*	"\Stoggle whether control characters are displayed as another character.|M\Rset the character used."
	"Binary words"			WORD_FLAGSTOGGLE 11
	*	"\Stoggle whether words are displayed in binary or hex."

| Code mode menu
.Mode.Code ""
	"Disassembler"			CLONEBASE "Code" > .Disassembler
	*	"\Rset disassembly options."
	"Unconditional"			CODE_FLAGSTOGGLE 31
	"Minimal"			CODE_FLAGSTOGGLE 30
	"Comment free"			CODE_FLAGSTOGGLE 29
	"Binary opcodes"		CODE_FLAGSTOGGLE 28
	"Condition back"		CODE_FLAGSTOGGLE 253

| Halfword mode menu

.Mode.Halfword ""
	"Group halfwords"		HALFWORD_FLAGSTOGGLE 9
	*	"\Stoggle whether halfwords are grouped in the display."
	"Group ASCII"			HALFWORD_FLAGSTOGGLE 10
	*	"\Stoggle whether halfwords are grouped in the ASCII display."
	"Group size"			CLONEBASE "HalfWord" > HALFWORD_GROUPSIZE
	*	"\Rset the number of halfwords per group."
	"Suppress ctrls"		HALFWORD_FLAGSTOGGLE 8 > HALFWORD_CONTROLREPLACE
	*	"\Stoggle whether control characters are displayed as another character.|M\Rset the character used."
	"Binary halfwords"		HALFWORD_FLAGSTOGGLE 11
	*	"\Stoggle whether halfwords are displayed in binary or hex."

| Word mode menu
.Mode.Doubleword ""
	"Group doublewords"		DOUBLEWORD_FLAGSTOGGLE 9
	*	"\Stoggle whether halfwords are grouped in the display."
	"Group ASCII"			DOUBLEWORD_FLAGSTOGGLE 10
	*	"\Stoggle whether halfwords are grouped in the ASCII display."
	"Group size"			CLONEBASE "DoubleWord" > DOUBLEWORD_GROUPSIZE
	*	"\Rset the number of double words per group."
	"Suppress ctrls"		DOUBLEWORD_FLAGSTOGGLE 8 > DOUBLEWORD_CONTROLREPLACE
	*	"\Stoggle whether control characters are displayed as another character.|M\Rset the character used."
	"Binary double words"			DOUBLEWORD_FLAGSTOGGLE 11
	*	"\Stoggle whether halfwords are displayed in binary or hex."


| Submenus

.File "File"
	"Save"				QUICKSAVE > SAVE
	"New view"			NEWVIEW
	"Print..."			QUICKPRINT > .File.Print
	*	"\Sopen the quick print window. \Raccess other printing methods."
	"Dump to text"			DUMPFILE
	"Spell..."			SPELL
	"Word count"			WC > WC
	-
	"Undo enabled"			TOGGLEUNDO
	"Read only"			READONLY
	"Save options"			> .File.SaveOptions
	*	"\Rset various options related to saving this file."
	-
	"Search..."			SEARCHBUF > SEARCHBUF
	"Replace..."			REPLACE > REPLACE
	"Goto..."			GOTO > GOTO

.File.Print "Print"
	"Quick"				QUICKPRINT > QUICKPRINT
	"Fancy"				PRINTFILE
	"Open"				OPENPRINTER
	"Close"				CLOSEPRINTER

.File.SaveOptions "Save options"
	"Strip spaces"			WFORMAT_ALTER 18
	*	"\Sset stripping extra spaces on save."
	"DOS text file"			FFLAGS_TOGGLE &DD1B
	*	"\Stoggle whether the file is saved with CRLF line endings."
	"Spool file"			FFLAGS_TOGGLE &DB1D
	*	"\Stoggle whether the file is saved with LFCR line endings."


.Edit "Edit"
=Options.Edit
	"Tab mode"			> .Edit.Tabs
	*	"\Rset the tab editing mode."
	"Entry options"			> .Edit.Entry
	*	"\Rset the entry options."
	"Edit options"			> .Edit.Edit
	*	"\Rset the editing options."
	-
	"Type of wrap"			> .Edit.Wrap
	*	"\Rset various text wrapping options."
	"Cursors"			> .Edit.Cursors
	*	"\Rset various cursor options."

.Edit.Tabs "Tab mode"
	"Unix tab"			TABMODE 0
	"As above"			TABMODE 1
	"Column tab"			TABMODE 2 > COLUMNTAB
	-
	"As spaces"			TABSASSPACES
	-
	"Toggle"			SWITCHTAB

.Edit.Entry "Entry"
	"Overwrite"			TOGGLEINSERT
	"Auto indent"			AUTOINDENT
	"Hex entry"			HEXASCII
	"Big endian"			WFORMAT_TOGGLE 17
	*	"\Stoggle the endianness."

.Edit.Edit "Edit options"
	"Line edit"			LINEEDIT
	"Non standard"			NONSTANDARD
	"Spell checking"		ASYOUTYPE
	"Block edit"			WINFO_ALTER 10
	*	"\Stoggle whether block editing is in use."

.Edit.Wrap "Wrap"
	"Window wrap"			WINDOWWRAP
	"Soft wrap"			SOFTWRAP
	"Word wrap"			WORDWRAP > WRAPWIDTH
	"Line wrap"			LINEWRAP
	"Infinite wrap"			INFINITEWRAP
	"Auto soft wrap"		AUTOSOFTWRAP
	"Strong soft wrap"		WINFO_ALTER 9
	*	"\Stoggle whether wrap points are treated as line ends, affecting cursor movement."

.Edit.Cursors "Cursors"
	"Line select"			LINESELECT
	"Smart"				WFORMAT_ALTER 25
	*	"\Stoggle whether 'words' are delimited by spaces or also by punctuation."
	"Confine H"			CONFINEHORIZONTALLY
	"Confine V"			CONFINEVERTICALLY
	"Free click"			FREECLICK


.Display "Display"
=Options.Display
	"Line numbers"			WFORMAT_TOGGLE 8 > .Display.LineNos
	*	"\Rset the line number style."
	"Tabs"				> .Display.Tabs
	*	"\Rset the tabbing display style."
	"Appearance"			> .Display.Appearance
#ifdef BitmapOnly
	"Font"				> BITMAPLIST
#else
	"Font"				> .Zap.Fonts
#endif
	*	"\Rset the font."
	"Colours"			> COLOURLIST
	*	"\Ralter the colours used in this window."
	"Buttons"			ZAPBUTTONS

.Display.LineNos "Line nos"
	"None"				LINENOS 0
	"Logical"			LINENOS 1
	"Physical"			LINENOS 2
	"Address"			LINENOS 3
	-
	"Hex nos"			TOGGLEHEX
	-
	"Margin width"			SETMARGINWIDTH > SETMARGINWIDTH
	"Colon"				COLONSEPARATOR
	-
	"Start line"			> STARTLINE
	*	"\Rset the line number of the start of the file."
	"Start addr"			> STARTADDR
	*	"\Rset the address of the start of the file."

.Display.Tabs "Tabs"
	"None"				TABDISPLAY 0
	"As spaces"			TABDISPLAY 1
	"As arrow"			TABDISPLAY 2
	"Dashes & arrow"		TABDISPLAY 3
	-
	"Tab character"			> TABCHAR
	*	"\Rset the character treated as a tab."

.Display.Appearance "Appearance"
	"Width"				SETWIDTH > SETWIDTH
	"Auto width"			WFLAGS_ALTER 6
	*	"\Stoggle calculating the display width automatically."
	-
	"Line spacing"			> LINESPACING
	*	"\Rset the line spacing."
	"Margin"			> MARGIN
	*	"\Rset the margin width."
	"Return character"		> RETURNCHAR
	*	"\Rset the return character."


.Misc "Misc"
	"Set default options"		MAKEDEFAULT > .Misc.CopyOpts
	*	"\Sset this window's options as the default for the current mode. \Rsave the current defaults, and to set all modes' defaults from this window."
	"Insert"			> .Misc.Insert
	*	"\Raccess various insertion operations."
	"Delete"			> .Misc.Delete
	*	"\Raccess various deletion operations."
	"Alter"				> .Misc.Alter
	*	"\Raccess various general editing operations."
	"Spell"				> .Misc.Spell
	*	"\Raccess spell-checking facilities."
	"Clipboard"			> .Misc.Clipboard
	*	"\Raccess global clipboard-related functions."
	-
	"Window"			> .Misc.Window
	*	"\Rperform operations on the current window."
	"Marks & indirection"		> .Misc.Marks
	*	"\Raccess Zap's marker facilities."
	"Keymap"			> BASEMAPLIST
	*	"\Rchange the current keymap."
	-
	"Disc navigation"		OWNEDBY "byte" > .Misc.Disc
	*	"\Raccess various disc navigation commands."
#ifdef Email
	-
	"Email"				> .Email
	*	"\Raccess email-related features."
#endif

.Misc.CopyOpts	"Defaults"
	"This mode"			MAKEDEFAULT
	"All modes"			MAKEDEFAULT 1
#ifdef WindowSaveDefaults
	"Save defaults"			SAVEOPTIONS
#endif

.Misc.Insert "Insert"
	"Date"				INSERTDATE
	"Time"				INSERTTIME
	"Split line"			SPLITLINE
	"Insert a file"			INSERTFILE

.Misc.Delete "Delete"
	"Delete word"			DELETE "WORD"
	"Delete to word start"		DELWORDSTART
	"Delete to word end"		DELWORDEND
	"Delete line"			DELLINE
	"Delete to line start"		DELTOSTART
	"Delete to line end"		DELTOEND
	"Delete file"			DELETE "FILE"
	"Delete to file start"		DELETE "FILESTART"
	"Delete to file end"		DELETE "FILEEND"
	-
	"Join line"			JOINLINE

.Misc.Alter "Alter"
	"Fast Undo"			FASTUNDO
	"Undo"				FULLUNDO
	"Redo"				REDO
	"Swap case"			SWAPCASE
	"Swap chars"			SWAPCHARS
	"Copy mode"			COPY
	"Format text"			FORMATTEXT
	"Strip spaces"			STRIPSPACES 3
	"Tabify"			STRIPSPACES 4
	"Untabify"			UNTABIFY

.Misc.Disc "Navigation"
	"Navigation box"		MOVEBOX
	"Last sector"			LASTSECTOR
	"Next sector"			NEXTSECTOR
	"Last cylinder"			LASTCYLINDER
	"Next cylinder"			NEXTCYLINDER
	"Last track"			LASTTRACK
	"Next track"			NEXTTRACK

.Misc.Window "Window"
	"Swap window"			SWAPWINDOW
	"Next window"			NEXTWINDOW
	"Next view"			NEXTVIEW
	-
	"Close window"			CLOSEWINDOW
	"Close other"			CLOSEOTHER
	"Toggle size"			TOGGLEWIND

.Misc.Marks "Marks"
	"Toggle mark" 			TOGGLEMARK
	"Last mark"			LASTMARK
	"Next mark"			NEXTMARK
	"Indirect jump"			INDIRECT

.Misc.Spell "Spell"
	"Spell..." 			SPELL
	"Replace"			SPELL_REPLACE
	"Check"				IMPRESSIONSPELL_BUF

.Misc.Clipboard "Clipboard"
	"Paste clip"			PASTE
	"Copy to clip"			KEEPREGION
	"Cut to clip"			CUT
	"Disown clipboard"		CLEARGC

#ifndef TerseWindowMenu
.Search "Search"
	"Forward"			SEARCHFORWARD
	"Backward"			SEARCHBACK
	"Last match"			LASTMATCH
	"Next match"			NEXTMATCH
	"Cancel"			CANCEL

.Learn "Learn"
	"Learn"				LEARN
	"Execute"			EXECUTE

.Programming "Programming"
	"Save and compile"		COMPILE
	"List of functions"		LISTFNS
#endif

.Disassembler "Disassembler"
	"Global"			CODE_FLAGSTOGGLE 254
	*	"\Stoggle whether options here apply to the debugger globally, rather than just in this window."
	-
	"Use STMFD R13 & LDMFD R13"	CODE_FLAGSTOGGLE 8
	*	"\Stoggle using stack notation for R13 STM/LDM."
	"Use APCS names"		CODE_FLAGSTOGGLE 9
	*	"\Stoggle using APCS register names."
	"Use LFM stack notation"	CODE_FLAGSTOGGLE 10
	*	"\Stoggle using stack notation with LFM/STM where possible."
	"Use LFS & SFS"			CODE_FLAGSTOGGLE 11
	*	"\Stoggle using LFS/SFS in preference to LFM/SFM."
	"Quote SWIs"			CODE_FLAGSTOGGLE 12
	*	"\Stoggle whether SWI names will be enclosed in quotes."
	"Use DCD for undefined"		CODE_FLAGSTOGGLE 13
	*	"\Stoggle using DCD instead of 'Undefined instruction', and enable BRK."
	"Use VDU"			CODE_FLAGSTOGGLE 14
	*	"\Stoggle using VDU x instead of SWI OS_WriteI+x."
	"Use more DCDs"			CODE_FLAGSTOGGLE 15
	*	"\Stoggle using DCD instead of ANDEQ, MOV Rn,Rn etc."
	"Use ADRL"			CODE_FLAGSTOGGLE 16
	*	"\Stoggle using ADRL/ADRX instead of ADR then ADD/SUB on same register."
	"Use ADRW"			CODE_FLAGSTOGGLE 17
	*	"\Stoggle using ADRW, LDR[B]W, STR[B]W when accessing R12."
	"Append 'L' to UMUL & SMUL"	CODE_FLAGSTOGGLE 18
	*	"\Stoggle appending L to UMUL etc., thus using the official forms."
	"Use LDRL"			CODE_FLAGSTOGGLE 19
	*	"\Stoggle using LDRL for two instruction register loads."
	"Use NOP"			CODE_FLAGSTOGGLE 20
	*	"\Stoggle using NOP instead of MOV R0,R0."
	"Use old PSR naming"		CODE_FLAGSTOGGLE 21
	*	"\Stoggle using the old PSR suffices _ctl, _flg, _all."
	"Wide display"			CODE_FLAGSTOGGLE 22
	*	"\Stoggle disassembling for wide display."
	"Use HS and LO"			CODE_FLAGSTOGGLE 23
	*	"\Stoggle using HS/LO instead of CS/CC."
	"Use shift notation"		CODE_FLAGSTOGGLE 24
	*	"\Stoggle using x<<y comments where possible."
	"Lower case registers"		CODE_FLAGSTOGGLE 25
	*	"\Stoggle forcing all register names to lower case."
	"Use #x,y notation"		CODE_FLAGSTOGGLE 26
	*	"\Stoggle using #x,y for non-standard constants."


.Selection.Process "Process"
	"Indent"			INDENT > INDENTBY
	"Outdent"			OUTDENT
	"GNU filters"			> .Selection.Process.GNU
	*	"\Suse GNU programs to perform the processing."
	"Sort"				FILTERSEL "ZF:Sort"
	*	"\Ssort the selection."
	"Format"			FILTERSEL "ZF:Format"
	*	"\Sformat the selection."
	"Swap case"			SWAPCASE
	*	"\Sswap the case of the selection."
	"UPPER case"			UPPERCASE
	*	"\Schange the selection to lower case."
	"lower case"			LOWERCASE
	*	"\Schange the selection to lower case."
	"Bracket ()"			BRACKETSEL "#(#)"
	*	"\Sparenthesise the selection"
	"Filter..."			FILTERSEL

.Selection.Process.GNU "GNU Filters"
	*	"\TGNU filters menu. If you need to supply option parameters, use instead 'Filter' in the Process menu."
	"Format (fmt)"			FILTERSEL "fmt"
	*	"\Sformat the selection."
	"Condense paragraphs"	FILTERSEL "sed -f ZF:removelf"
	*	"\Scondense paragraphs into single lines."
	-
	"Sort (sort)"			FILTERSEL "sort"
	*	"\Ssort the selection."
	"Unique (uniq)"			FILTERSEL "uniq"
	*	"\Sreduce to unique occurrences. Must be sorted."


.Selection.Alter "Alter sel"
	"Start selection"		SELREGION
	"Select buffer"			SELECTBUFFER
	-
	"Yank"				YANK
	"Keep"				KEEPREGION
	"Cut"				CUT 0
	"Kill"				CUT 1
	"Move"				MOVESEL
	"Copy"				COPYSEL
	"Paste"				PASTE
	"Clear"				CLEARSEL

#ifdef HelpLauncherMenu
.HelpLauncher "Help"
	"Mode"				> MODEHELPLIST
	"HTML manual"			WIMPTASK "Filer_Run ZapResources:HTMLManual.Contents"
	*	"\Sread Zap's manual as HTML (requires a web browser)."
	"Text manual"			HELP "Z"
	*	"\Sread Zap's manual as text."
#endif

.Options "Options"
	"Save options"			SAVEOPTIONS
	-
	"Misc"				> .Options.Misc
	*	"\Rset various miscellaneous optioins."
#ifdef | AllowDefaults AllowDefaultModeMenus
	"Mode"				> MODELIST
	*	"\Rchange which mode this menu configures. This is also the default mode."
#endif
	"Clone modes..."		CLONEBOX > CLONEBOX
#ifdef | AllowDefaults AllowDefaultEditOpts
	"Edit"				> .Options.Edit
	*	"\Rchange various editing options."
#endif
#ifdef | AllowDefaults AllowDefaultDisplayOpts
	"Display"			> .Options.Display
	*	"\Rchange various display options."
#endif
	"Minibuffer"			> MINIMENU
	*	"\Rconfigure the minibuffer."
	"Cursor types"			> CURSORMENU
	*	"\Rconfigure Zap's cursors."
	-
	"Edit config"			WIMPTASK "Filer_OpenDir ZapUser:Config" > .Options.Configure
	*	"\Sopen the configuration directory. \Ropen individual configuration files."
	"Create & reload keys"		WIMPTASK "Run ZapCode:Config.CreateConf -script ZapCode:Config.RunScript":RELOADKEYS
	*	"\Srecreate and load the current configuraton. This will use all file configuration changes (keys, file types, etc.) that you hve made, except for Menus."
#ifdef Email
	-
	"Email"				> .Email
	*	"\Raccess email-related features."
#endif

.Options.Misc "Misc"
	"Autoload"			> .Options.Misc.Autoload
	*	"\Rset which extensions to load automatically when needed."
	"Auto-delete files"		MISCOPS 0
	*	"\Stoggle whether a file is deleted from memory when you close its last window."
	"Auto-clear regions"		MISCOPS 1
	*	"\Stoggle whether the selection is automatically cleared as you type."
	"Undo supported"		TOGGLEUNDO
	*	"\Stoggle whether undo is enabled by default."
	"Flashing cursor"		MISCOPS 3
	*	"\Stoggle the flashing cursor."
	"Check datestamp"		MISCOPS 4
	*	"\Stoggle checking the datestamp of a file before saving it."
	"Auto-clr search"		MISCOPS 5
	*	"\Stoggle clearing the search window when it is opened."
	"Confine cursor"		MISCOPS 6
	*	"\Stoggle confining the cursor the the visible area of the window."
	"Trap MSDOS files"		MISCOPS 7
	*	"\Stoggle detecting MSDOS and Spool files."
	"Be tolerant"			MISCOPS 13
	*	"\Stoggle tolerating broken Wimp messages."
	"Silent operation"		MISCOPS 14
	*	"\Stoggle silent operation (no beeps)."
	"No anti-aliasing"		MISCOPS 15
	*	"\Stoggle anti-aliasing of fonts."
	"Remove H scroll"		MISCOPS 18
	*	"\Stoggle removing the horizontal scrollbar if it isn't needed."
	"Force startup command"		MISCOPS 19
	*	"\Stoggle forcing the startup command to be executed, even when files are being loaded as Zap starts."
	"Minibuffer autowidth"		MISCOPS 20
	*	"\Stoggle whether the minibuffer is opened with the same width as the window to which it is attached."
	"Custom tile sprites"		MISCOPS 21
	*	"\Stoggle whether Zap's dialogues are drawn with custom tile sprites (RISC OS 3.5 or greater)."

.Options.Misc.Autoload "Autoload"
	"FlashCar"			MISCOPS 8
	*	"\Stoggle whether FlashCar (which flashes the cursor in dialogue boxes) is loaded with Zap."
	"LineEditor"			MISCOPS 9
	*	"\Stoggle whether the LineEditor is loaded as needed. LineEditor makes working with task windows much less painful."
	"Disassembler"			MISCOPS 10
	*	"\Stoggle whether the extended disassembler is loaded as needed."
	"ExtBASICasm"			MISCOPS 11
	*	"\Stoggle whether the extended assembler is loaded as needed."
	"HidePointer"			MISCOPS 12
	*	"\Stoggle whether HidePointer (which hides the mouse pointer while you type) is loaded with Zap."
	"IconClear"			MISCOPS 16
	*	"\Stoggle whether IconClear (which allows you to delete an icon's text using the mouse) is loaded with Zap."

.Options.Configure "Configure"
	"Keys"				FINDFILE "<Zap$Keys>"
	*	"\Sopen Zap's core key bindings configuration file."
#ifndef ConfigureSourceMenus
	"Menus"				FINDFILE "<Zap$Menus>"
	*	"\Sopen Zap's menu configuration file."
#else
	"Menus"				FINDFILE "<Zap$Menus>" > .Options.Configure.Menus
	*	"\Sopen Zap's menu configuration file. \Rconfigure Zap's menu from source."
#endif
	"Settings"			FINDFILE "<Zap$Settings>"
	*	"\Sopen Zap's miscellaneous settings file."
	"ClickSend"			FINDFILE "<Zap$ClickSend>"
	*	"\Sopen Zap's Alt-click configuration file."
	"Types (high)"			FINDFILE "ZapUser:Config.TypesHigh"
	*	"\Sopen Zap's filetype configuration file (overrides)."
	"Types (low)"			FINDFILE "ZapUser:Config.TypesLow"
	*	"\Sopen Zap's filetype configuration file."
	"Templates"			WIMPTASK "Filer_Run <Zap$Templates>"
	*	"\Sopen Zap's window template file."
	"Zap extensions"		WIMPTASK "Filer_OpenDir ZapModules:"
	*	"\Sopen Zap's extension modules directory, allowing you to directly configure them."

#ifdef ConfigureSourceMenus
.Options.Configure.Menus "Menus"
	"Menus source"			FINDFILE "ZapUser:Config.Menus.Source.<Zap$Country>"
	*	"\Sopen Zap's source menu configuration file."
	"Run MenuConf"			WIMPTASK "TaskWindow -name MenuConf -quit ""ZapCode:Tools.MakeMenus.MenuConf -E -T"""
	*	"\Srun MenuConf to configure and then generate Zap's menus."
	"Rebuild current config"	WIMPTASK "TaskWindow -name MenuConf -quit ""ZapCode:Tools.MakeMenus.MenuConf -f ZapUser:Config.Menus.<Zap$Country> -n -E -T"""
	*	"\Srebuild the menus as currently configured."
	"Rebuild defaults"		WIMPTASK "TaskWindow -name MenuConf -quit ""ZapCode:Tools.MakeMenus.MenuConf -n -E -T"""
	*	"\Sgenerate the default menus from the source file."
#endif

.Files "Files"
	"All"				> .Files.All
	*	"\Rperform actions on all open files."
	"To front"			TOFRONTLIST > TOFRONTLIST
	*	"\Rbring a file to the front."
	"Save"				SAVELIST > SAVELIST
	*	"\Rsave a file."
	"New view"			NEWVIEWLIST > NEWVIEWLIST
	*	"\Ropen a new view on a file."
	"Close"				REMOVELIST > REMOVELIST
	*	"\Rclose a file."
	"Hide"				CLOSELIST > CLOSELIST
	*	"\Rhide a file."

.Files.All "All files"
	"Save"				SAVEALL
	"Save & close"			SAVEANDCLOSEALL
	"Save & discard"		SAVEANDDISCARDALL
	-
	"Close"				CLOSEALL
	"Discard"			DISCARDALL


.Create "Create"
	"New file"			> .Zap.FileTypes
	*	"\Rcreate a new file."
	"Untyped file"			CREATEFILE -1
	*	"\Rcreate an untyped file."
#ifdef AllowArbitraryMode
	"Arbitrary mode"		> Newfile
	*	"\Rcreate a file of arbitrary mode and type."
#endif
	"Task window"			TASKWINDOW
	-
	"Get module"			> GETMODULE
	*	"\Rgrab a module from memory."
	"Get workspace"			> GETWORKSPACE
	*	"\Rgrab a module's workspace from memory."
	-
	"Read disc..."			DZAPBOX > DZAPBOX
	*	"\Rgrab data from a disc."
	"Read memory..."		MZAPBOX > MZAPBOX
	*	"\Rgrab data from memory."
	"Get dynamic area"		GETDYNAMICAREA > GETDYNAMICAREA
	*	"\Rgrab a dynamic area."


#ifdef Devel

.Program "Program"
	"Open Docs"			HELP "D"
	"Open Code"			WIMPTASK "Filer_OpenDir <Zap$Dir>.Code"
	"Open Technical docs"		WIMPTASK "Filer_OpenDir ZapResources:Docs.Technical" > .Program.Technical
	"Reload config"			RELOADKEYS
	*	"\Sreload the current configuration. You will need to recreate it if you have changed anything."
	"Create config"			WIMPTASK "Run ZapCode:Config.CreateConf -script ZapCode:Config.RunScript"
	*	"\Srecreate the current configuration. You will then need to reload it for the changes to take effect."

.Program.Technical "Technical"
	*	"\Ttechnical documentation menu."
	"E-Command"		WIMPTASK "Filer_Run ZapResources:Docs.Technical.E-Command"
	*	"\Sopen E-Command."
	"E-Cursors"		WIMPTASK "Filer_Run ZapResources:Docs.Technical.E-Cursors"
	*	"\Sopen E-Cursors."
	"E-Entry"		WIMPTASK "Filer_Run ZapResources:Docs.Technical.E-Entry"
	*	"\Sopen E-Entry."
	"E-File"		WIMPTASK "Filer_Run ZapResources:Docs.Technical.E-File"
	*	"\Sopen E-File."
	"E-Flags"		WIMPTASK "Filer_Run ZapResources:Docs.Technical.E-Flags"
	*	"\Sopen E-Flags."
	"E-Keycodes"		WIMPTASK "Filer_Run ZapResources:Docs.Technical.E-Keycodes"
	*	"\Sopen E-Keycode."
	"E-Menu"		WIMPTASK "Filer_Run ZapResources:Docs.Technical.E-Menu"
	*	"\Sopen E-Menu."
	"E-Vars"		WIMPTASK "Filer_Run ZapResources:Docs.Technical.E-Vars"
	*	"\Sopen E-Vars."
	"E-Windows"		WIMPTASK "Filer_Run ZapResources:Docs.Technical.E-Windows"
	*	"\Sopen E-Windows."
	"E-Zapcalls"		WIMPTASK "Filer_Run ZapResources:Docs.Technical.E-Zapcalls"
	*	"\Sopen E-Zapcalls."

#endif


#ifdef Email
.Email "Email"
	"Edit .sigs"			EMAIL_EDITSIGFILES
	"Edit taglines"			EMAIL_EDITTAGlINES
#endif
