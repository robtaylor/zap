/*	misc.c
	© James Aylett	*/

#include "misc.h"

void close_misc2()
{
  Misc2Open=FALSE;
  close_child(Misc2);

  update_key(0x114, Misc2, 7);
  update_key(0x121, Misc2, 16);

  save_misc();
  free_keys();
}

void open_misc2()
{
  load_misc();

  key_string(0x114, Misc2, 7, "");
  key_string(0x121, Misc2, 16, "120");

  set_flag(Misc2, 11, ZapGlobalOptions.switches.flags.check_date_on_save);
  set_flag(Misc2, 13, ZapGlobalOptions.switches.flags.trap_msdos_files);
  set_flag(Misc2, 12, ZapGlobalOptions.opt_flags.flags.auto_delete_files);

  if (ZapGlobalOptions.opt_flags.flags.popup_minibuffer)
  {
    Icon_Deselect(windows[Misc2].openblock.window, 2);
    Icon_Select(windows[Misc2].openblock.window, 3);
  }
  else
  {
    Icon_Select(windows[Misc2].openblock.window, 2);
    Icon_Deselect(windows[Misc2].openblock.window, 3);
  }

  set_flag(Misc2, 8, ZapGlobalOptions.switches.flags.minibuffer_antialiased);
  set_flag(Misc2, 14, ZapGlobalOptions.switches.flags.inhibit_beeping);
  set_flag(Misc2, 18, ZapGlobalOptions.switches.flags.tolerate_broken_messages);
  set_flag(Misc2, 19, ZapGlobalOptions.switches.flags.hide_horizontal_scrollbar);

  open_child(Misc2, 7);
  Misc2Open=TRUE;
}

void misc2click()
{
  if (result->mouse.button.data.menu==1) return;
  switch (result->mouse.icon)
  {
    case 11 : ZapGlobalOptions.switches.flags.check_date_on_save ^= 1; break;
    case 12 : ZapGlobalOptions.opt_flags.flags.auto_delete_files ^= 1; break;
    case 13 : ZapGlobalOptions.switches.flags.trap_msdos_files ^= 1; break;
    case 14 : ZapGlobalOptions.switches.flags.inhibit_beeping ^= 1; break;
    case 8 : ZapGlobalOptions.switches.flags.minibuffer_antialiased ^= 1; break;
    case 18 : ZapGlobalOptions.switches.flags.tolerate_broken_messages ^= 1; break;
    case 19 : ZapGlobalOptions.switches.flags.hide_horizontal_scrollbar ^= 1; break;
    case 2 :
      ZapGlobalOptions.opt_flags.flags.popup_minibuffer = 0;
      Icon_Select(windows[Misc2].openblock.window, 2);
      Icon_Deselect(windows[Misc2].openblock.window, 3);
      break;
    case 3 :
      ZapGlobalOptions.opt_flags.flags.popup_minibuffer = 1;
      Icon_Deselect(windows[Misc2].openblock.window, 2);
      Icon_Select(windows[Misc2].openblock.window, 3);
      break;
    case 4 : /* minibuffer foreground */
      open_colours(1,	ZapGlobalOptions.minibuffer_foreground_palette.data.red,
      			ZapGlobalOptions.minibuffer_foreground_palette.data.green,
      			ZapGlobalOptions.minibuffer_foreground_palette.data.blue);
      break;
    case 5 : /* minibuffer background */
      open_colours(2,	ZapGlobalOptions.minibuffer_background_palette.data.red,
      			ZapGlobalOptions.minibuffer_background_palette.data.green,
      			ZapGlobalOptions.minibuffer_background_palette.data.blue);
      break;
  }
}

void close_misc()
{
  MiscOpen=FALSE;
  close_child(Misc);

  update_key(0x10e, Misc, 8);
  update_key(0x10f, Misc, 9);

  update_key(0x107, Misc, 26);
  update_key(0x100, Misc, 15);
  update_key(0x101, Misc, 16);
  update_key(0x11f, Misc, 28);
  update_key(0x120, Misc, 29);

  save_misc();
  free_keys();
}

void open_misc()
{
  load_misc();

  key_string(0x10e, Misc, 8, "");
  key_string(0x10f, Misc, 9, "");

  key_string(0x107, Misc, 26, "");
  key_string(0x100, Misc, 15, "");
  key_string(0x101, Misc, 16, "");
  key_string(0x11f, Misc, 28, "");
  key_string(0x120, Misc, 29, "");

  if(KeysFile[0x11c]!=NULL)
    set_indtext(windows[Misc].openblock.window, 30, attribs_as_text(KeysFile[0x11c]+1));
  else
    set_indtext(windows[Misc].openblock.window, 30, "");

  set_flag(Misc, 19, ZapGlobalOptions.opt_flags.flags.quick_print_notitle);
  set_flag(Misc, 20, ZapGlobalOptions.opt_flags.flags.fancy_print_notitle);
  set_flag(Misc, 21, ZapGlobalOptions.opt_flags.flags.fancy_print_sideways);

  switch(ZapGlobalOptions.opt_format.flags.mode_number)
  {
    case 0 : set_indtext(windows[Misc].openblock.window, 6, "Text"); break;
    case 1 : set_indtext(windows[Misc].openblock.window, 6, "Byte"); break;
    case 2 : set_indtext(windows[Misc].openblock.window, 6, "Word"); break;
    case 3 : set_indtext(windows[Misc].openblock.window, 6, "Ascii"); break;
    case 4 : set_indtext(windows[Misc].openblock.window, 6, "Code"); break;
    default :
      sprintf(output, "%d", ZapGlobalOptions.opt_format.flags.mode_number);
      set_indtext(windows[Misc].openblock.window, 6, output);
      break;
  }

  open_child(Misc, 8);
  MiscOpen=TRUE;
}

void miscclick()
{
  if(result->mouse.button.data.menu==1 && result->mouse.icon!=39) return;
  switch(result->mouse.icon)
  {
    case 19 : ZapGlobalOptions.opt_flags.flags.quick_print_notitle ^= 1; break;
    case 20 : ZapGlobalOptions.opt_flags.flags.fancy_print_notitle ^= 1; break;
    case 21 : ZapGlobalOptions.opt_flags.flags.fancy_print_sideways ^= 1; break;
    case 22 : ZapGlobalOptions.opt_format.flags.mode_number--;
      switch(ZapGlobalOptions.opt_format.flags.mode_number)
      {
        case 0 : set_indtext(windows[Misc].openblock.window, 6, "Text"); break;
        case 1 : set_indtext(windows[Misc].openblock.window, 6, "Byte"); break;
        case 2 : set_indtext(windows[Misc].openblock.window, 6, "Word"); break;
        case 3 : set_indtext(windows[Misc].openblock.window, 6, "Ascii"); break;
        case 4 : set_indtext(windows[Misc].openblock.window, 6, "Code"); break;
        default :
          sprintf(output, "%d", ZapGlobalOptions.opt_format.flags.mode_number);
          set_indtext(windows[Misc].openblock.window, 6, output);
          break;
      }
      break;
    case 23 : ZapGlobalOptions.opt_format.flags.mode_number++;
      switch(ZapGlobalOptions.opt_format.flags.mode_number)
      {
        case 0 : set_indtext(windows[Misc].openblock.window, 6, "Text"); break;
        case 1 : set_indtext(windows[Misc].openblock.window, 6, "Byte"); break;
        case 2 : set_indtext(windows[Misc].openblock.window, 6, "Word"); break;
        case 3 : set_indtext(windows[Misc].openblock.window, 6, "Ascii"); break;
        case 4 : set_indtext(windows[Misc].openblock.window, 6, "Code"); break;
        default :
          sprintf(output, "%d", ZapGlobalOptions.opt_format.flags.mode_number);
          set_indtext(windows[Misc].openblock.window, 6, output);
          break;
      }
      break;
    case 30 : /* change attributes value */
      attribsmenu();
      break;
  }
}

char *attribs_as_text(char *in)
{
  int i,j=0;

  i=(int)strtol(in, NULL, 16);

  if(i&8)  output[j++]='L';
  if(FilerPatch_Support)
  {
    if(i&64)
    {
      if(i&128)
        output[j++]='H';
      else
        output[j++]='h';
    }
  }

  if(i&1)  output[j++]='W';
  if(i&2)  output[j++]='R';

  output[j++]='/';

  if(i&16) output[j++]='w';
  if(i&32) output[j++]='r';

  output[j]='\0';
  return output;
}
