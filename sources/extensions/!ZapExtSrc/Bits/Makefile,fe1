# Make file for ZapBits extension
# using Acorn tools amu, objasm, link

# For the standard build name:
#	amu
# For alternative build names:
#	amu BUILD=foo
#	amu BUILD=foo-42
#    "-<n>" is automatically appended if you omit it.
# BTW, give 'make' lots of memory ;-)

# To build for Zap 1.40, append "INTL=no" to the command line

# Targets:
#	ZapBits		Assemble .s, build .h, and link. This is the default
#	ZapBitsHdrs	Remake the automatically-created header files
#	Clean		Wipe the .o and .t (header marker) files

OBJECTS		= o.module o.commands o.dscomms o.tmtcomms o.utils
HEADERS		= t.module t.commands t.dscomms t.tmtcomms t.utils

TARGET		= ZapBits
ZapS		= <ZapSource$Dir>
as		= objasm
asflags		= -o $@ -depend !Depend -throwback -stamp -quit
link		= link
linkPartFlags	= -aof
linkFlags	= -bin -B &00000000

__BUILD		= -PD "BUILD SETS \"$(BUILD)\""
__INTL		= -PD "INTL SETS \"$(INTL)"\""
__TMFS		= -PD "TMFS SETS \"$(TMFS)"\""
__HIST		= -PD "HIST SETS \"$(HIST)"\""

ZapBits:	$(OBJECTS) ZapBitsHdrs
		$(link) $(linkFlags) -o $(TARGET) $(OBJECTS)
		Settype $(TARGET) Module
		Run $(ZapS).data.MCopy $(TARGET) ZapModules:!ZapBits.ZapBits
		@Echo Finished

ZapBitsHdrs:	$(HEADERS)
		@Echo Made headers

Clean:
		IfThere o.* Then Wipe o.* ~CF~R~V
		IfThere t.* Then Wipe t.* ~CF~R~V

# The .t file date gives the last time the header was created from the file.
# This is usually not the .h date as the .h file is not stamped if the file
# contents doesn't change.

.SUFFIXES: .t .s

.s.t:;		@Run $(ZapS).data.StoH s.$* h.$*
		Create t.$* 0

.s.o:;		$(as) $(asflags) $(__BUILD) $(__INTL) $(__TMFS) $(__HIST) s.$*

# Dependencies:

t.module: s.module
t.utils: s.utils
t.dscomms: s.dscomms
t.commands: s.commands
t.tmtcomms: s.tmtcomms

o.module: s.module
o.utils: s.utils
o.dscomms: s.dscomms
o.commands: s.commands
o.tmtcomms: s.tmtcomms

# Dynamic dependencies:

