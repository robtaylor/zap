*****************************************************************
* ReadMe file for Fonts directory				*
*****************************************************************

0. Index
~~~~~~~~
1. Introduction
2. Font name conventions
3. Sub-styles
4. Links
5. Thanks
Format of Zap font file
Format of Zap font link file


1. Introduction
~~~~~~~~~~~~~~~
This directory contains bitmap fonts in a format understood by Zap
(described ath the end of this file).

Some fonts just contain characters (codes &20-&FF) and some contain control
characters (&00-&1F) as well. Those without control characters have A-Z
copied to 1-26 etc when Zap loads them.

A detailed list of who supplied the fonts and the copyright for the fonts is
given in the Copyright file.


2. Font name conventions
~~~~~~~~~~~~~~~~~~~~~~~~
In general the recommended naming convention is as follows:

 <size>.<name><style><ctrl>

where:

 <name> is the name of the font. Usually the first 3 letters of the author
	or "X" for X windows style fonts or "C" for `clean' fonts.

 <style> is the font style: Eg
	""	  = Default
	"Bold"	  = Bold
	"Italic"  = Italic
	"BItalic" = Bold and Italic
	"Thin"	  = Thin
	"rk"	  = Roman + Kana font
	"ss"	  = Sans serif
	"Script"  = Script (handwriting) style

Styles may be exaggerated (in some aspect) by appending a '+' e.g. 'Bold++'.

 <ctrl> is the type of control characters used by the font: Eg
	"Dec"	= Decimal
	"Hex"	= Hex
	"Dom"	= Old Zap control characters.

There may be some excetptions to the naming convention.  Rarely used fonts
which are very small may be placed together in a single directory called
'-Small'.  There is also scope for placing vey large fonts in the directory
called 'Misc'.

Font files are typed as Data files.


3. Sub-styles
~~~~~~~~~~~~~
If the chosen font is a directory then Zap uses any files inside it named
'0' as the main font.  Sub-styles may be included in such directories by
placing other files there.

Currently in Zap, if the appripriately named sub-style is unavailable, the
base font is used in its place.

The naming scheme is as follows:

The '0' font is used as the default, base/regular/normal font.

The 'B' font is referred to by Zap as 'Bold';
 "  'I'   "   "     "	 "   "  "   " 'Italic';
 "  'S'   "   "     "	 "   "  "   " 'Strikethrough';
 "  'U'   "   "     "	 "   "  "   " 'Underlined';

Combinations of any of the above fonts may be made, in which case the
letters should appear in reverse alphabetical order, e.g. 'USIB' for all
the styles combined.

These fonts may not always actually fit into their respective descriptive
categories.  If the base font is fairly bold, it may be reasonable to make
the 'Bold' font very thin.  Similarly, if the base font is italicised
then the italic sub-style may be normal.  The underlined font may sometimes
be bold and italic, or sometimes, something completely different.

Though not all of the available fonts are have all their sub-styles present,
there are some which do.  Fonts styles should degrade gracefully in the
owning application, so if the 'Italic + Bold' style is not available,
'Bold', and 'Italic' fonts should be tried first before reverting to the
base font.

Font manipulation utilities are provided for those who wish to make their
own customised fonts.


4. Links
~~~~~~~~
Text files are allowed to be used as soft links.  Links are not allowed to
point at other links.  Currently, they should not be placed in the first
level of the directory structure.  If they are placed there, then when the
user selects a link, the font linked to will be the one which gets ticked in
Zap's font menus.

The exception to the above is a file called '0' which will not be indicated
in the menu structure.  This is the font which is chosen if the user chooses
the directory which contains it.  It may be a link.


5. Thanks
~~~~~~~~~
Thanks in particular to the following for designing fonts, converting fonts
from pubic domain sources, and creating font mainipulation utilities:

 Ben Avison		(see 08x16.Ben)
 James Bursa		(see 08x20.Latin2)
 Nick Craig-Wood	(see 08x16.NCW / PC)
 Martin Ebourne		(see 08x14 - also bdf->zap)
 Dave Lawrence		(see the Teletext fonts and 08x17.DavePixel)
 Christian Ludlam	(see bdf2zap and the UCS fonts)
 George Saliaris	(see 08x16.Sal)
 Darren Salt		(see 08x16.FBoldDS and sub-styles)
 Dominic Symes		(see 08x08.SysDom etc)
 Reuben Thomas		(see 06x08.Z88 and some system variants at 08x08)
 Alexander Thoukydides  (see 07x14.XAlex and sub-styles - also FontUtils)
 Tim Tyler		(see 08x16.Man and sub-styles etc)

If you'd like your fonts included then please send them in. Please make it
clear who owns the copyright on the fonts and what the conditions are for
including them.


*****************************************************************
* Format of Zap font file					*
*****************************************************************

There are two font formats in use: the original format, used for fonts of up
to 256 glyphs, and the new fonrmat where up to 4 billion glyphs are divided
into chunks. Font files must be typed Data (FFD).

The origianl file format:

	 +0 "ZapFont",13
	 +8 Width of each font character in pixels
	+12 Height of each font character in pixels
	+16 First character code given (eg 0 or &20)
	+20 Last character code given +1 (eg &100)
	+24 Reserved (0)
	+28 Reserved (0)
	+32 Bitmaps (starting at character code given in #&10)
	     Format of bitmaps is as for ZapRedraw documentation.
	     Characters >=256 are used for cursors - see ZapRedraw docs.
	     Any glyphs above 256 in the file are ignored.


The big file format:

	 +0 magic word 'ZRUF' (ZapRedraw UCS Font)
	 +4 reserved SBZ
	 +8 width of glyphs in px
	+12 height of glyphs in px
	+16 size of chunk directory
	+20 offset to null glyph / 0
	+24 reserved SBZ
	+32 reserved SBZ

Immediately following this is the chunk directory, which is !(header+16)
bytes long. Font files are split into chunks of 256 glyphs each as specified
by the directory. Each chunk directory entry consists of 4 words with the
following format:

	 +0 chunk number (eg a chunk containing glyph &2A3F puts &2A00 here)
	 +4 number of glyphs in this chunk
	 +8 file offset from start of header of glyph data
	+12 reserved, must be 0

(+12 is used internally by ZapRedraw to point to the glyph data in memory
once loaded).

The glyph data is in the same format as held by ZapRedraw in 1 bpp modes (see
the ZapRedraw documentation). However, if the chunk contains less than 256
glyphs, the data is preceded by a 256 byte translation table: for each glyph
in the chunk, the table gives the character offset into the data + 1, or 0 if
the glyph is not defined. The table must not be present for chunks containing
all 256 glyphs.

Chunk 0 is currently assumed to be present and full (including control
character glyphs). Where possible, fonts should use the Acorn Extended Latin
1 encoding for chunk 0.

The null glyph offset gives the file offset from the start of the header to
the glyph to be rendered where a glyph not otherwise defined in the file is
requested. If 0, the null glyph is not present and the dotted box cursor
character is used instead.

The translation table is there to avoid padding chunks to 256 glyphs - in
some of the fonts I had there were 2 glyphs in some chunks, and the format
overhead rocketed to 80%; reducing the chunk size didn't help. bdf2zap
outputs some statistics on the format overhead when it converts fonts.


*****************************************************************
* Format of Zap font link file					*
*****************************************************************

This format was designed to be simple, self-explanatory and short. Link
files must be typed Text (FFF).

File format:

	#&00 "ZFLK",10
	#&05 Path of the font linked to, zero-terminated.
