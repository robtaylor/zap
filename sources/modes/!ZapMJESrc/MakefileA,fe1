# Project:	ZapMJE, by M.Ebourne


# Toolflags:

# CCflags		= -c -ffa -depend !Depend -J -throwback -apcs 3/32bit -zM -zps1 -DDEBUG
CCflags		= -c -ffa -depend !Depend -J -throwback -apcs 3/32bit -zM -zps1
Linkflags	= -o $@ -bin -s @.Stuff.Labels
#ObjAsmflags	= -depend !Depend -ThrowBack -apcs 3/32bit -PD "debug SETS \"0=0\""
ObjAsmflags	= -depend !Depend -ThrowBack -apcs 3/32bit -PD "debug SETL {FALSE}"
# -PD "debug SETS \"0=0\""
Squeezeflags	= -o $@
Copyflags	= A~C~DF~L~N~V


# Pseudo targets to suppress messages and set up template system

.SILENT:
.SUFFIXES:	.s .c .o .h .t

# Object files of each of the modules in this program (excluding c.DateStamp)

Headers		= t.Assembler t.C t.Commands t.Common t.C_Redraw t.Header \
		  t.Support t.Tables

Files		= o.Assembler o.C o.Commands o.Common o.C_Redraw o.Header \
		  o.Routines o.Support o.Tables

# Main target

ZapMJE:		$(Files) $(Headers)
		Echo Linking project
		Link $(Linkflags) $(Files)
		SetType <Prefix$Dir>.$@ Module
		Run <ZapSource$Dir>.data.MCopy <Prefix$Dir>.$@ <ZapMJE$Dir>.ZapMJE
		Echo Project make completed ok

# Templates

.s.t:;		Echo Updating h.$*
		<ZapSource$Dir>.Data.StoH $< h.$*
		Create <Prefix$Dir>.$@

.s.o:;		Echo Assembling $<
		objasm $(ObjAsmflags) $< $@

.c.o:;		Echo Compiling $<
		cc $(CCflags) $< -o $@

# Leave the rest to the automatic dynamic system

# Dynamic dependencies:
